<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.DirectoryServices.4.0.0.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryInterSiteTransport">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryInterSiteTransport.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryInterSiteTransport.#ctor(System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryInterSiteTransport.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryInterSiteTransport.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryInterSiteTransport.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryInterSiteTransport.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryInterSiteTransport.BridgeAllSiteLinksGet">
            <summary>Sets the shim of ActiveDirectoryInterSiteTransport.get_BridgeAllSiteLinks()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryInterSiteTransport.BridgeAllSiteLinksSetBoolean">
            <summary>Sets the shim of ActiveDirectoryInterSiteTransport.set_BridgeAllSiteLinks(Boolean value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryInterSiteTransport.Constructor">
            <summary>Sets the shim of ActiveDirectoryInterSiteTransport.ActiveDirectoryInterSiteTransport()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryInterSiteTransport.Dispose">
            <summary>Sets the shim of ActiveDirectoryInterSiteTransport.Dispose()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryInterSiteTransport.DisposeBoolean">
            <summary>Sets the shim of ActiveDirectoryInterSiteTransport.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryInterSiteTransport.FindByTransportTypeDirectoryContextActiveDirectoryTransportType">
            <summary>Sets the shim of ActiveDirectoryInterSiteTransport.FindByTransportType(DirectoryContext context, ActiveDirectoryTransportType transport)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryInterSiteTransport.GetDirectoryEntry">
            <summary>Sets the shim of ActiveDirectoryInterSiteTransport.GetDirectoryEntry()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryInterSiteTransport.IgnoreReplicationScheduleGet">
            <summary>Sets the shim of ActiveDirectoryInterSiteTransport.get_IgnoreReplicationSchedule()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryInterSiteTransport.IgnoreReplicationScheduleSetBoolean">
            <summary>Sets the shim of ActiveDirectoryInterSiteTransport.set_IgnoreReplicationSchedule(Boolean value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryInterSiteTransport.Save">
            <summary>Sets the shim of ActiveDirectoryInterSiteTransport.Save()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryInterSiteTransport.SiteLinkBridgesGet">
            <summary>Sets the shim of ActiveDirectoryInterSiteTransport.get_SiteLinkBridges()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryInterSiteTransport.SiteLinksGet">
            <summary>Sets the shim of ActiveDirectoryInterSiteTransport.get_SiteLinks()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryInterSiteTransport.ToString">
            <summary>Sets the shim of ActiveDirectoryInterSiteTransport.ToString()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryInterSiteTransport.TransportTypeGet">
            <summary>Sets the shim of ActiveDirectoryInterSiteTransport.get_TransportType()</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryInterSiteTransport.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryInterSiteTransport.AllInstances.BridgeAllSiteLinksGet">
            <summary>Sets the shim of ActiveDirectoryInterSiteTransport.get_BridgeAllSiteLinks()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryInterSiteTransport.AllInstances.BridgeAllSiteLinksSetBoolean">
            <summary>Sets the shim of ActiveDirectoryInterSiteTransport.set_BridgeAllSiteLinks(Boolean value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryInterSiteTransport.AllInstances.Constructor">
            <summary>Sets the shim of ActiveDirectoryInterSiteTransport.ActiveDirectoryInterSiteTransport()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryInterSiteTransport.AllInstances.Dispose">
            <summary>Sets the shim of ActiveDirectoryInterSiteTransport.Dispose()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryInterSiteTransport.AllInstances.DisposeBoolean">
            <summary>Sets the shim of ActiveDirectoryInterSiteTransport.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryInterSiteTransport.AllInstances.GetDirectoryEntry">
            <summary>Sets the shim of ActiveDirectoryInterSiteTransport.GetDirectoryEntry()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryInterSiteTransport.AllInstances.IgnoreReplicationScheduleGet">
            <summary>Sets the shim of ActiveDirectoryInterSiteTransport.get_IgnoreReplicationSchedule()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryInterSiteTransport.AllInstances.IgnoreReplicationScheduleSetBoolean">
            <summary>Sets the shim of ActiveDirectoryInterSiteTransport.set_IgnoreReplicationSchedule(Boolean value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryInterSiteTransport.AllInstances.Save">
            <summary>Sets the shim of ActiveDirectoryInterSiteTransport.Save()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryInterSiteTransport.AllInstances.SiteLinkBridgesGet">
            <summary>Sets the shim of ActiveDirectoryInterSiteTransport.get_SiteLinkBridges()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryInterSiteTransport.AllInstances.SiteLinksGet">
            <summary>Sets the shim of ActiveDirectoryInterSiteTransport.get_SiteLinks()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryInterSiteTransport.AllInstances.ToString01">
            <summary>Sets the shim of ActiveDirectoryInterSiteTransport.ToString()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryInterSiteTransport.AllInstances.TransportTypeGet">
            <summary>Sets the shim of ActiveDirectoryInterSiteTransport.get_TransportType()</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryObjectExistsException">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryObjectExistsException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryObjectExistsException.#ctor(System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryObjectExistsException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryObjectExistsException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryObjectExistsException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryObjectExistsException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryObjectExistsException.Constructor">
            <summary>Sets the shim of ActiveDirectoryObjectExistsException.ActiveDirectoryObjectExistsException()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryObjectExistsException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of ActiveDirectoryObjectExistsException.ActiveDirectoryObjectExistsException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryObjectExistsException.ConstructorString">
            <summary>Sets the shim of ActiveDirectoryObjectExistsException.ActiveDirectoryObjectExistsException(String message)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryObjectExistsException.ConstructorStringException">
            <summary>Sets the shim of ActiveDirectoryObjectExistsException.ActiveDirectoryObjectExistsException(String message, Exception inner)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryObjectExistsException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryObjectNotFoundException">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryObjectNotFoundException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryObjectNotFoundException.#ctor(System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryObjectNotFoundException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryObjectNotFoundException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryObjectNotFoundException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryObjectNotFoundException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryObjectNotFoundException.Constructor">
            <summary>Sets the shim of ActiveDirectoryObjectNotFoundException.ActiveDirectoryObjectNotFoundException()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryObjectNotFoundException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of ActiveDirectoryObjectNotFoundException.ActiveDirectoryObjectNotFoundException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryObjectNotFoundException.ConstructorString">
            <summary>Sets the shim of ActiveDirectoryObjectNotFoundException.ActiveDirectoryObjectNotFoundException(String message)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryObjectNotFoundException.ConstructorStringException">
            <summary>Sets the shim of ActiveDirectoryObjectNotFoundException.ActiveDirectoryObjectNotFoundException(String message, Exception inner)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryObjectNotFoundException.ConstructorStringTypeString">
            <summary>Sets the shim of ActiveDirectoryObjectNotFoundException.ActiveDirectoryObjectNotFoundException(String message, Type type, String name)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryObjectNotFoundException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of ActiveDirectoryObjectNotFoundException.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryObjectNotFoundException.NameGet">
            <summary>Sets the shim of ActiveDirectoryObjectNotFoundException.get_Name()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryObjectNotFoundException.TypeGet">
            <summary>Sets the shim of ActiveDirectoryObjectNotFoundException.get_Type()</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryObjectNotFoundException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryObjectNotFoundException.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of ActiveDirectoryObjectNotFoundException.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryObjectNotFoundException.AllInstances.NameGet">
            <summary>Sets the shim of ActiveDirectoryObjectNotFoundException.get_Name()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryObjectNotFoundException.AllInstances.TypeGet">
            <summary>Sets the shim of ActiveDirectoryObjectNotFoundException.get_Type()</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryOperationException">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryOperationException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryOperationException.#ctor(System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryOperationException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryOperationException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryOperationException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryOperationException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryOperationException.Constructor">
            <summary>Sets the shim of ActiveDirectoryOperationException.ActiveDirectoryOperationException()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryOperationException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of ActiveDirectoryOperationException.ActiveDirectoryOperationException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryOperationException.ConstructorString">
            <summary>Sets the shim of ActiveDirectoryOperationException.ActiveDirectoryOperationException(String message)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryOperationException.ConstructorStringException">
            <summary>Sets the shim of ActiveDirectoryOperationException.ActiveDirectoryOperationException(String message, Exception inner)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryOperationException.ConstructorStringExceptionInt32">
            <summary>Sets the shim of ActiveDirectoryOperationException.ActiveDirectoryOperationException(String message, Exception inner, Int32 errorCode)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryOperationException.ConstructorStringInt32">
            <summary>Sets the shim of ActiveDirectoryOperationException.ActiveDirectoryOperationException(String message, Int32 errorCode)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryOperationException.ErrorCodeGet">
            <summary>Sets the shim of ActiveDirectoryOperationException.get_ErrorCode()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryOperationException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of ActiveDirectoryOperationException.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryOperationException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryOperationException.AllInstances.ErrorCodeGet">
            <summary>Sets the shim of ActiveDirectoryOperationException.get_ErrorCode()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryOperationException.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of ActiveDirectoryOperationException.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryPartition">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryPartition.#ctor(System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryPartition.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryPartition.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryPartition.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryPartition.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryPartition.Constructor">
            <summary>Sets the shim of ActiveDirectoryPartition.ActiveDirectoryPartition()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryPartition.Dispose">
            <summary>Sets the shim of ActiveDirectoryPartition.Dispose()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryPartition.DisposeBoolean">
            <summary>Sets the shim of ActiveDirectoryPartition.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryPartition.NameGet">
            <summary>Sets the shim of ActiveDirectoryPartition.get_Name()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryPartition.ToString">
            <summary>Sets the shim of ActiveDirectoryPartition.ToString()</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryPartition.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryPartition.AllInstances.Dispose">
            <summary>Sets the shim of ActiveDirectoryPartition.Dispose()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryPartition.AllInstances.DisposeBoolean">
            <summary>Sets the shim of ActiveDirectoryPartition.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryPartition.AllInstances.NameGet">
            <summary>Sets the shim of ActiveDirectoryPartition.get_Name()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryPartition.AllInstances.ToString01">
            <summary>Sets the shim of ActiveDirectoryPartition.ToString()</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryReplicationMetadata">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryReplicationMetadata.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryReplicationMetadata.#ctor(System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryReplicationMetadata.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryReplicationMetadata.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryReplicationMetadata.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryReplicationMetadata.Bind(System.Collections.IDictionary)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryReplicationMetadata.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryReplicationMetadata.AttributeNamesGet">
            <summary>Sets the shim of ActiveDirectoryReplicationMetadata.get_AttributeNames()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryReplicationMetadata.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryReplicationMetadata.Constructor">
            <summary>Sets the shim of ActiveDirectoryReplicationMetadata.ActiveDirectoryReplicationMetadata()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryReplicationMetadata.ContainsString">
            <summary>Sets the shim of ActiveDirectoryReplicationMetadata.Contains(String attributeName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryReplicationMetadata.CopyToAttributeMetadataArrayInt32">
            <summary>Sets the shim of ActiveDirectoryReplicationMetadata.CopyTo(AttributeMetadata[] array, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryReplicationMetadata.ItemGetString">
            <summary>Sets the shim of ActiveDirectoryReplicationMetadata.get_Item(String name)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryReplicationMetadata.ValuesGet">
            <summary>Sets the shim of ActiveDirectoryReplicationMetadata.get_Values()</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryReplicationMetadata.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryReplicationMetadata.AllInstances.AttributeNamesGet">
            <summary>Sets the shim of ActiveDirectoryReplicationMetadata.get_AttributeNames()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryReplicationMetadata.AllInstances.Constructor">
            <summary>Sets the shim of ActiveDirectoryReplicationMetadata.ActiveDirectoryReplicationMetadata()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryReplicationMetadata.AllInstances.ContainsString">
            <summary>Sets the shim of ActiveDirectoryReplicationMetadata.Contains(String attributeName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryReplicationMetadata.AllInstances.CopyToAttributeMetadataArrayInt32">
            <summary>Sets the shim of ActiveDirectoryReplicationMetadata.CopyTo(AttributeMetadata[] array, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryReplicationMetadata.AllInstances.ItemGetString">
            <summary>Sets the shim of ActiveDirectoryReplicationMetadata.get_Item(String name)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryReplicationMetadata.AllInstances.ValuesGet">
            <summary>Sets the shim of ActiveDirectoryReplicationMetadata.get_Values()</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryRoleCollection">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryRoleCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryRoleCollection.#ctor(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryRoleCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryRoleCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryRoleCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryRoleCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryRoleCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryRoleCollection.Constructor">
            <summary>Sets the shim of ActiveDirectoryRoleCollection.ActiveDirectoryRoleCollection()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryRoleCollection.ContainsActiveDirectoryRole">
            <summary>Sets the shim of ActiveDirectoryRoleCollection.Contains(ActiveDirectoryRole role)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryRoleCollection.CopyToActiveDirectoryRoleArrayInt32">
            <summary>Sets the shim of ActiveDirectoryRoleCollection.CopyTo(ActiveDirectoryRole[] roles, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryRoleCollection.IndexOfActiveDirectoryRole">
            <summary>Sets the shim of ActiveDirectoryRoleCollection.IndexOf(ActiveDirectoryRole role)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryRoleCollection.ItemGetInt32">
            <summary>Sets the shim of ActiveDirectoryRoleCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryRoleCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryRoleCollection.AllInstances.ContainsActiveDirectoryRole">
            <summary>Sets the shim of ActiveDirectoryRoleCollection.Contains(ActiveDirectoryRole role)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryRoleCollection.AllInstances.CopyToActiveDirectoryRoleArrayInt32">
            <summary>Sets the shim of ActiveDirectoryRoleCollection.CopyTo(ActiveDirectoryRole[] roles, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryRoleCollection.AllInstances.IndexOfActiveDirectoryRole">
            <summary>Sets the shim of ActiveDirectoryRoleCollection.IndexOf(ActiveDirectoryRole role)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryRoleCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of ActiveDirectoryRoleCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchedule">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchedule.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchedule.#ctor(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchedule.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchedule.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchedule.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchedule.Constructor">
            <summary>Sets the shim of ActiveDirectorySchedule.ActiveDirectorySchedule()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchedule.ConstructorActiveDirectorySchedule">
            <summary>Sets the shim of ActiveDirectorySchedule.ActiveDirectorySchedule(ActiveDirectorySchedule schedule)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchedule.RawScheduleGet">
            <summary>Sets the shim of ActiveDirectorySchedule.get_RawSchedule()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchedule.RawScheduleSetBooleanMdArray3">
            <summary>Sets the shim of ActiveDirectorySchedule.set_RawSchedule(Boolean[,,] value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchedule.ResetSchedule">
            <summary>Sets the shim of ActiveDirectorySchedule.ResetSchedule()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchedule.SetDailyScheduleHourOfDayMinuteOfHourHourOfDayMinuteOfHour">
            <summary>Sets the shim of ActiveDirectorySchedule.SetDailySchedule(HourOfDay fromHour, MinuteOfHour fromMinute, HourOfDay toHour, MinuteOfHour toMinute)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchedule.SetScheduleDayOfWeekArrayHourOfDayMinuteOfHourHourOfDayMinuteOfHour">
            <summary>Sets the shim of ActiveDirectorySchedule.SetSchedule(DayOfWeek[] days, HourOfDay fromHour, MinuteOfHour fromMinute, HourOfDay toHour, MinuteOfHour toMinute)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchedule.SetScheduleDayOfWeekHourOfDayMinuteOfHourHourOfDayMinuteOfHour">
            <summary>Sets the shim of ActiveDirectorySchedule.SetSchedule(DayOfWeek day, HourOfDay fromHour, MinuteOfHour fromMinute, HourOfDay toHour, MinuteOfHour toMinute)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchedule.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchedule.AllInstances.RawScheduleGet">
            <summary>Sets the shim of ActiveDirectorySchedule.get_RawSchedule()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchedule.AllInstances.RawScheduleSetBooleanMdArray3">
            <summary>Sets the shim of ActiveDirectorySchedule.set_RawSchedule(Boolean[,,] value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchedule.AllInstances.ResetSchedule">
            <summary>Sets the shim of ActiveDirectorySchedule.ResetSchedule()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchedule.AllInstances.SetDailyScheduleHourOfDayMinuteOfHourHourOfDayMinuteOfHour">
            <summary>Sets the shim of ActiveDirectorySchedule.SetDailySchedule(HourOfDay fromHour, MinuteOfHour fromMinute, HourOfDay toHour, MinuteOfHour toMinute)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchedule.AllInstances.SetScheduleDayOfWeekArrayHourOfDayMinuteOfHourHourOfDayMinuteOfHour">
            <summary>Sets the shim of ActiveDirectorySchedule.SetSchedule(DayOfWeek[] days, HourOfDay fromHour, MinuteOfHour fromMinute, HourOfDay toHour, MinuteOfHour toMinute)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchedule.AllInstances.SetScheduleDayOfWeekHourOfDayMinuteOfHourHourOfDayMinuteOfHour">
            <summary>Sets the shim of ActiveDirectorySchedule.SetSchedule(DayOfWeek day, HourOfDay fromHour, MinuteOfHour fromMinute, HourOfDay toHour, MinuteOfHour toMinute)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchema">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchema.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchema.#ctor(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchema.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchema.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchema.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchema.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchema.Constructor">
            <summary>Sets the shim of ActiveDirectorySchema.ActiveDirectorySchema()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchema.DisposeBoolean">
            <summary>Sets the shim of ActiveDirectorySchema.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchema.FindAllClasses">
            <summary>Sets the shim of ActiveDirectorySchema.FindAllClasses()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchema.FindAllClassesSchemaClassType">
            <summary>Sets the shim of ActiveDirectorySchema.FindAllClasses(SchemaClassType type)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchema.FindAllDefunctClasses">
            <summary>Sets the shim of ActiveDirectorySchema.FindAllDefunctClasses()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchema.FindAllDefunctProperties">
            <summary>Sets the shim of ActiveDirectorySchema.FindAllDefunctProperties()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchema.FindAllProperties">
            <summary>Sets the shim of ActiveDirectorySchema.FindAllProperties()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchema.FindAllPropertiesPropertyTypes">
            <summary>Sets the shim of ActiveDirectorySchema.FindAllProperties(PropertyTypes type)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchema.FindClassString">
            <summary>Sets the shim of ActiveDirectorySchema.FindClass(String ldapDisplayName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchema.FindDefunctClassString">
            <summary>Sets the shim of ActiveDirectorySchema.FindDefunctClass(String commonName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchema.FindDefunctPropertyString">
            <summary>Sets the shim of ActiveDirectorySchema.FindDefunctProperty(String commonName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchema.FindPropertyString">
            <summary>Sets the shim of ActiveDirectorySchema.FindProperty(String ldapDisplayName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchema.GetCurrentSchema">
            <summary>Sets the shim of ActiveDirectorySchema.GetCurrentSchema()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchema.GetDirectoryEntry">
            <summary>Sets the shim of ActiveDirectorySchema.GetDirectoryEntry()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchema.GetSchemaDirectoryContext">
            <summary>Sets the shim of ActiveDirectorySchema.GetSchema(DirectoryContext context)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchema.RefreshSchema">
            <summary>Sets the shim of ActiveDirectorySchema.RefreshSchema()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchema.SchemaRoleOwnerGet">
            <summary>Sets the shim of ActiveDirectorySchema.get_SchemaRoleOwner()</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchema.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchema.AllInstances.Constructor">
            <summary>Sets the shim of ActiveDirectorySchema.ActiveDirectorySchema()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchema.AllInstances.DisposeBoolean">
            <summary>Sets the shim of ActiveDirectorySchema.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchema.AllInstances.FindAllClasses">
            <summary>Sets the shim of ActiveDirectorySchema.FindAllClasses()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchema.AllInstances.FindAllClassesSchemaClassType">
            <summary>Sets the shim of ActiveDirectorySchema.FindAllClasses(SchemaClassType type)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchema.AllInstances.FindAllDefunctClasses">
            <summary>Sets the shim of ActiveDirectorySchema.FindAllDefunctClasses()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchema.AllInstances.FindAllDefunctProperties">
            <summary>Sets the shim of ActiveDirectorySchema.FindAllDefunctProperties()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchema.AllInstances.FindAllProperties">
            <summary>Sets the shim of ActiveDirectorySchema.FindAllProperties()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchema.AllInstances.FindAllPropertiesPropertyTypes">
            <summary>Sets the shim of ActiveDirectorySchema.FindAllProperties(PropertyTypes type)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchema.AllInstances.FindClassString">
            <summary>Sets the shim of ActiveDirectorySchema.FindClass(String ldapDisplayName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchema.AllInstances.FindDefunctClassString">
            <summary>Sets the shim of ActiveDirectorySchema.FindDefunctClass(String commonName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchema.AllInstances.FindDefunctPropertyString">
            <summary>Sets the shim of ActiveDirectorySchema.FindDefunctProperty(String commonName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchema.AllInstances.FindPropertyString">
            <summary>Sets the shim of ActiveDirectorySchema.FindProperty(String ldapDisplayName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchema.AllInstances.GetDirectoryEntry">
            <summary>Sets the shim of ActiveDirectorySchema.GetDirectoryEntry()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchema.AllInstances.RefreshSchema">
            <summary>Sets the shim of ActiveDirectorySchema.RefreshSchema()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchema.AllInstances.SchemaRoleOwnerGet">
            <summary>Sets the shim of ActiveDirectorySchema.get_SchemaRoleOwner()</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClass">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClass.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClass.#ctor(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClass.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClass.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClass.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClass.AuxiliaryClassesGet">
            <summary>Sets the shim of ActiveDirectorySchemaClass.get_AuxiliaryClasses()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClass.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClass.CommonNameGet">
            <summary>Sets the shim of ActiveDirectorySchemaClass.get_CommonName()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClass.CommonNameSetString">
            <summary>Sets the shim of ActiveDirectorySchemaClass.set_CommonName(String value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClass.ConstructorDirectoryContextString">
            <summary>Sets the shim of ActiveDirectorySchemaClass.ActiveDirectorySchemaClass(DirectoryContext context, String ldapDisplayName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClass.DefaultObjectSecurityDescriptorGet">
            <summary>Sets the shim of ActiveDirectorySchemaClass.get_DefaultObjectSecurityDescriptor()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClass.DefaultObjectSecurityDescriptorSetActiveDirectorySecurity">
            <summary>Sets the shim of ActiveDirectorySchemaClass.set_DefaultObjectSecurityDescriptor(ActiveDirectorySecurity value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClass.DescriptionGet">
            <summary>Sets the shim of ActiveDirectorySchemaClass.get_Description()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClass.DescriptionSetString">
            <summary>Sets the shim of ActiveDirectorySchemaClass.set_Description(String value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClass.Dispose">
            <summary>Sets the shim of ActiveDirectorySchemaClass.Dispose()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClass.DisposeBoolean">
            <summary>Sets the shim of ActiveDirectorySchemaClass.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClass.FindByNameDirectoryContextString">
            <summary>Sets the shim of ActiveDirectorySchemaClass.FindByName(DirectoryContext context, String ldapDisplayName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClass.GetAllProperties">
            <summary>Sets the shim of ActiveDirectorySchemaClass.GetAllProperties()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClass.GetDirectoryEntry">
            <summary>Sets the shim of ActiveDirectorySchemaClass.GetDirectoryEntry()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClass.IsDefunctGet">
            <summary>Sets the shim of ActiveDirectorySchemaClass.get_IsDefunct()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClass.IsDefunctSetBoolean">
            <summary>Sets the shim of ActiveDirectorySchemaClass.set_IsDefunct(Boolean value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClass.MandatoryPropertiesGet">
            <summary>Sets the shim of ActiveDirectorySchemaClass.get_MandatoryProperties()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClass.NameGet">
            <summary>Sets the shim of ActiveDirectorySchemaClass.get_Name()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClass.OidGet">
            <summary>Sets the shim of ActiveDirectorySchemaClass.get_Oid()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClass.OidSetString">
            <summary>Sets the shim of ActiveDirectorySchemaClass.set_Oid(String value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClass.OptionalPropertiesGet">
            <summary>Sets the shim of ActiveDirectorySchemaClass.get_OptionalProperties()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClass.PossibleInferiorsGet">
            <summary>Sets the shim of ActiveDirectorySchemaClass.get_PossibleInferiors()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClass.PossibleSuperiorsGet">
            <summary>Sets the shim of ActiveDirectorySchemaClass.get_PossibleSuperiors()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClass.Save">
            <summary>Sets the shim of ActiveDirectorySchemaClass.Save()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClass.SchemaGuidGet">
            <summary>Sets the shim of ActiveDirectorySchemaClass.get_SchemaGuid()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClass.SchemaGuidSetGuid">
            <summary>Sets the shim of ActiveDirectorySchemaClass.set_SchemaGuid(Guid value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClass.SubClassOfGet">
            <summary>Sets the shim of ActiveDirectorySchemaClass.get_SubClassOf()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClass.SubClassOfSetActiveDirectorySchemaClass">
            <summary>Sets the shim of ActiveDirectorySchemaClass.set_SubClassOf(ActiveDirectorySchemaClass value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClass.ToString">
            <summary>Sets the shim of ActiveDirectorySchemaClass.ToString()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClass.TypeGet">
            <summary>Sets the shim of ActiveDirectorySchemaClass.get_Type()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClass.TypeSetSchemaClassType">
            <summary>Sets the shim of ActiveDirectorySchemaClass.set_Type(SchemaClassType value)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClass.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClass.AllInstances.AuxiliaryClassesGet">
            <summary>Sets the shim of ActiveDirectorySchemaClass.get_AuxiliaryClasses()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClass.AllInstances.CommonNameGet">
            <summary>Sets the shim of ActiveDirectorySchemaClass.get_CommonName()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClass.AllInstances.CommonNameSetString">
            <summary>Sets the shim of ActiveDirectorySchemaClass.set_CommonName(String value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClass.AllInstances.DefaultObjectSecurityDescriptorGet">
            <summary>Sets the shim of ActiveDirectorySchemaClass.get_DefaultObjectSecurityDescriptor()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClass.AllInstances.DefaultObjectSecurityDescriptorSetActiveDirectorySecurity">
            <summary>Sets the shim of ActiveDirectorySchemaClass.set_DefaultObjectSecurityDescriptor(ActiveDirectorySecurity value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClass.AllInstances.DescriptionGet">
            <summary>Sets the shim of ActiveDirectorySchemaClass.get_Description()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClass.AllInstances.DescriptionSetString">
            <summary>Sets the shim of ActiveDirectorySchemaClass.set_Description(String value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClass.AllInstances.Dispose">
            <summary>Sets the shim of ActiveDirectorySchemaClass.Dispose()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClass.AllInstances.DisposeBoolean">
            <summary>Sets the shim of ActiveDirectorySchemaClass.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClass.AllInstances.GetAllProperties">
            <summary>Sets the shim of ActiveDirectorySchemaClass.GetAllProperties()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClass.AllInstances.GetDirectoryEntry">
            <summary>Sets the shim of ActiveDirectorySchemaClass.GetDirectoryEntry()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClass.AllInstances.IsDefunctGet">
            <summary>Sets the shim of ActiveDirectorySchemaClass.get_IsDefunct()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClass.AllInstances.IsDefunctSetBoolean">
            <summary>Sets the shim of ActiveDirectorySchemaClass.set_IsDefunct(Boolean value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClass.AllInstances.MandatoryPropertiesGet">
            <summary>Sets the shim of ActiveDirectorySchemaClass.get_MandatoryProperties()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClass.AllInstances.NameGet">
            <summary>Sets the shim of ActiveDirectorySchemaClass.get_Name()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClass.AllInstances.OidGet">
            <summary>Sets the shim of ActiveDirectorySchemaClass.get_Oid()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClass.AllInstances.OidSetString">
            <summary>Sets the shim of ActiveDirectorySchemaClass.set_Oid(String value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClass.AllInstances.OptionalPropertiesGet">
            <summary>Sets the shim of ActiveDirectorySchemaClass.get_OptionalProperties()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClass.AllInstances.PossibleInferiorsGet">
            <summary>Sets the shim of ActiveDirectorySchemaClass.get_PossibleInferiors()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClass.AllInstances.PossibleSuperiorsGet">
            <summary>Sets the shim of ActiveDirectorySchemaClass.get_PossibleSuperiors()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClass.AllInstances.Save">
            <summary>Sets the shim of ActiveDirectorySchemaClass.Save()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClass.AllInstances.SchemaGuidGet">
            <summary>Sets the shim of ActiveDirectorySchemaClass.get_SchemaGuid()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClass.AllInstances.SchemaGuidSetGuid">
            <summary>Sets the shim of ActiveDirectorySchemaClass.set_SchemaGuid(Guid value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClass.AllInstances.SubClassOfGet">
            <summary>Sets the shim of ActiveDirectorySchemaClass.get_SubClassOf()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClass.AllInstances.SubClassOfSetActiveDirectorySchemaClass">
            <summary>Sets the shim of ActiveDirectorySchemaClass.set_SubClassOf(ActiveDirectorySchemaClass value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClass.AllInstances.ToString01">
            <summary>Sets the shim of ActiveDirectorySchemaClass.ToString()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClass.AllInstances.TypeGet">
            <summary>Sets the shim of ActiveDirectorySchemaClass.get_Type()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClass.AllInstances.TypeSetSchemaClassType">
            <summary>Sets the shim of ActiveDirectorySchemaClass.set_Type(SchemaClassType value)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClassCollection">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClassCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClassCollection.#ctor(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClassCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClassCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClassCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClassCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClassCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClassCollection.AddActiveDirectorySchemaClass">
            <summary>Sets the shim of ActiveDirectorySchemaClassCollection.Add(ActiveDirectorySchemaClass schemaClass)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClassCollection.AddRangeActiveDirectorySchemaClassArray">
            <summary>Sets the shim of ActiveDirectorySchemaClassCollection.AddRange(ActiveDirectorySchemaClass[] schemaClasses)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClassCollection.AddRangeActiveDirectorySchemaClassCollection">
            <summary>Sets the shim of ActiveDirectorySchemaClassCollection.AddRange(ActiveDirectorySchemaClassCollection schemaClasses)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClassCollection.AddRangeReadOnlyActiveDirectorySchemaClassCollection">
            <summary>Sets the shim of ActiveDirectorySchemaClassCollection.AddRange(ReadOnlyActiveDirectorySchemaClassCollection schemaClasses)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClassCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClassCollection.Constructor">
            <summary>Sets the shim of ActiveDirectorySchemaClassCollection.ActiveDirectorySchemaClassCollection()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClassCollection.ContainsActiveDirectorySchemaClass">
            <summary>Sets the shim of ActiveDirectorySchemaClassCollection.Contains(ActiveDirectorySchemaClass schemaClass)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClassCollection.CopyToActiveDirectorySchemaClassArrayInt32">
            <summary>Sets the shim of ActiveDirectorySchemaClassCollection.CopyTo(ActiveDirectorySchemaClass[] schemaClasses, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClassCollection.IndexOfActiveDirectorySchemaClass">
            <summary>Sets the shim of ActiveDirectorySchemaClassCollection.IndexOf(ActiveDirectorySchemaClass schemaClass)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClassCollection.InsertInt32ActiveDirectorySchemaClass">
            <summary>Sets the shim of ActiveDirectorySchemaClassCollection.Insert(Int32 index, ActiveDirectorySchemaClass schemaClass)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClassCollection.ItemGetInt32">
            <summary>Sets the shim of ActiveDirectorySchemaClassCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClassCollection.ItemSetInt32ActiveDirectorySchemaClass">
            <summary>Sets the shim of ActiveDirectorySchemaClassCollection.set_Item(Int32 index, ActiveDirectorySchemaClass value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClassCollection.OnClearComplete">
            <summary>Sets the shim of ActiveDirectorySchemaClassCollection.OnClearComplete()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClassCollection.OnInsertCompleteInt32Object">
            <summary>Sets the shim of ActiveDirectorySchemaClassCollection.OnInsertComplete(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClassCollection.OnRemoveCompleteInt32Object">
            <summary>Sets the shim of ActiveDirectorySchemaClassCollection.OnRemoveComplete(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClassCollection.OnSetCompleteInt32ObjectObject">
            <summary>Sets the shim of ActiveDirectorySchemaClassCollection.OnSetComplete(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClassCollection.OnValidateObject">
            <summary>Sets the shim of ActiveDirectorySchemaClassCollection.OnValidate(Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClassCollection.RemoveActiveDirectorySchemaClass">
            <summary>Sets the shim of ActiveDirectorySchemaClassCollection.Remove(ActiveDirectorySchemaClass schemaClass)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClassCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClassCollection.AllInstances.AddActiveDirectorySchemaClass">
            <summary>Sets the shim of ActiveDirectorySchemaClassCollection.Add(ActiveDirectorySchemaClass schemaClass)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClassCollection.AllInstances.AddRangeActiveDirectorySchemaClassArray">
            <summary>Sets the shim of ActiveDirectorySchemaClassCollection.AddRange(ActiveDirectorySchemaClass[] schemaClasses)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClassCollection.AllInstances.AddRangeActiveDirectorySchemaClassCollection">
            <summary>Sets the shim of ActiveDirectorySchemaClassCollection.AddRange(ActiveDirectorySchemaClassCollection schemaClasses)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClassCollection.AllInstances.AddRangeReadOnlyActiveDirectorySchemaClassCollection">
            <summary>Sets the shim of ActiveDirectorySchemaClassCollection.AddRange(ReadOnlyActiveDirectorySchemaClassCollection schemaClasses)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClassCollection.AllInstances.Constructor">
            <summary>Sets the shim of ActiveDirectorySchemaClassCollection.ActiveDirectorySchemaClassCollection()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClassCollection.AllInstances.ContainsActiveDirectorySchemaClass">
            <summary>Sets the shim of ActiveDirectorySchemaClassCollection.Contains(ActiveDirectorySchemaClass schemaClass)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClassCollection.AllInstances.CopyToActiveDirectorySchemaClassArrayInt32">
            <summary>Sets the shim of ActiveDirectorySchemaClassCollection.CopyTo(ActiveDirectorySchemaClass[] schemaClasses, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClassCollection.AllInstances.IndexOfActiveDirectorySchemaClass">
            <summary>Sets the shim of ActiveDirectorySchemaClassCollection.IndexOf(ActiveDirectorySchemaClass schemaClass)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClassCollection.AllInstances.InsertInt32ActiveDirectorySchemaClass">
            <summary>Sets the shim of ActiveDirectorySchemaClassCollection.Insert(Int32 index, ActiveDirectorySchemaClass schemaClass)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClassCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of ActiveDirectorySchemaClassCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClassCollection.AllInstances.ItemSetInt32ActiveDirectorySchemaClass">
            <summary>Sets the shim of ActiveDirectorySchemaClassCollection.set_Item(Int32 index, ActiveDirectorySchemaClass value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClassCollection.AllInstances.OnClearComplete">
            <summary>Sets the shim of ActiveDirectorySchemaClassCollection.OnClearComplete()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClassCollection.AllInstances.OnInsertCompleteInt32Object">
            <summary>Sets the shim of ActiveDirectorySchemaClassCollection.OnInsertComplete(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClassCollection.AllInstances.OnRemoveCompleteInt32Object">
            <summary>Sets the shim of ActiveDirectorySchemaClassCollection.OnRemoveComplete(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClassCollection.AllInstances.OnSetCompleteInt32ObjectObject">
            <summary>Sets the shim of ActiveDirectorySchemaClassCollection.OnSetComplete(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClassCollection.AllInstances.OnValidateObject">
            <summary>Sets the shim of ActiveDirectorySchemaClassCollection.OnValidate(Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaClassCollection.AllInstances.RemoveActiveDirectorySchemaClass">
            <summary>Sets the shim of ActiveDirectorySchemaClassCollection.Remove(ActiveDirectorySchemaClass schemaClass)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.#ctor(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.CommonNameGet">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.get_CommonName()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.CommonNameSetString">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.set_CommonName(String value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.ConstructorDirectoryContextString">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.ActiveDirectorySchemaProperty(DirectoryContext context, String ldapDisplayName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.DescriptionGet">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.get_Description()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.DescriptionSetString">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.set_Description(String value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.Dispose">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.Dispose()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.DisposeBoolean">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.FindByNameDirectoryContextString">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.FindByName(DirectoryContext context, String ldapDisplayName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.GetDirectoryEntry">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.GetDirectoryEntry()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.IsDefunctGet">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.get_IsDefunct()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.IsDefunctSetBoolean">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.set_IsDefunct(Boolean value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.IsInAnrGet">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.get_IsInAnr()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.IsInAnrSetBoolean">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.set_IsInAnr(Boolean value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.IsInGlobalCatalogGet">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.get_IsInGlobalCatalog()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.IsInGlobalCatalogSetBoolean">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.set_IsInGlobalCatalog(Boolean value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.IsIndexedGet">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.get_IsIndexed()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.IsIndexedOverContainerGet">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.get_IsIndexedOverContainer()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.IsIndexedOverContainerSetBoolean">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.set_IsIndexedOverContainer(Boolean value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.IsIndexedSetBoolean">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.set_IsIndexed(Boolean value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.IsOnTombstonedObjectGet">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.get_IsOnTombstonedObject()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.IsOnTombstonedObjectSetBoolean">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.set_IsOnTombstonedObject(Boolean value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.IsSingleValuedGet">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.get_IsSingleValued()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.IsSingleValuedSetBoolean">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.set_IsSingleValued(Boolean value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.IsTupleIndexedGet">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.get_IsTupleIndexed()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.IsTupleIndexedSetBoolean">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.set_IsTupleIndexed(Boolean value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.LinkGet">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.get_Link()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.LinkIdGet">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.get_LinkId()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.LinkIdSetNullableOfInt32">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.set_LinkId(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.NameGet">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.get_Name()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.OidGet">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.get_Oid()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.OidSetString">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.set_Oid(String value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.RangeLowerGet">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.get_RangeLower()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.RangeLowerSetNullableOfInt32">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.set_RangeLower(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.RangeUpperGet">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.get_RangeUpper()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.RangeUpperSetNullableOfInt32">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.set_RangeUpper(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.Save">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.Save()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.SchemaGuidGet">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.get_SchemaGuid()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.SchemaGuidSetGuid">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.set_SchemaGuid(Guid value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.StaticConstructor">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.ActiveDirectorySchemaProperty()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.SyntaxGet">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.get_Syntax()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.SyntaxSetActiveDirectorySyntax">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.set_Syntax(ActiveDirectorySyntax value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.ToString">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.ToString()</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.AllInstances.CommonNameGet">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.get_CommonName()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.AllInstances.CommonNameSetString">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.set_CommonName(String value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.AllInstances.DescriptionGet">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.get_Description()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.AllInstances.DescriptionSetString">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.set_Description(String value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.AllInstances.Dispose">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.Dispose()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.AllInstances.DisposeBoolean">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.AllInstances.GetDirectoryEntry">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.GetDirectoryEntry()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.AllInstances.IsDefunctGet">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.get_IsDefunct()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.AllInstances.IsDefunctSetBoolean">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.set_IsDefunct(Boolean value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.AllInstances.IsInAnrGet">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.get_IsInAnr()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.AllInstances.IsInAnrSetBoolean">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.set_IsInAnr(Boolean value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.AllInstances.IsInGlobalCatalogGet">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.get_IsInGlobalCatalog()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.AllInstances.IsInGlobalCatalogSetBoolean">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.set_IsInGlobalCatalog(Boolean value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.AllInstances.IsIndexedGet">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.get_IsIndexed()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.AllInstances.IsIndexedOverContainerGet">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.get_IsIndexedOverContainer()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.AllInstances.IsIndexedOverContainerSetBoolean">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.set_IsIndexedOverContainer(Boolean value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.AllInstances.IsIndexedSetBoolean">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.set_IsIndexed(Boolean value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.AllInstances.IsOnTombstonedObjectGet">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.get_IsOnTombstonedObject()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.AllInstances.IsOnTombstonedObjectSetBoolean">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.set_IsOnTombstonedObject(Boolean value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.AllInstances.IsSingleValuedGet">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.get_IsSingleValued()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.AllInstances.IsSingleValuedSetBoolean">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.set_IsSingleValued(Boolean value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.AllInstances.IsTupleIndexedGet">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.get_IsTupleIndexed()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.AllInstances.IsTupleIndexedSetBoolean">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.set_IsTupleIndexed(Boolean value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.AllInstances.LinkGet">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.get_Link()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.AllInstances.LinkIdGet">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.get_LinkId()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.AllInstances.LinkIdSetNullableOfInt32">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.set_LinkId(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.AllInstances.NameGet">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.get_Name()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.AllInstances.OidGet">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.get_Oid()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.AllInstances.OidSetString">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.set_Oid(String value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.AllInstances.RangeLowerGet">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.get_RangeLower()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.AllInstances.RangeLowerSetNullableOfInt32">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.set_RangeLower(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.AllInstances.RangeUpperGet">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.get_RangeUpper()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.AllInstances.RangeUpperSetNullableOfInt32">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.set_RangeUpper(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.AllInstances.Save">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.Save()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.AllInstances.SchemaGuidGet">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.get_SchemaGuid()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.AllInstances.SchemaGuidSetGuid">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.set_SchemaGuid(Guid value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.AllInstances.SyntaxGet">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.get_Syntax()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.AllInstances.SyntaxSetActiveDirectorySyntax">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.set_Syntax(ActiveDirectorySyntax value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaProperty.AllInstances.ToString01">
            <summary>Sets the shim of ActiveDirectorySchemaProperty.ToString()</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaPropertyCollection">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaPropertyCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaPropertyCollection.#ctor(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaPropertyCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaPropertyCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaPropertyCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaPropertyCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaPropertyCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaPropertyCollection.AddActiveDirectorySchemaProperty">
            <summary>Sets the shim of ActiveDirectorySchemaPropertyCollection.Add(ActiveDirectorySchemaProperty schemaProperty)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaPropertyCollection.AddRangeActiveDirectorySchemaPropertyArray">
            <summary>Sets the shim of ActiveDirectorySchemaPropertyCollection.AddRange(ActiveDirectorySchemaProperty[] properties)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaPropertyCollection.AddRangeActiveDirectorySchemaPropertyCollection">
            <summary>Sets the shim of ActiveDirectorySchemaPropertyCollection.AddRange(ActiveDirectorySchemaPropertyCollection properties)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaPropertyCollection.AddRangeReadOnlyActiveDirectorySchemaPropertyCollection">
            <summary>Sets the shim of ActiveDirectorySchemaPropertyCollection.AddRange(ReadOnlyActiveDirectorySchemaPropertyCollection properties)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaPropertyCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaPropertyCollection.Constructor">
            <summary>Sets the shim of ActiveDirectorySchemaPropertyCollection.ActiveDirectorySchemaPropertyCollection()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaPropertyCollection.ContainsActiveDirectorySchemaProperty">
            <summary>Sets the shim of ActiveDirectorySchemaPropertyCollection.Contains(ActiveDirectorySchemaProperty schemaProperty)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaPropertyCollection.CopyToActiveDirectorySchemaPropertyArrayInt32">
            <summary>Sets the shim of ActiveDirectorySchemaPropertyCollection.CopyTo(ActiveDirectorySchemaProperty[] properties, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaPropertyCollection.IndexOfActiveDirectorySchemaProperty">
            <summary>Sets the shim of ActiveDirectorySchemaPropertyCollection.IndexOf(ActiveDirectorySchemaProperty schemaProperty)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaPropertyCollection.InsertInt32ActiveDirectorySchemaProperty">
            <summary>Sets the shim of ActiveDirectorySchemaPropertyCollection.Insert(Int32 index, ActiveDirectorySchemaProperty schemaProperty)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaPropertyCollection.ItemGetInt32">
            <summary>Sets the shim of ActiveDirectorySchemaPropertyCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaPropertyCollection.ItemSetInt32ActiveDirectorySchemaProperty">
            <summary>Sets the shim of ActiveDirectorySchemaPropertyCollection.set_Item(Int32 index, ActiveDirectorySchemaProperty value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaPropertyCollection.OnClearComplete">
            <summary>Sets the shim of ActiveDirectorySchemaPropertyCollection.OnClearComplete()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaPropertyCollection.OnInsertCompleteInt32Object">
            <summary>Sets the shim of ActiveDirectorySchemaPropertyCollection.OnInsertComplete(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaPropertyCollection.OnRemoveCompleteInt32Object">
            <summary>Sets the shim of ActiveDirectorySchemaPropertyCollection.OnRemoveComplete(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaPropertyCollection.OnSetCompleteInt32ObjectObject">
            <summary>Sets the shim of ActiveDirectorySchemaPropertyCollection.OnSetComplete(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaPropertyCollection.OnValidateObject">
            <summary>Sets the shim of ActiveDirectorySchemaPropertyCollection.OnValidate(Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaPropertyCollection.RemoveActiveDirectorySchemaProperty">
            <summary>Sets the shim of ActiveDirectorySchemaPropertyCollection.Remove(ActiveDirectorySchemaProperty schemaProperty)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaPropertyCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaPropertyCollection.AllInstances.AddActiveDirectorySchemaProperty">
            <summary>Sets the shim of ActiveDirectorySchemaPropertyCollection.Add(ActiveDirectorySchemaProperty schemaProperty)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaPropertyCollection.AllInstances.AddRangeActiveDirectorySchemaPropertyArray">
            <summary>Sets the shim of ActiveDirectorySchemaPropertyCollection.AddRange(ActiveDirectorySchemaProperty[] properties)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaPropertyCollection.AllInstances.AddRangeActiveDirectorySchemaPropertyCollection">
            <summary>Sets the shim of ActiveDirectorySchemaPropertyCollection.AddRange(ActiveDirectorySchemaPropertyCollection properties)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaPropertyCollection.AllInstances.AddRangeReadOnlyActiveDirectorySchemaPropertyCollection">
            <summary>Sets the shim of ActiveDirectorySchemaPropertyCollection.AddRange(ReadOnlyActiveDirectorySchemaPropertyCollection properties)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaPropertyCollection.AllInstances.Constructor">
            <summary>Sets the shim of ActiveDirectorySchemaPropertyCollection.ActiveDirectorySchemaPropertyCollection()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaPropertyCollection.AllInstances.ContainsActiveDirectorySchemaProperty">
            <summary>Sets the shim of ActiveDirectorySchemaPropertyCollection.Contains(ActiveDirectorySchemaProperty schemaProperty)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaPropertyCollection.AllInstances.CopyToActiveDirectorySchemaPropertyArrayInt32">
            <summary>Sets the shim of ActiveDirectorySchemaPropertyCollection.CopyTo(ActiveDirectorySchemaProperty[] properties, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaPropertyCollection.AllInstances.IndexOfActiveDirectorySchemaProperty">
            <summary>Sets the shim of ActiveDirectorySchemaPropertyCollection.IndexOf(ActiveDirectorySchemaProperty schemaProperty)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaPropertyCollection.AllInstances.InsertInt32ActiveDirectorySchemaProperty">
            <summary>Sets the shim of ActiveDirectorySchemaPropertyCollection.Insert(Int32 index, ActiveDirectorySchemaProperty schemaProperty)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaPropertyCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of ActiveDirectorySchemaPropertyCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaPropertyCollection.AllInstances.ItemSetInt32ActiveDirectorySchemaProperty">
            <summary>Sets the shim of ActiveDirectorySchemaPropertyCollection.set_Item(Int32 index, ActiveDirectorySchemaProperty value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaPropertyCollection.AllInstances.OnClearComplete">
            <summary>Sets the shim of ActiveDirectorySchemaPropertyCollection.OnClearComplete()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaPropertyCollection.AllInstances.OnInsertCompleteInt32Object">
            <summary>Sets the shim of ActiveDirectorySchemaPropertyCollection.OnInsertComplete(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaPropertyCollection.AllInstances.OnRemoveCompleteInt32Object">
            <summary>Sets the shim of ActiveDirectorySchemaPropertyCollection.OnRemoveComplete(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaPropertyCollection.AllInstances.OnSetCompleteInt32ObjectObject">
            <summary>Sets the shim of ActiveDirectorySchemaPropertyCollection.OnSetComplete(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaPropertyCollection.AllInstances.OnValidateObject">
            <summary>Sets the shim of ActiveDirectorySchemaPropertyCollection.OnValidate(Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySchemaPropertyCollection.AllInstances.RemoveActiveDirectorySchemaProperty">
            <summary>Sets the shim of ActiveDirectorySchemaPropertyCollection.Remove(ActiveDirectorySchemaProperty schemaProperty)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryServerDownException">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryServerDownException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryServerDownException.#ctor(System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryServerDownException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryServerDownException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryServerDownException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryServerDownException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryServerDownException.Constructor">
            <summary>Sets the shim of ActiveDirectoryServerDownException.ActiveDirectoryServerDownException()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryServerDownException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of ActiveDirectoryServerDownException.ActiveDirectoryServerDownException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryServerDownException.ConstructorString">
            <summary>Sets the shim of ActiveDirectoryServerDownException.ActiveDirectoryServerDownException(String message)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryServerDownException.ConstructorStringException">
            <summary>Sets the shim of ActiveDirectoryServerDownException.ActiveDirectoryServerDownException(String message, Exception inner)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryServerDownException.ConstructorStringExceptionInt32String">
            <summary>Sets the shim of ActiveDirectoryServerDownException.ActiveDirectoryServerDownException(String message, Exception inner, Int32 errorCode, String name)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryServerDownException.ConstructorStringInt32String">
            <summary>Sets the shim of ActiveDirectoryServerDownException.ActiveDirectoryServerDownException(String message, Int32 errorCode, String name)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryServerDownException.ErrorCodeGet">
            <summary>Sets the shim of ActiveDirectoryServerDownException.get_ErrorCode()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryServerDownException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of ActiveDirectoryServerDownException.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryServerDownException.MessageGet">
            <summary>Sets the shim of ActiveDirectoryServerDownException.get_Message()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryServerDownException.NameGet">
            <summary>Sets the shim of ActiveDirectoryServerDownException.get_Name()</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryServerDownException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryServerDownException.AllInstances.ErrorCodeGet">
            <summary>Sets the shim of ActiveDirectoryServerDownException.get_ErrorCode()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryServerDownException.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of ActiveDirectoryServerDownException.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryServerDownException.AllInstances.MessageGet">
            <summary>Sets the shim of ActiveDirectoryServerDownException.get_Message()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectoryServerDownException.AllInstances.NameGet">
            <summary>Sets the shim of ActiveDirectoryServerDownException.get_Name()</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySite">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.ActiveDirectorySite</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySite.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySite.#ctor(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySite.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySite.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySite.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySite.AdjacentSitesGet">
            <summary>Sets the shim of ActiveDirectorySite.get_AdjacentSites()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySite.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySite.BridgeheadServersGet">
            <summary>Sets the shim of ActiveDirectorySite.get_BridgeheadServers()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySite.ConstructorDirectoryContextString">
            <summary>Sets the shim of ActiveDirectorySite.ActiveDirectorySite(DirectoryContext context, String siteName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySite.Delete">
            <summary>Sets the shim of ActiveDirectorySite.Delete()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySite.Dispose">
            <summary>Sets the shim of ActiveDirectorySite.Dispose()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySite.DisposeBoolean">
            <summary>Sets the shim of ActiveDirectorySite.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySite.DomainsGet">
            <summary>Sets the shim of ActiveDirectorySite.get_Domains()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySite.FindByNameDirectoryContextString">
            <summary>Sets the shim of ActiveDirectorySite.FindByName(DirectoryContext context, String siteName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySite.GetComputerSite">
            <summary>Sets the shim of ActiveDirectorySite.GetComputerSite()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySite.GetDirectoryEntry">
            <summary>Sets the shim of ActiveDirectorySite.GetDirectoryEntry()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySite.InterSiteTopologyGeneratorGet">
            <summary>Sets the shim of ActiveDirectorySite.get_InterSiteTopologyGenerator()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySite.InterSiteTopologyGeneratorSetDirectoryServer">
            <summary>Sets the shim of ActiveDirectorySite.set_InterSiteTopologyGenerator(DirectoryServer value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySite.IntraSiteReplicationScheduleGet">
            <summary>Sets the shim of ActiveDirectorySite.get_IntraSiteReplicationSchedule()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySite.IntraSiteReplicationScheduleSetActiveDirectorySchedule">
            <summary>Sets the shim of ActiveDirectorySite.set_IntraSiteReplicationSchedule(ActiveDirectorySchedule value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySite.LocationGet">
            <summary>Sets the shim of ActiveDirectorySite.get_Location()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySite.LocationSetString">
            <summary>Sets the shim of ActiveDirectorySite.set_Location(String value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySite.NameGet">
            <summary>Sets the shim of ActiveDirectorySite.get_Name()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySite.OptionsGet">
            <summary>Sets the shim of ActiveDirectorySite.get_Options()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySite.OptionsSetActiveDirectorySiteOptions">
            <summary>Sets the shim of ActiveDirectorySite.set_Options(ActiveDirectorySiteOptions value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySite.PreferredRpcBridgeheadServersGet">
            <summary>Sets the shim of ActiveDirectorySite.get_PreferredRpcBridgeheadServers()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySite.PreferredSmtpBridgeheadServersGet">
            <summary>Sets the shim of ActiveDirectorySite.get_PreferredSmtpBridgeheadServers()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySite.Save">
            <summary>Sets the shim of ActiveDirectorySite.Save()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySite.ServersGet">
            <summary>Sets the shim of ActiveDirectorySite.get_Servers()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySite.SiteLinksGet">
            <summary>Sets the shim of ActiveDirectorySite.get_SiteLinks()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySite.StaticConstructor">
            <summary>Sets the shim of ActiveDirectorySite.ActiveDirectorySite()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySite.SubnetsGet">
            <summary>Sets the shim of ActiveDirectorySite.get_Subnets()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySite.ToString">
            <summary>Sets the shim of ActiveDirectorySite.ToString()</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySite.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySite.AllInstances.AdjacentSitesGet">
            <summary>Sets the shim of ActiveDirectorySite.get_AdjacentSites()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySite.AllInstances.BridgeheadServersGet">
            <summary>Sets the shim of ActiveDirectorySite.get_BridgeheadServers()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySite.AllInstances.Delete">
            <summary>Sets the shim of ActiveDirectorySite.Delete()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySite.AllInstances.Dispose">
            <summary>Sets the shim of ActiveDirectorySite.Dispose()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySite.AllInstances.DisposeBoolean">
            <summary>Sets the shim of ActiveDirectorySite.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySite.AllInstances.DomainsGet">
            <summary>Sets the shim of ActiveDirectorySite.get_Domains()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySite.AllInstances.GetDirectoryEntry">
            <summary>Sets the shim of ActiveDirectorySite.GetDirectoryEntry()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySite.AllInstances.InterSiteTopologyGeneratorGet">
            <summary>Sets the shim of ActiveDirectorySite.get_InterSiteTopologyGenerator()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySite.AllInstances.InterSiteTopologyGeneratorSetDirectoryServer">
            <summary>Sets the shim of ActiveDirectorySite.set_InterSiteTopologyGenerator(DirectoryServer value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySite.AllInstances.IntraSiteReplicationScheduleGet">
            <summary>Sets the shim of ActiveDirectorySite.get_IntraSiteReplicationSchedule()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySite.AllInstances.IntraSiteReplicationScheduleSetActiveDirectorySchedule">
            <summary>Sets the shim of ActiveDirectorySite.set_IntraSiteReplicationSchedule(ActiveDirectorySchedule value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySite.AllInstances.LocationGet">
            <summary>Sets the shim of ActiveDirectorySite.get_Location()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySite.AllInstances.LocationSetString">
            <summary>Sets the shim of ActiveDirectorySite.set_Location(String value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySite.AllInstances.NameGet">
            <summary>Sets the shim of ActiveDirectorySite.get_Name()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySite.AllInstances.OptionsGet">
            <summary>Sets the shim of ActiveDirectorySite.get_Options()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySite.AllInstances.OptionsSetActiveDirectorySiteOptions">
            <summary>Sets the shim of ActiveDirectorySite.set_Options(ActiveDirectorySiteOptions value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySite.AllInstances.PreferredRpcBridgeheadServersGet">
            <summary>Sets the shim of ActiveDirectorySite.get_PreferredRpcBridgeheadServers()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySite.AllInstances.PreferredSmtpBridgeheadServersGet">
            <summary>Sets the shim of ActiveDirectorySite.get_PreferredSmtpBridgeheadServers()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySite.AllInstances.Save">
            <summary>Sets the shim of ActiveDirectorySite.Save()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySite.AllInstances.ServersGet">
            <summary>Sets the shim of ActiveDirectorySite.get_Servers()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySite.AllInstances.SiteLinksGet">
            <summary>Sets the shim of ActiveDirectorySite.get_SiteLinks()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySite.AllInstances.SubnetsGet">
            <summary>Sets the shim of ActiveDirectorySite.get_Subnets()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySite.AllInstances.ToString01">
            <summary>Sets the shim of ActiveDirectorySite.ToString()</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteCollection">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteCollection.#ctor(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteCollection.AddActiveDirectorySite">
            <summary>Sets the shim of ActiveDirectorySiteCollection.Add(ActiveDirectorySite site)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteCollection.AddRangeActiveDirectorySiteArray">
            <summary>Sets the shim of ActiveDirectorySiteCollection.AddRange(ActiveDirectorySite[] sites)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteCollection.AddRangeActiveDirectorySiteCollection">
            <summary>Sets the shim of ActiveDirectorySiteCollection.AddRange(ActiveDirectorySiteCollection sites)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteCollection.Constructor">
            <summary>Sets the shim of ActiveDirectorySiteCollection.ActiveDirectorySiteCollection()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteCollection.ContainsActiveDirectorySite">
            <summary>Sets the shim of ActiveDirectorySiteCollection.Contains(ActiveDirectorySite site)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteCollection.CopyToActiveDirectorySiteArrayInt32">
            <summary>Sets the shim of ActiveDirectorySiteCollection.CopyTo(ActiveDirectorySite[] array, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteCollection.IndexOfActiveDirectorySite">
            <summary>Sets the shim of ActiveDirectorySiteCollection.IndexOf(ActiveDirectorySite site)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteCollection.InsertInt32ActiveDirectorySite">
            <summary>Sets the shim of ActiveDirectorySiteCollection.Insert(Int32 index, ActiveDirectorySite site)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteCollection.ItemGetInt32">
            <summary>Sets the shim of ActiveDirectorySiteCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteCollection.ItemSetInt32ActiveDirectorySite">
            <summary>Sets the shim of ActiveDirectorySiteCollection.set_Item(Int32 index, ActiveDirectorySite value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteCollection.OnClearComplete">
            <summary>Sets the shim of ActiveDirectorySiteCollection.OnClearComplete()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteCollection.OnInsertCompleteInt32Object">
            <summary>Sets the shim of ActiveDirectorySiteCollection.OnInsertComplete(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteCollection.OnRemoveCompleteInt32Object">
            <summary>Sets the shim of ActiveDirectorySiteCollection.OnRemoveComplete(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteCollection.OnSetCompleteInt32ObjectObject">
            <summary>Sets the shim of ActiveDirectorySiteCollection.OnSetComplete(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteCollection.OnValidateObject">
            <summary>Sets the shim of ActiveDirectorySiteCollection.OnValidate(Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteCollection.RemoveActiveDirectorySite">
            <summary>Sets the shim of ActiveDirectorySiteCollection.Remove(ActiveDirectorySite site)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteCollection.AllInstances.AddActiveDirectorySite">
            <summary>Sets the shim of ActiveDirectorySiteCollection.Add(ActiveDirectorySite site)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteCollection.AllInstances.AddRangeActiveDirectorySiteArray">
            <summary>Sets the shim of ActiveDirectorySiteCollection.AddRange(ActiveDirectorySite[] sites)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteCollection.AllInstances.AddRangeActiveDirectorySiteCollection">
            <summary>Sets the shim of ActiveDirectorySiteCollection.AddRange(ActiveDirectorySiteCollection sites)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteCollection.AllInstances.ContainsActiveDirectorySite">
            <summary>Sets the shim of ActiveDirectorySiteCollection.Contains(ActiveDirectorySite site)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteCollection.AllInstances.CopyToActiveDirectorySiteArrayInt32">
            <summary>Sets the shim of ActiveDirectorySiteCollection.CopyTo(ActiveDirectorySite[] array, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteCollection.AllInstances.IndexOfActiveDirectorySite">
            <summary>Sets the shim of ActiveDirectorySiteCollection.IndexOf(ActiveDirectorySite site)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteCollection.AllInstances.InsertInt32ActiveDirectorySite">
            <summary>Sets the shim of ActiveDirectorySiteCollection.Insert(Int32 index, ActiveDirectorySite site)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of ActiveDirectorySiteCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteCollection.AllInstances.ItemSetInt32ActiveDirectorySite">
            <summary>Sets the shim of ActiveDirectorySiteCollection.set_Item(Int32 index, ActiveDirectorySite value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteCollection.AllInstances.OnClearComplete">
            <summary>Sets the shim of ActiveDirectorySiteCollection.OnClearComplete()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteCollection.AllInstances.OnInsertCompleteInt32Object">
            <summary>Sets the shim of ActiveDirectorySiteCollection.OnInsertComplete(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteCollection.AllInstances.OnRemoveCompleteInt32Object">
            <summary>Sets the shim of ActiveDirectorySiteCollection.OnRemoveComplete(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteCollection.AllInstances.OnSetCompleteInt32ObjectObject">
            <summary>Sets the shim of ActiveDirectorySiteCollection.OnSetComplete(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteCollection.AllInstances.OnValidateObject">
            <summary>Sets the shim of ActiveDirectorySiteCollection.OnValidate(Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteCollection.AllInstances.RemoveActiveDirectorySite">
            <summary>Sets the shim of ActiveDirectorySiteCollection.Remove(ActiveDirectorySite site)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLink">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLink.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLink.#ctor(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLink.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLink.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLink.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLink.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLink.ConstructorDirectoryContextString">
            <summary>Sets the shim of ActiveDirectorySiteLink.ActiveDirectorySiteLink(DirectoryContext context, String siteLinkName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLink.ConstructorDirectoryContextStringActiveDirectoryTransportType">
            <summary>Sets the shim of ActiveDirectorySiteLink.ActiveDirectorySiteLink(DirectoryContext context, String siteLinkName, ActiveDirectoryTransportType transport)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLink.ConstructorDirectoryContextStringActiveDirectoryTransportTypeActiveDirectorySchedule">
            <summary>Sets the shim of ActiveDirectorySiteLink.ActiveDirectorySiteLink(DirectoryContext context, String siteLinkName, ActiveDirectoryTransportType transport, ActiveDirectorySchedule schedule)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLink.CostGet">
            <summary>Sets the shim of ActiveDirectorySiteLink.get_Cost()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLink.CostSetInt32">
            <summary>Sets the shim of ActiveDirectorySiteLink.set_Cost(Int32 value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLink.DataCompressionEnabledGet">
            <summary>Sets the shim of ActiveDirectorySiteLink.get_DataCompressionEnabled()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLink.DataCompressionEnabledSetBoolean">
            <summary>Sets the shim of ActiveDirectorySiteLink.set_DataCompressionEnabled(Boolean value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLink.Delete">
            <summary>Sets the shim of ActiveDirectorySiteLink.Delete()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLink.Dispose">
            <summary>Sets the shim of ActiveDirectorySiteLink.Dispose()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLink.DisposeBoolean">
            <summary>Sets the shim of ActiveDirectorySiteLink.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLink.FindByNameDirectoryContextString">
            <summary>Sets the shim of ActiveDirectorySiteLink.FindByName(DirectoryContext context, String siteLinkName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLink.FindByNameDirectoryContextStringActiveDirectoryTransportType">
            <summary>Sets the shim of ActiveDirectorySiteLink.FindByName(DirectoryContext context, String siteLinkName, ActiveDirectoryTransportType transport)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLink.GetDirectoryEntry">
            <summary>Sets the shim of ActiveDirectorySiteLink.GetDirectoryEntry()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLink.InterSiteReplicationScheduleGet">
            <summary>Sets the shim of ActiveDirectorySiteLink.get_InterSiteReplicationSchedule()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLink.InterSiteReplicationScheduleSetActiveDirectorySchedule">
            <summary>Sets the shim of ActiveDirectorySiteLink.set_InterSiteReplicationSchedule(ActiveDirectorySchedule value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLink.NameGet">
            <summary>Sets the shim of ActiveDirectorySiteLink.get_Name()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLink.NotificationEnabledGet">
            <summary>Sets the shim of ActiveDirectorySiteLink.get_NotificationEnabled()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLink.NotificationEnabledSetBoolean">
            <summary>Sets the shim of ActiveDirectorySiteLink.set_NotificationEnabled(Boolean value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLink.ReciprocalReplicationEnabledGet">
            <summary>Sets the shim of ActiveDirectorySiteLink.get_ReciprocalReplicationEnabled()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLink.ReciprocalReplicationEnabledSetBoolean">
            <summary>Sets the shim of ActiveDirectorySiteLink.set_ReciprocalReplicationEnabled(Boolean value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLink.ReplicationIntervalGet">
            <summary>Sets the shim of ActiveDirectorySiteLink.get_ReplicationInterval()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLink.ReplicationIntervalSetTimeSpan">
            <summary>Sets the shim of ActiveDirectorySiteLink.set_ReplicationInterval(TimeSpan value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLink.Save">
            <summary>Sets the shim of ActiveDirectorySiteLink.Save()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLink.SitesGet">
            <summary>Sets the shim of ActiveDirectorySiteLink.get_Sites()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLink.ToString">
            <summary>Sets the shim of ActiveDirectorySiteLink.ToString()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLink.TransportTypeGet">
            <summary>Sets the shim of ActiveDirectorySiteLink.get_TransportType()</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLink.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLink.AllInstances.CostGet">
            <summary>Sets the shim of ActiveDirectorySiteLink.get_Cost()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLink.AllInstances.CostSetInt32">
            <summary>Sets the shim of ActiveDirectorySiteLink.set_Cost(Int32 value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLink.AllInstances.DataCompressionEnabledGet">
            <summary>Sets the shim of ActiveDirectorySiteLink.get_DataCompressionEnabled()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLink.AllInstances.DataCompressionEnabledSetBoolean">
            <summary>Sets the shim of ActiveDirectorySiteLink.set_DataCompressionEnabled(Boolean value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLink.AllInstances.Delete">
            <summary>Sets the shim of ActiveDirectorySiteLink.Delete()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLink.AllInstances.Dispose">
            <summary>Sets the shim of ActiveDirectorySiteLink.Dispose()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLink.AllInstances.DisposeBoolean">
            <summary>Sets the shim of ActiveDirectorySiteLink.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLink.AllInstances.GetDirectoryEntry">
            <summary>Sets the shim of ActiveDirectorySiteLink.GetDirectoryEntry()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLink.AllInstances.InterSiteReplicationScheduleGet">
            <summary>Sets the shim of ActiveDirectorySiteLink.get_InterSiteReplicationSchedule()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLink.AllInstances.InterSiteReplicationScheduleSetActiveDirectorySchedule">
            <summary>Sets the shim of ActiveDirectorySiteLink.set_InterSiteReplicationSchedule(ActiveDirectorySchedule value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLink.AllInstances.NameGet">
            <summary>Sets the shim of ActiveDirectorySiteLink.get_Name()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLink.AllInstances.NotificationEnabledGet">
            <summary>Sets the shim of ActiveDirectorySiteLink.get_NotificationEnabled()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLink.AllInstances.NotificationEnabledSetBoolean">
            <summary>Sets the shim of ActiveDirectorySiteLink.set_NotificationEnabled(Boolean value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLink.AllInstances.ReciprocalReplicationEnabledGet">
            <summary>Sets the shim of ActiveDirectorySiteLink.get_ReciprocalReplicationEnabled()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLink.AllInstances.ReciprocalReplicationEnabledSetBoolean">
            <summary>Sets the shim of ActiveDirectorySiteLink.set_ReciprocalReplicationEnabled(Boolean value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLink.AllInstances.ReplicationIntervalGet">
            <summary>Sets the shim of ActiveDirectorySiteLink.get_ReplicationInterval()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLink.AllInstances.ReplicationIntervalSetTimeSpan">
            <summary>Sets the shim of ActiveDirectorySiteLink.set_ReplicationInterval(TimeSpan value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLink.AllInstances.Save">
            <summary>Sets the shim of ActiveDirectorySiteLink.Save()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLink.AllInstances.SitesGet">
            <summary>Sets the shim of ActiveDirectorySiteLink.get_Sites()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLink.AllInstances.ToString01">
            <summary>Sets the shim of ActiveDirectorySiteLink.ToString()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLink.AllInstances.TransportTypeGet">
            <summary>Sets the shim of ActiveDirectorySiteLink.get_TransportType()</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkBridge">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkBridge.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkBridge.#ctor(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkBridge.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkBridge.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkBridge.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkBridge.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkBridge.ConstructorDirectoryContextString">
            <summary>Sets the shim of ActiveDirectorySiteLinkBridge.ActiveDirectorySiteLinkBridge(DirectoryContext context, String bridgeName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkBridge.ConstructorDirectoryContextStringActiveDirectoryTransportType">
            <summary>Sets the shim of ActiveDirectorySiteLinkBridge.ActiveDirectorySiteLinkBridge(DirectoryContext context, String bridgeName, ActiveDirectoryTransportType transport)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkBridge.Delete">
            <summary>Sets the shim of ActiveDirectorySiteLinkBridge.Delete()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkBridge.Dispose">
            <summary>Sets the shim of ActiveDirectorySiteLinkBridge.Dispose()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkBridge.DisposeBoolean">
            <summary>Sets the shim of ActiveDirectorySiteLinkBridge.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkBridge.FindByNameDirectoryContextString">
            <summary>Sets the shim of ActiveDirectorySiteLinkBridge.FindByName(DirectoryContext context, String bridgeName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkBridge.FindByNameDirectoryContextStringActiveDirectoryTransportType">
            <summary>Sets the shim of ActiveDirectorySiteLinkBridge.FindByName(DirectoryContext context, String bridgeName, ActiveDirectoryTransportType transport)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkBridge.GetDirectoryEntry">
            <summary>Sets the shim of ActiveDirectorySiteLinkBridge.GetDirectoryEntry()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkBridge.NameGet">
            <summary>Sets the shim of ActiveDirectorySiteLinkBridge.get_Name()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkBridge.Save">
            <summary>Sets the shim of ActiveDirectorySiteLinkBridge.Save()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkBridge.SiteLinksGet">
            <summary>Sets the shim of ActiveDirectorySiteLinkBridge.get_SiteLinks()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkBridge.ToString">
            <summary>Sets the shim of ActiveDirectorySiteLinkBridge.ToString()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkBridge.TransportTypeGet">
            <summary>Sets the shim of ActiveDirectorySiteLinkBridge.get_TransportType()</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkBridge.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkBridge.AllInstances.Delete">
            <summary>Sets the shim of ActiveDirectorySiteLinkBridge.Delete()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkBridge.AllInstances.Dispose">
            <summary>Sets the shim of ActiveDirectorySiteLinkBridge.Dispose()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkBridge.AllInstances.DisposeBoolean">
            <summary>Sets the shim of ActiveDirectorySiteLinkBridge.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkBridge.AllInstances.GetDirectoryEntry">
            <summary>Sets the shim of ActiveDirectorySiteLinkBridge.GetDirectoryEntry()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkBridge.AllInstances.NameGet">
            <summary>Sets the shim of ActiveDirectorySiteLinkBridge.get_Name()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkBridge.AllInstances.Save">
            <summary>Sets the shim of ActiveDirectorySiteLinkBridge.Save()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkBridge.AllInstances.SiteLinksGet">
            <summary>Sets the shim of ActiveDirectorySiteLinkBridge.get_SiteLinks()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkBridge.AllInstances.ToString01">
            <summary>Sets the shim of ActiveDirectorySiteLinkBridge.ToString()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkBridge.AllInstances.TransportTypeGet">
            <summary>Sets the shim of ActiveDirectorySiteLinkBridge.get_TransportType()</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkCollection">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkCollection.#ctor(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkCollection.AddActiveDirectorySiteLink">
            <summary>Sets the shim of ActiveDirectorySiteLinkCollection.Add(ActiveDirectorySiteLink link)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkCollection.AddRangeActiveDirectorySiteLinkArray">
            <summary>Sets the shim of ActiveDirectorySiteLinkCollection.AddRange(ActiveDirectorySiteLink[] links)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkCollection.AddRangeActiveDirectorySiteLinkCollection">
            <summary>Sets the shim of ActiveDirectorySiteLinkCollection.AddRange(ActiveDirectorySiteLinkCollection links)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkCollection.Constructor">
            <summary>Sets the shim of ActiveDirectorySiteLinkCollection.ActiveDirectorySiteLinkCollection()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkCollection.ContainsActiveDirectorySiteLink">
            <summary>Sets the shim of ActiveDirectorySiteLinkCollection.Contains(ActiveDirectorySiteLink link)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkCollection.CopyToActiveDirectorySiteLinkArrayInt32">
            <summary>Sets the shim of ActiveDirectorySiteLinkCollection.CopyTo(ActiveDirectorySiteLink[] array, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkCollection.IndexOfActiveDirectorySiteLink">
            <summary>Sets the shim of ActiveDirectorySiteLinkCollection.IndexOf(ActiveDirectorySiteLink link)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkCollection.InsertInt32ActiveDirectorySiteLink">
            <summary>Sets the shim of ActiveDirectorySiteLinkCollection.Insert(Int32 index, ActiveDirectorySiteLink link)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkCollection.ItemGetInt32">
            <summary>Sets the shim of ActiveDirectorySiteLinkCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkCollection.ItemSetInt32ActiveDirectorySiteLink">
            <summary>Sets the shim of ActiveDirectorySiteLinkCollection.set_Item(Int32 index, ActiveDirectorySiteLink value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkCollection.OnClearComplete">
            <summary>Sets the shim of ActiveDirectorySiteLinkCollection.OnClearComplete()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkCollection.OnInsertCompleteInt32Object">
            <summary>Sets the shim of ActiveDirectorySiteLinkCollection.OnInsertComplete(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkCollection.OnRemoveCompleteInt32Object">
            <summary>Sets the shim of ActiveDirectorySiteLinkCollection.OnRemoveComplete(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkCollection.OnSetCompleteInt32ObjectObject">
            <summary>Sets the shim of ActiveDirectorySiteLinkCollection.OnSetComplete(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkCollection.OnValidateObject">
            <summary>Sets the shim of ActiveDirectorySiteLinkCollection.OnValidate(Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkCollection.RemoveActiveDirectorySiteLink">
            <summary>Sets the shim of ActiveDirectorySiteLinkCollection.Remove(ActiveDirectorySiteLink link)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkCollection.AllInstances.AddActiveDirectorySiteLink">
            <summary>Sets the shim of ActiveDirectorySiteLinkCollection.Add(ActiveDirectorySiteLink link)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkCollection.AllInstances.AddRangeActiveDirectorySiteLinkArray">
            <summary>Sets the shim of ActiveDirectorySiteLinkCollection.AddRange(ActiveDirectorySiteLink[] links)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkCollection.AllInstances.AddRangeActiveDirectorySiteLinkCollection">
            <summary>Sets the shim of ActiveDirectorySiteLinkCollection.AddRange(ActiveDirectorySiteLinkCollection links)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkCollection.AllInstances.ContainsActiveDirectorySiteLink">
            <summary>Sets the shim of ActiveDirectorySiteLinkCollection.Contains(ActiveDirectorySiteLink link)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkCollection.AllInstances.CopyToActiveDirectorySiteLinkArrayInt32">
            <summary>Sets the shim of ActiveDirectorySiteLinkCollection.CopyTo(ActiveDirectorySiteLink[] array, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkCollection.AllInstances.IndexOfActiveDirectorySiteLink">
            <summary>Sets the shim of ActiveDirectorySiteLinkCollection.IndexOf(ActiveDirectorySiteLink link)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkCollection.AllInstances.InsertInt32ActiveDirectorySiteLink">
            <summary>Sets the shim of ActiveDirectorySiteLinkCollection.Insert(Int32 index, ActiveDirectorySiteLink link)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of ActiveDirectorySiteLinkCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkCollection.AllInstances.ItemSetInt32ActiveDirectorySiteLink">
            <summary>Sets the shim of ActiveDirectorySiteLinkCollection.set_Item(Int32 index, ActiveDirectorySiteLink value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkCollection.AllInstances.OnClearComplete">
            <summary>Sets the shim of ActiveDirectorySiteLinkCollection.OnClearComplete()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkCollection.AllInstances.OnInsertCompleteInt32Object">
            <summary>Sets the shim of ActiveDirectorySiteLinkCollection.OnInsertComplete(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkCollection.AllInstances.OnRemoveCompleteInt32Object">
            <summary>Sets the shim of ActiveDirectorySiteLinkCollection.OnRemoveComplete(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkCollection.AllInstances.OnSetCompleteInt32ObjectObject">
            <summary>Sets the shim of ActiveDirectorySiteLinkCollection.OnSetComplete(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkCollection.AllInstances.OnValidateObject">
            <summary>Sets the shim of ActiveDirectorySiteLinkCollection.OnValidate(Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySiteLinkCollection.AllInstances.RemoveActiveDirectorySiteLink">
            <summary>Sets the shim of ActiveDirectorySiteLinkCollection.Remove(ActiveDirectorySiteLink link)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnet">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnet.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnet.#ctor(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnet.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnet.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnet.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnet.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnet.ConstructorDirectoryContextString">
            <summary>Sets the shim of ActiveDirectorySubnet.ActiveDirectorySubnet(DirectoryContext context, String subnetName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnet.ConstructorDirectoryContextStringString">
            <summary>Sets the shim of ActiveDirectorySubnet.ActiveDirectorySubnet(DirectoryContext context, String subnetName, String siteName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnet.Delete">
            <summary>Sets the shim of ActiveDirectorySubnet.Delete()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnet.Dispose">
            <summary>Sets the shim of ActiveDirectorySubnet.Dispose()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnet.DisposeBoolean">
            <summary>Sets the shim of ActiveDirectorySubnet.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnet.FindByNameDirectoryContextString">
            <summary>Sets the shim of ActiveDirectorySubnet.FindByName(DirectoryContext context, String subnetName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnet.GetDirectoryEntry">
            <summary>Sets the shim of ActiveDirectorySubnet.GetDirectoryEntry()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnet.LocationGet">
            <summary>Sets the shim of ActiveDirectorySubnet.get_Location()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnet.LocationSetString">
            <summary>Sets the shim of ActiveDirectorySubnet.set_Location(String value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnet.NameGet">
            <summary>Sets the shim of ActiveDirectorySubnet.get_Name()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnet.Save">
            <summary>Sets the shim of ActiveDirectorySubnet.Save()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnet.SiteGet">
            <summary>Sets the shim of ActiveDirectorySubnet.get_Site()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnet.SiteSetActiveDirectorySite">
            <summary>Sets the shim of ActiveDirectorySubnet.set_Site(ActiveDirectorySite value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnet.ToString">
            <summary>Sets the shim of ActiveDirectorySubnet.ToString()</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnet.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnet.AllInstances.Delete">
            <summary>Sets the shim of ActiveDirectorySubnet.Delete()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnet.AllInstances.Dispose">
            <summary>Sets the shim of ActiveDirectorySubnet.Dispose()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnet.AllInstances.DisposeBoolean">
            <summary>Sets the shim of ActiveDirectorySubnet.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnet.AllInstances.GetDirectoryEntry">
            <summary>Sets the shim of ActiveDirectorySubnet.GetDirectoryEntry()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnet.AllInstances.LocationGet">
            <summary>Sets the shim of ActiveDirectorySubnet.get_Location()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnet.AllInstances.LocationSetString">
            <summary>Sets the shim of ActiveDirectorySubnet.set_Location(String value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnet.AllInstances.NameGet">
            <summary>Sets the shim of ActiveDirectorySubnet.get_Name()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnet.AllInstances.Save">
            <summary>Sets the shim of ActiveDirectorySubnet.Save()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnet.AllInstances.SiteGet">
            <summary>Sets the shim of ActiveDirectorySubnet.get_Site()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnet.AllInstances.SiteSetActiveDirectorySite">
            <summary>Sets the shim of ActiveDirectorySubnet.set_Site(ActiveDirectorySite value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnet.AllInstances.ToString01">
            <summary>Sets the shim of ActiveDirectorySubnet.ToString()</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnetCollection">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnetCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnetCollection.#ctor(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnetCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnetCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnetCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnetCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnetCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnetCollection.AddActiveDirectorySubnet">
            <summary>Sets the shim of ActiveDirectorySubnetCollection.Add(ActiveDirectorySubnet subnet)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnetCollection.AddRangeActiveDirectorySubnetArray">
            <summary>Sets the shim of ActiveDirectorySubnetCollection.AddRange(ActiveDirectorySubnet[] subnets)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnetCollection.AddRangeActiveDirectorySubnetCollection">
            <summary>Sets the shim of ActiveDirectorySubnetCollection.AddRange(ActiveDirectorySubnetCollection subnets)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnetCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnetCollection.Constructor">
            <summary>Sets the shim of ActiveDirectorySubnetCollection.ActiveDirectorySubnetCollection()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnetCollection.ContainsActiveDirectorySubnet">
            <summary>Sets the shim of ActiveDirectorySubnetCollection.Contains(ActiveDirectorySubnet subnet)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnetCollection.CopyToActiveDirectorySubnetArrayInt32">
            <summary>Sets the shim of ActiveDirectorySubnetCollection.CopyTo(ActiveDirectorySubnet[] array, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnetCollection.IndexOfActiveDirectorySubnet">
            <summary>Sets the shim of ActiveDirectorySubnetCollection.IndexOf(ActiveDirectorySubnet subnet)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnetCollection.InsertInt32ActiveDirectorySubnet">
            <summary>Sets the shim of ActiveDirectorySubnetCollection.Insert(Int32 index, ActiveDirectorySubnet subnet)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnetCollection.ItemGetInt32">
            <summary>Sets the shim of ActiveDirectorySubnetCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnetCollection.ItemSetInt32ActiveDirectorySubnet">
            <summary>Sets the shim of ActiveDirectorySubnetCollection.set_Item(Int32 index, ActiveDirectorySubnet value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnetCollection.OnClear">
            <summary>Sets the shim of ActiveDirectorySubnetCollection.OnClear()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnetCollection.OnClearComplete">
            <summary>Sets the shim of ActiveDirectorySubnetCollection.OnClearComplete()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnetCollection.OnInsertCompleteInt32Object">
            <summary>Sets the shim of ActiveDirectorySubnetCollection.OnInsertComplete(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnetCollection.OnRemoveCompleteInt32Object">
            <summary>Sets the shim of ActiveDirectorySubnetCollection.OnRemoveComplete(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnetCollection.OnSetCompleteInt32ObjectObject">
            <summary>Sets the shim of ActiveDirectorySubnetCollection.OnSetComplete(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnetCollection.OnValidateObject">
            <summary>Sets the shim of ActiveDirectorySubnetCollection.OnValidate(Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnetCollection.RemoveActiveDirectorySubnet">
            <summary>Sets the shim of ActiveDirectorySubnetCollection.Remove(ActiveDirectorySubnet subnet)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnetCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnetCollection.AllInstances.AddActiveDirectorySubnet">
            <summary>Sets the shim of ActiveDirectorySubnetCollection.Add(ActiveDirectorySubnet subnet)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnetCollection.AllInstances.AddRangeActiveDirectorySubnetArray">
            <summary>Sets the shim of ActiveDirectorySubnetCollection.AddRange(ActiveDirectorySubnet[] subnets)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnetCollection.AllInstances.AddRangeActiveDirectorySubnetCollection">
            <summary>Sets the shim of ActiveDirectorySubnetCollection.AddRange(ActiveDirectorySubnetCollection subnets)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnetCollection.AllInstances.Constructor">
            <summary>Sets the shim of ActiveDirectorySubnetCollection.ActiveDirectorySubnetCollection()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnetCollection.AllInstances.ContainsActiveDirectorySubnet">
            <summary>Sets the shim of ActiveDirectorySubnetCollection.Contains(ActiveDirectorySubnet subnet)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnetCollection.AllInstances.CopyToActiveDirectorySubnetArrayInt32">
            <summary>Sets the shim of ActiveDirectorySubnetCollection.CopyTo(ActiveDirectorySubnet[] array, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnetCollection.AllInstances.IndexOfActiveDirectorySubnet">
            <summary>Sets the shim of ActiveDirectorySubnetCollection.IndexOf(ActiveDirectorySubnet subnet)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnetCollection.AllInstances.InsertInt32ActiveDirectorySubnet">
            <summary>Sets the shim of ActiveDirectorySubnetCollection.Insert(Int32 index, ActiveDirectorySubnet subnet)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnetCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of ActiveDirectorySubnetCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnetCollection.AllInstances.ItemSetInt32ActiveDirectorySubnet">
            <summary>Sets the shim of ActiveDirectorySubnetCollection.set_Item(Int32 index, ActiveDirectorySubnet value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnetCollection.AllInstances.OnClear">
            <summary>Sets the shim of ActiveDirectorySubnetCollection.OnClear()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnetCollection.AllInstances.OnClearComplete">
            <summary>Sets the shim of ActiveDirectorySubnetCollection.OnClearComplete()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnetCollection.AllInstances.OnInsertCompleteInt32Object">
            <summary>Sets the shim of ActiveDirectorySubnetCollection.OnInsertComplete(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnetCollection.AllInstances.OnRemoveCompleteInt32Object">
            <summary>Sets the shim of ActiveDirectorySubnetCollection.OnRemoveComplete(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnetCollection.AllInstances.OnSetCompleteInt32ObjectObject">
            <summary>Sets the shim of ActiveDirectorySubnetCollection.OnSetComplete(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnetCollection.AllInstances.OnValidateObject">
            <summary>Sets the shim of ActiveDirectorySubnetCollection.OnValidate(Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimActiveDirectorySubnetCollection.AllInstances.RemoveActiveDirectorySubnet">
            <summary>Sets the shim of ActiveDirectorySubnetCollection.Remove(ActiveDirectorySubnet subnet)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstance">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.AdamInstance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstance.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstance.#ctor(System.DirectoryServices.ActiveDirectory.AdamInstance)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstance.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstance.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstance.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstance.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstance.CheckReplicationConsistency">
            <summary>Sets the shim of AdamInstance.CheckReplicationConsistency()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstance.ConfigurationSetGet">
            <summary>Sets the shim of AdamInstance.get_ConfigurationSet()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstance.Constructor">
            <summary>Sets the shim of AdamInstance.AdamInstance()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstance.DefaultPartitionGet">
            <summary>Sets the shim of AdamInstance.get_DefaultPartition()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstance.DefaultPartitionSetString">
            <summary>Sets the shim of AdamInstance.set_DefaultPartition(String value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstance.DisposeBoolean">
            <summary>Sets the shim of AdamInstance.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstance.FindAllDirectoryContextString">
            <summary>Sets the shim of AdamInstance.FindAll(DirectoryContext context, String partitionName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstance.FindOneDirectoryContextString">
            <summary>Sets the shim of AdamInstance.FindOne(DirectoryContext context, String partitionName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstance.GetAdamInstanceDirectoryContext">
            <summary>Sets the shim of AdamInstance.GetAdamInstance(DirectoryContext context)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstance.GetAllReplicationNeighbors">
            <summary>Sets the shim of AdamInstance.GetAllReplicationNeighbors()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstance.GetReplicationConnectionFailures">
            <summary>Sets the shim of AdamInstance.GetReplicationConnectionFailures()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstance.GetReplicationCursorsString">
            <summary>Sets the shim of AdamInstance.GetReplicationCursors(String partition)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstance.GetReplicationMetadataString">
            <summary>Sets the shim of AdamInstance.GetReplicationMetadata(String objectPath)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstance.GetReplicationNeighborsString">
            <summary>Sets the shim of AdamInstance.GetReplicationNeighbors(String partition)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstance.GetReplicationOperationInformation">
            <summary>Sets the shim of AdamInstance.GetReplicationOperationInformation()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstance.HostNameGet">
            <summary>Sets the shim of AdamInstance.get_HostName()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstance.IPAddressGet">
            <summary>Sets the shim of AdamInstance.get_IPAddress()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstance.InboundConnectionsGet">
            <summary>Sets the shim of AdamInstance.get_InboundConnections()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstance.LdapPortGet">
            <summary>Sets the shim of AdamInstance.get_LdapPort()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstance.OutboundConnectionsGet">
            <summary>Sets the shim of AdamInstance.get_OutboundConnections()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstance.RolesGet">
            <summary>Sets the shim of AdamInstance.get_Roles()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstance.Save">
            <summary>Sets the shim of AdamInstance.Save()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstance.SeizeRoleOwnershipAdamRole">
            <summary>Sets the shim of AdamInstance.SeizeRoleOwnership(AdamRole role)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstance.SiteNameGet">
            <summary>Sets the shim of AdamInstance.get_SiteName()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstance.SslPortGet">
            <summary>Sets the shim of AdamInstance.get_SslPort()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstance.SyncFromAllServersCallbackGet">
            <summary>Sets the shim of AdamInstance.get_SyncFromAllServersCallback()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstance.SyncFromAllServersCallbackSetSyncUpdateCallback">
            <summary>Sets the shim of AdamInstance.set_SyncFromAllServersCallback(SyncUpdateCallback value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstance.SyncReplicaFromAllServersStringSyncFromAllServersOptions">
            <summary>Sets the shim of AdamInstance.SyncReplicaFromAllServers(String partition, SyncFromAllServersOptions options)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstance.SyncReplicaFromServerStringString">
            <summary>Sets the shim of AdamInstance.SyncReplicaFromServer(String partition, String sourceServer)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstance.TransferRoleOwnershipAdamRole">
            <summary>Sets the shim of AdamInstance.TransferRoleOwnership(AdamRole role)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstance.TriggerSyncReplicaFromNeighborsString">
            <summary>Sets the shim of AdamInstance.TriggerSyncReplicaFromNeighbors(String partition)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstance.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstance.AllInstances.CheckReplicationConsistency">
            <summary>Sets the shim of AdamInstance.CheckReplicationConsistency()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstance.AllInstances.ConfigurationSetGet">
            <summary>Sets the shim of AdamInstance.get_ConfigurationSet()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstance.AllInstances.Constructor">
            <summary>Sets the shim of AdamInstance.AdamInstance()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstance.AllInstances.DefaultPartitionGet">
            <summary>Sets the shim of AdamInstance.get_DefaultPartition()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstance.AllInstances.DefaultPartitionSetString">
            <summary>Sets the shim of AdamInstance.set_DefaultPartition(String value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstance.AllInstances.DisposeBoolean">
            <summary>Sets the shim of AdamInstance.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstance.AllInstances.GetAllReplicationNeighbors">
            <summary>Sets the shim of AdamInstance.GetAllReplicationNeighbors()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstance.AllInstances.GetReplicationConnectionFailures">
            <summary>Sets the shim of AdamInstance.GetReplicationConnectionFailures()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstance.AllInstances.GetReplicationCursorsString">
            <summary>Sets the shim of AdamInstance.GetReplicationCursors(String partition)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstance.AllInstances.GetReplicationMetadataString">
            <summary>Sets the shim of AdamInstance.GetReplicationMetadata(String objectPath)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstance.AllInstances.GetReplicationNeighborsString">
            <summary>Sets the shim of AdamInstance.GetReplicationNeighbors(String partition)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstance.AllInstances.GetReplicationOperationInformation">
            <summary>Sets the shim of AdamInstance.GetReplicationOperationInformation()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstance.AllInstances.HostNameGet">
            <summary>Sets the shim of AdamInstance.get_HostName()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstance.AllInstances.IPAddressGet">
            <summary>Sets the shim of AdamInstance.get_IPAddress()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstance.AllInstances.InboundConnectionsGet">
            <summary>Sets the shim of AdamInstance.get_InboundConnections()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstance.AllInstances.LdapPortGet">
            <summary>Sets the shim of AdamInstance.get_LdapPort()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstance.AllInstances.OutboundConnectionsGet">
            <summary>Sets the shim of AdamInstance.get_OutboundConnections()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstance.AllInstances.RolesGet">
            <summary>Sets the shim of AdamInstance.get_Roles()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstance.AllInstances.Save">
            <summary>Sets the shim of AdamInstance.Save()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstance.AllInstances.SeizeRoleOwnershipAdamRole">
            <summary>Sets the shim of AdamInstance.SeizeRoleOwnership(AdamRole role)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstance.AllInstances.SiteNameGet">
            <summary>Sets the shim of AdamInstance.get_SiteName()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstance.AllInstances.SslPortGet">
            <summary>Sets the shim of AdamInstance.get_SslPort()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstance.AllInstances.SyncFromAllServersCallbackGet">
            <summary>Sets the shim of AdamInstance.get_SyncFromAllServersCallback()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstance.AllInstances.SyncFromAllServersCallbackSetSyncUpdateCallback">
            <summary>Sets the shim of AdamInstance.set_SyncFromAllServersCallback(SyncUpdateCallback value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstance.AllInstances.SyncReplicaFromAllServersStringSyncFromAllServersOptions">
            <summary>Sets the shim of AdamInstance.SyncReplicaFromAllServers(String partition, SyncFromAllServersOptions options)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstance.AllInstances.SyncReplicaFromServerStringString">
            <summary>Sets the shim of AdamInstance.SyncReplicaFromServer(String partition, String sourceServer)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstance.AllInstances.TransferRoleOwnershipAdamRole">
            <summary>Sets the shim of AdamInstance.TransferRoleOwnership(AdamRole role)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstance.AllInstances.TriggerSyncReplicaFromNeighborsString">
            <summary>Sets the shim of AdamInstance.TriggerSyncReplicaFromNeighbors(String partition)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstanceCollection">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.AdamInstanceCollection</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstanceCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstanceCollection.#ctor(System.DirectoryServices.ActiveDirectory.AdamInstanceCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstanceCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstanceCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstanceCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstanceCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstanceCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstanceCollection.Constructor">
            <summary>Sets the shim of AdamInstanceCollection.AdamInstanceCollection()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstanceCollection.ContainsAdamInstance">
            <summary>Sets the shim of AdamInstanceCollection.Contains(AdamInstance adamInstance)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstanceCollection.CopyToAdamInstanceArrayInt32">
            <summary>Sets the shim of AdamInstanceCollection.CopyTo(AdamInstance[] adamInstances, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstanceCollection.IndexOfAdamInstance">
            <summary>Sets the shim of AdamInstanceCollection.IndexOf(AdamInstance adamInstance)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstanceCollection.ItemGetInt32">
            <summary>Sets the shim of AdamInstanceCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstanceCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstanceCollection.AllInstances.ContainsAdamInstance">
            <summary>Sets the shim of AdamInstanceCollection.Contains(AdamInstance adamInstance)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstanceCollection.AllInstances.CopyToAdamInstanceArrayInt32">
            <summary>Sets the shim of AdamInstanceCollection.CopyTo(AdamInstance[] adamInstances, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstanceCollection.AllInstances.IndexOfAdamInstance">
            <summary>Sets the shim of AdamInstanceCollection.IndexOf(AdamInstance adamInstance)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamInstanceCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of AdamInstanceCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamRoleCollection">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.AdamRoleCollection</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamRoleCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamRoleCollection.#ctor(System.DirectoryServices.ActiveDirectory.AdamRoleCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamRoleCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamRoleCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamRoleCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamRoleCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamRoleCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamRoleCollection.Constructor">
            <summary>Sets the shim of AdamRoleCollection.AdamRoleCollection()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamRoleCollection.ContainsAdamRole">
            <summary>Sets the shim of AdamRoleCollection.Contains(AdamRole role)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamRoleCollection.CopyToAdamRoleArrayInt32">
            <summary>Sets the shim of AdamRoleCollection.CopyTo(AdamRole[] roles, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamRoleCollection.IndexOfAdamRole">
            <summary>Sets the shim of AdamRoleCollection.IndexOf(AdamRole role)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamRoleCollection.ItemGetInt32">
            <summary>Sets the shim of AdamRoleCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamRoleCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamRoleCollection.AllInstances.ContainsAdamRole">
            <summary>Sets the shim of AdamRoleCollection.Contains(AdamRole role)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamRoleCollection.AllInstances.CopyToAdamRoleArrayInt32">
            <summary>Sets the shim of AdamRoleCollection.CopyTo(AdamRole[] roles, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamRoleCollection.AllInstances.IndexOfAdamRole">
            <summary>Sets the shim of AdamRoleCollection.IndexOf(AdamRole role)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAdamRoleCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of AdamRoleCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimApplicationPartition">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.ApplicationPartition</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimApplicationPartition.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimApplicationPartition.#ctor(System.DirectoryServices.ActiveDirectory.ApplicationPartition)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimApplicationPartition.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimApplicationPartition.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimApplicationPartition.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimApplicationPartition.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimApplicationPartition.ConstructorDirectoryContextString">
            <summary>Sets the shim of ApplicationPartition.ApplicationPartition(DirectoryContext context, String distinguishedName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimApplicationPartition.ConstructorDirectoryContextStringString">
            <summary>Sets the shim of ApplicationPartition.ApplicationPartition(DirectoryContext context, String distinguishedName, String objectClass)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimApplicationPartition.Delete">
            <summary>Sets the shim of ApplicationPartition.Delete()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimApplicationPartition.DirectoryServersGet">
            <summary>Sets the shim of ApplicationPartition.get_DirectoryServers()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimApplicationPartition.DisposeBoolean">
            <summary>Sets the shim of ApplicationPartition.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimApplicationPartition.FindAllDirectoryServers">
            <summary>Sets the shim of ApplicationPartition.FindAllDirectoryServers()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimApplicationPartition.FindAllDirectoryServersString">
            <summary>Sets the shim of ApplicationPartition.FindAllDirectoryServers(String siteName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimApplicationPartition.FindAllDiscoverableDirectoryServers">
            <summary>Sets the shim of ApplicationPartition.FindAllDiscoverableDirectoryServers()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimApplicationPartition.FindAllDiscoverableDirectoryServersString">
            <summary>Sets the shim of ApplicationPartition.FindAllDiscoverableDirectoryServers(String siteName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimApplicationPartition.FindByNameDirectoryContextString">
            <summary>Sets the shim of ApplicationPartition.FindByName(DirectoryContext context, String distinguishedName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimApplicationPartition.FindDirectoryServer">
            <summary>Sets the shim of ApplicationPartition.FindDirectoryServer()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimApplicationPartition.FindDirectoryServerBoolean">
            <summary>Sets the shim of ApplicationPartition.FindDirectoryServer(Boolean forceRediscovery)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimApplicationPartition.FindDirectoryServerString">
            <summary>Sets the shim of ApplicationPartition.FindDirectoryServer(String siteName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimApplicationPartition.FindDirectoryServerStringBoolean">
            <summary>Sets the shim of ApplicationPartition.FindDirectoryServer(String siteName, Boolean forceRediscovery)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimApplicationPartition.GetApplicationPartitionDirectoryContext">
            <summary>Sets the shim of ApplicationPartition.GetApplicationPartition(DirectoryContext context)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimApplicationPartition.GetDirectoryEntry">
            <summary>Sets the shim of ApplicationPartition.GetDirectoryEntry()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimApplicationPartition.Save">
            <summary>Sets the shim of ApplicationPartition.Save()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimApplicationPartition.SecurityReferenceDomainGet">
            <summary>Sets the shim of ApplicationPartition.get_SecurityReferenceDomain()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimApplicationPartition.SecurityReferenceDomainSetString">
            <summary>Sets the shim of ApplicationPartition.set_SecurityReferenceDomain(String value)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimApplicationPartition.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimApplicationPartition.AllInstances.Delete">
            <summary>Sets the shim of ApplicationPartition.Delete()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimApplicationPartition.AllInstances.DirectoryServersGet">
            <summary>Sets the shim of ApplicationPartition.get_DirectoryServers()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimApplicationPartition.AllInstances.DisposeBoolean">
            <summary>Sets the shim of ApplicationPartition.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimApplicationPartition.AllInstances.FindAllDirectoryServers">
            <summary>Sets the shim of ApplicationPartition.FindAllDirectoryServers()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimApplicationPartition.AllInstances.FindAllDirectoryServersString">
            <summary>Sets the shim of ApplicationPartition.FindAllDirectoryServers(String siteName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimApplicationPartition.AllInstances.FindAllDiscoverableDirectoryServers">
            <summary>Sets the shim of ApplicationPartition.FindAllDiscoverableDirectoryServers()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimApplicationPartition.AllInstances.FindAllDiscoverableDirectoryServersString">
            <summary>Sets the shim of ApplicationPartition.FindAllDiscoverableDirectoryServers(String siteName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimApplicationPartition.AllInstances.FindDirectoryServer">
            <summary>Sets the shim of ApplicationPartition.FindDirectoryServer()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimApplicationPartition.AllInstances.FindDirectoryServerBoolean">
            <summary>Sets the shim of ApplicationPartition.FindDirectoryServer(Boolean forceRediscovery)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimApplicationPartition.AllInstances.FindDirectoryServerString">
            <summary>Sets the shim of ApplicationPartition.FindDirectoryServer(String siteName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimApplicationPartition.AllInstances.FindDirectoryServerStringBoolean">
            <summary>Sets the shim of ApplicationPartition.FindDirectoryServer(String siteName, Boolean forceRediscovery)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimApplicationPartition.AllInstances.GetDirectoryEntry">
            <summary>Sets the shim of ApplicationPartition.GetDirectoryEntry()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimApplicationPartition.AllInstances.Save">
            <summary>Sets the shim of ApplicationPartition.Save()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimApplicationPartition.AllInstances.SecurityReferenceDomainGet">
            <summary>Sets the shim of ApplicationPartition.get_SecurityReferenceDomain()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimApplicationPartition.AllInstances.SecurityReferenceDomainSetString">
            <summary>Sets the shim of ApplicationPartition.set_SecurityReferenceDomain(String value)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimApplicationPartitionCollection">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimApplicationPartitionCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimApplicationPartitionCollection.#ctor(System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimApplicationPartitionCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimApplicationPartitionCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimApplicationPartitionCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimApplicationPartitionCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimApplicationPartitionCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimApplicationPartitionCollection.Constructor">
            <summary>Sets the shim of ApplicationPartitionCollection.ApplicationPartitionCollection()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimApplicationPartitionCollection.ContainsApplicationPartition">
            <summary>Sets the shim of ApplicationPartitionCollection.Contains(ApplicationPartition applicationPartition)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimApplicationPartitionCollection.CopyToApplicationPartitionArrayInt32">
            <summary>Sets the shim of ApplicationPartitionCollection.CopyTo(ApplicationPartition[] applicationPartitions, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimApplicationPartitionCollection.IndexOfApplicationPartition">
            <summary>Sets the shim of ApplicationPartitionCollection.IndexOf(ApplicationPartition applicationPartition)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimApplicationPartitionCollection.ItemGetInt32">
            <summary>Sets the shim of ApplicationPartitionCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimApplicationPartitionCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimApplicationPartitionCollection.AllInstances.ContainsApplicationPartition">
            <summary>Sets the shim of ApplicationPartitionCollection.Contains(ApplicationPartition applicationPartition)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimApplicationPartitionCollection.AllInstances.CopyToApplicationPartitionArrayInt32">
            <summary>Sets the shim of ApplicationPartitionCollection.CopyTo(ApplicationPartition[] applicationPartitions, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimApplicationPartitionCollection.AllInstances.IndexOfApplicationPartition">
            <summary>Sets the shim of ApplicationPartitionCollection.IndexOf(ApplicationPartition applicationPartition)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimApplicationPartitionCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of ApplicationPartitionCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimAttributeMetadata">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.AttributeMetadata</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimAttributeMetadata.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimAttributeMetadata.#ctor(System.DirectoryServices.ActiveDirectory.AttributeMetadata)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimAttributeMetadata.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimAttributeMetadata.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAttributeMetadata.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAttributeMetadata.Constructor">
            <summary>Sets the shim of AttributeMetadata.AttributeMetadata()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAttributeMetadata.LastOriginatingChangeTimeGet">
            <summary>Sets the shim of AttributeMetadata.get_LastOriginatingChangeTime()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAttributeMetadata.LastOriginatingInvocationIdGet">
            <summary>Sets the shim of AttributeMetadata.get_LastOriginatingInvocationId()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAttributeMetadata.LocalChangeUsnGet">
            <summary>Sets the shim of AttributeMetadata.get_LocalChangeUsn()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAttributeMetadata.NameGet">
            <summary>Sets the shim of AttributeMetadata.get_Name()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAttributeMetadata.OriginatingChangeUsnGet">
            <summary>Sets the shim of AttributeMetadata.get_OriginatingChangeUsn()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAttributeMetadata.OriginatingServerGet">
            <summary>Sets the shim of AttributeMetadata.get_OriginatingServer()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAttributeMetadata.VersionGet">
            <summary>Sets the shim of AttributeMetadata.get_Version()</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimAttributeMetadata.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAttributeMetadata.AllInstances.Constructor">
            <summary>Sets the shim of AttributeMetadata.AttributeMetadata()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAttributeMetadata.AllInstances.LastOriginatingChangeTimeGet">
            <summary>Sets the shim of AttributeMetadata.get_LastOriginatingChangeTime()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAttributeMetadata.AllInstances.LastOriginatingInvocationIdGet">
            <summary>Sets the shim of AttributeMetadata.get_LastOriginatingInvocationId()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAttributeMetadata.AllInstances.LocalChangeUsnGet">
            <summary>Sets the shim of AttributeMetadata.get_LocalChangeUsn()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAttributeMetadata.AllInstances.NameGet">
            <summary>Sets the shim of AttributeMetadata.get_Name()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAttributeMetadata.AllInstances.OriginatingChangeUsnGet">
            <summary>Sets the shim of AttributeMetadata.get_OriginatingChangeUsn()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAttributeMetadata.AllInstances.OriginatingServerGet">
            <summary>Sets the shim of AttributeMetadata.get_OriginatingServer()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAttributeMetadata.AllInstances.VersionGet">
            <summary>Sets the shim of AttributeMetadata.get_Version()</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimAttributeMetadataCollection">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimAttributeMetadataCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimAttributeMetadataCollection.#ctor(System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimAttributeMetadataCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimAttributeMetadataCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimAttributeMetadataCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimAttributeMetadataCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAttributeMetadataCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAttributeMetadataCollection.Constructor">
            <summary>Sets the shim of AttributeMetadataCollection.AttributeMetadataCollection()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAttributeMetadataCollection.ContainsAttributeMetadata">
            <summary>Sets the shim of AttributeMetadataCollection.Contains(AttributeMetadata metadata)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAttributeMetadataCollection.CopyToAttributeMetadataArrayInt32">
            <summary>Sets the shim of AttributeMetadataCollection.CopyTo(AttributeMetadata[] metadata, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAttributeMetadataCollection.IndexOfAttributeMetadata">
            <summary>Sets the shim of AttributeMetadataCollection.IndexOf(AttributeMetadata metadata)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAttributeMetadataCollection.ItemGetInt32">
            <summary>Sets the shim of AttributeMetadataCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimAttributeMetadataCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAttributeMetadataCollection.AllInstances.ContainsAttributeMetadata">
            <summary>Sets the shim of AttributeMetadataCollection.Contains(AttributeMetadata metadata)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAttributeMetadataCollection.AllInstances.CopyToAttributeMetadataArrayInt32">
            <summary>Sets the shim of AttributeMetadataCollection.CopyTo(AttributeMetadata[] metadata, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAttributeMetadataCollection.AllInstances.IndexOfAttributeMetadata">
            <summary>Sets the shim of AttributeMetadataCollection.IndexOf(AttributeMetadata metadata)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimAttributeMetadataCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of AttributeMetadataCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimConfigurationSet">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.ConfigurationSet</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimConfigurationSet.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimConfigurationSet.#ctor(System.DirectoryServices.ActiveDirectory.ConfigurationSet)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimConfigurationSet.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimConfigurationSet.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimConfigurationSet.AdamInstancesGet">
            <summary>Sets the shim of ConfigurationSet.get_AdamInstances()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimConfigurationSet.ApplicationPartitionsGet">
            <summary>Sets the shim of ConfigurationSet.get_ApplicationPartitions()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimConfigurationSet.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimConfigurationSet.Constructor">
            <summary>Sets the shim of ConfigurationSet.ConfigurationSet()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimConfigurationSet.Dispose">
            <summary>Sets the shim of ConfigurationSet.Dispose()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimConfigurationSet.DisposeBoolean">
            <summary>Sets the shim of ConfigurationSet.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimConfigurationSet.FindAdamInstance">
            <summary>Sets the shim of ConfigurationSet.FindAdamInstance()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimConfigurationSet.FindAdamInstanceString">
            <summary>Sets the shim of ConfigurationSet.FindAdamInstance(String partitionName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimConfigurationSet.FindAdamInstanceStringString">
            <summary>Sets the shim of ConfigurationSet.FindAdamInstance(String partitionName, String siteName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimConfigurationSet.FindAllAdamInstances">
            <summary>Sets the shim of ConfigurationSet.FindAllAdamInstances()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimConfigurationSet.FindAllAdamInstancesString">
            <summary>Sets the shim of ConfigurationSet.FindAllAdamInstances(String partitionName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimConfigurationSet.FindAllAdamInstancesStringString">
            <summary>Sets the shim of ConfigurationSet.FindAllAdamInstances(String partitionName, String siteName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimConfigurationSet.GetConfigurationSetDirectoryContext">
            <summary>Sets the shim of ConfigurationSet.GetConfigurationSet(DirectoryContext context)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimConfigurationSet.GetDirectoryEntry">
            <summary>Sets the shim of ConfigurationSet.GetDirectoryEntry()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimConfigurationSet.GetSecurityLevel">
            <summary>Sets the shim of ConfigurationSet.GetSecurityLevel()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimConfigurationSet.NameGet">
            <summary>Sets the shim of ConfigurationSet.get_Name()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimConfigurationSet.NamingRoleOwnerGet">
            <summary>Sets the shim of ConfigurationSet.get_NamingRoleOwner()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimConfigurationSet.SchemaGet">
            <summary>Sets the shim of ConfigurationSet.get_Schema()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimConfigurationSet.SchemaRoleOwnerGet">
            <summary>Sets the shim of ConfigurationSet.get_SchemaRoleOwner()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimConfigurationSet.SetSecurityLevelReplicationSecurityLevel">
            <summary>Sets the shim of ConfigurationSet.SetSecurityLevel(ReplicationSecurityLevel securityLevel)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimConfigurationSet.SitesGet">
            <summary>Sets the shim of ConfigurationSet.get_Sites()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimConfigurationSet.StaticConstructor">
            <summary>Sets the shim of ConfigurationSet.ConfigurationSet()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimConfigurationSet.ToString">
            <summary>Sets the shim of ConfigurationSet.ToString()</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimConfigurationSet.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimConfigurationSet.AllInstances.AdamInstancesGet">
            <summary>Sets the shim of ConfigurationSet.get_AdamInstances()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimConfigurationSet.AllInstances.ApplicationPartitionsGet">
            <summary>Sets the shim of ConfigurationSet.get_ApplicationPartitions()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimConfigurationSet.AllInstances.Constructor">
            <summary>Sets the shim of ConfigurationSet.ConfigurationSet()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimConfigurationSet.AllInstances.Dispose">
            <summary>Sets the shim of ConfigurationSet.Dispose()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimConfigurationSet.AllInstances.DisposeBoolean">
            <summary>Sets the shim of ConfigurationSet.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimConfigurationSet.AllInstances.FindAdamInstance">
            <summary>Sets the shim of ConfigurationSet.FindAdamInstance()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimConfigurationSet.AllInstances.FindAdamInstanceString">
            <summary>Sets the shim of ConfigurationSet.FindAdamInstance(String partitionName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimConfigurationSet.AllInstances.FindAdamInstanceStringString">
            <summary>Sets the shim of ConfigurationSet.FindAdamInstance(String partitionName, String siteName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimConfigurationSet.AllInstances.FindAllAdamInstances">
            <summary>Sets the shim of ConfigurationSet.FindAllAdamInstances()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimConfigurationSet.AllInstances.FindAllAdamInstancesString">
            <summary>Sets the shim of ConfigurationSet.FindAllAdamInstances(String partitionName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimConfigurationSet.AllInstances.FindAllAdamInstancesStringString">
            <summary>Sets the shim of ConfigurationSet.FindAllAdamInstances(String partitionName, String siteName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimConfigurationSet.AllInstances.GetDirectoryEntry">
            <summary>Sets the shim of ConfigurationSet.GetDirectoryEntry()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimConfigurationSet.AllInstances.GetSecurityLevel">
            <summary>Sets the shim of ConfigurationSet.GetSecurityLevel()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimConfigurationSet.AllInstances.NameGet">
            <summary>Sets the shim of ConfigurationSet.get_Name()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimConfigurationSet.AllInstances.NamingRoleOwnerGet">
            <summary>Sets the shim of ConfigurationSet.get_NamingRoleOwner()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimConfigurationSet.AllInstances.SchemaGet">
            <summary>Sets the shim of ConfigurationSet.get_Schema()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimConfigurationSet.AllInstances.SchemaRoleOwnerGet">
            <summary>Sets the shim of ConfigurationSet.get_SchemaRoleOwner()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimConfigurationSet.AllInstances.SetSecurityLevelReplicationSecurityLevel">
            <summary>Sets the shim of ConfigurationSet.SetSecurityLevel(ReplicationSecurityLevel securityLevel)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimConfigurationSet.AllInstances.SitesGet">
            <summary>Sets the shim of ConfigurationSet.get_Sites()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimConfigurationSet.AllInstances.ToString01">
            <summary>Sets the shim of ConfigurationSet.ToString()</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryContext">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.DirectoryContext</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryContext.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryContext.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryContext.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryContext.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryContext.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryContext.ConstructorDirectoryContextType">
            <summary>Sets the shim of DirectoryContext.DirectoryContext(DirectoryContextType contextType)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryContext.ConstructorDirectoryContextTypeString">
            <summary>Sets the shim of DirectoryContext.DirectoryContext(DirectoryContextType contextType, String name)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryContext.ConstructorDirectoryContextTypeStringString">
            <summary>Sets the shim of DirectoryContext.DirectoryContext(DirectoryContextType contextType, String username, String password)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryContext.ConstructorDirectoryContextTypeStringStringString">
            <summary>Sets the shim of DirectoryContext.DirectoryContext(DirectoryContextType contextType, String name, String username, String password)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryContext.ContextTypeGet">
            <summary>Sets the shim of DirectoryContext.get_ContextType()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryContext.NameGet">
            <summary>Sets the shim of DirectoryContext.get_Name()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryContext.StaticConstructor">
            <summary>Sets the shim of DirectoryContext.DirectoryContext()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryContext.UserNameGet">
            <summary>Sets the shim of DirectoryContext.get_UserName()</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryContext.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryContext.AllInstances.ContextTypeGet">
            <summary>Sets the shim of DirectoryContext.get_ContextType()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryContext.AllInstances.NameGet">
            <summary>Sets the shim of DirectoryContext.get_Name()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryContext.AllInstances.UserNameGet">
            <summary>Sets the shim of DirectoryContext.get_UserName()</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryServer">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.DirectoryServer</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryServer.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryServer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryServer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryServer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryServer.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryServer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryServer.Constructor">
            <summary>Sets the shim of DirectoryServer.DirectoryServer()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryServer.Dispose">
            <summary>Sets the shim of DirectoryServer.Dispose()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryServer.DisposeBoolean">
            <summary>Sets the shim of DirectoryServer.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryServer.GetDirectoryEntry">
            <summary>Sets the shim of DirectoryServer.GetDirectoryEntry()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryServer.MoveToAnotherSiteString">
            <summary>Sets the shim of DirectoryServer.MoveToAnotherSite(String siteName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryServer.NameGet">
            <summary>Sets the shim of DirectoryServer.get_Name()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryServer.PartitionsGet">
            <summary>Sets the shim of DirectoryServer.get_Partitions()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryServer.ToString">
            <summary>Sets the shim of DirectoryServer.ToString()</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryServer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryServer.AllInstances.Dispose">
            <summary>Sets the shim of DirectoryServer.Dispose()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryServer.AllInstances.DisposeBoolean">
            <summary>Sets the shim of DirectoryServer.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryServer.AllInstances.GetDirectoryEntry">
            <summary>Sets the shim of DirectoryServer.GetDirectoryEntry()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryServer.AllInstances.MoveToAnotherSiteString">
            <summary>Sets the shim of DirectoryServer.MoveToAnotherSite(String siteName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryServer.AllInstances.NameGet">
            <summary>Sets the shim of DirectoryServer.get_Name()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryServer.AllInstances.PartitionsGet">
            <summary>Sets the shim of DirectoryServer.get_Partitions()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryServer.AllInstances.ToString01">
            <summary>Sets the shim of DirectoryServer.ToString()</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryServerCollection">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.DirectoryServerCollection</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryServerCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryServerCollection.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryServerCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryServerCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryServerCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryServerCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryServerCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryServerCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryServerCollection.AddDirectoryServer">
            <summary>Sets the shim of DirectoryServerCollection.Add(DirectoryServer server)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryServerCollection.AddRangeDirectoryServerArray">
            <summary>Sets the shim of DirectoryServerCollection.AddRange(DirectoryServer[] servers)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryServerCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryServerCollection.Constructor">
            <summary>Sets the shim of DirectoryServerCollection.DirectoryServerCollection()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryServerCollection.ContainsDirectoryServer">
            <summary>Sets the shim of DirectoryServerCollection.Contains(DirectoryServer server)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryServerCollection.CopyToDirectoryServerArrayInt32">
            <summary>Sets the shim of DirectoryServerCollection.CopyTo(DirectoryServer[] array, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryServerCollection.IndexOfDirectoryServer">
            <summary>Sets the shim of DirectoryServerCollection.IndexOf(DirectoryServer server)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryServerCollection.InsertInt32DirectoryServer">
            <summary>Sets the shim of DirectoryServerCollection.Insert(Int32 index, DirectoryServer server)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryServerCollection.ItemGetInt32">
            <summary>Sets the shim of DirectoryServerCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryServerCollection.ItemSetInt32DirectoryServer">
            <summary>Sets the shim of DirectoryServerCollection.set_Item(Int32 index, DirectoryServer value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryServerCollection.OnClear">
            <summary>Sets the shim of DirectoryServerCollection.OnClear()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryServerCollection.OnClearComplete">
            <summary>Sets the shim of DirectoryServerCollection.OnClearComplete()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryServerCollection.OnInsertCompleteInt32Object">
            <summary>Sets the shim of DirectoryServerCollection.OnInsertComplete(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryServerCollection.OnRemoveCompleteInt32Object">
            <summary>Sets the shim of DirectoryServerCollection.OnRemoveComplete(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryServerCollection.OnSetCompleteInt32ObjectObject">
            <summary>Sets the shim of DirectoryServerCollection.OnSetComplete(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryServerCollection.OnValidateObject">
            <summary>Sets the shim of DirectoryServerCollection.OnValidate(Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryServerCollection.RemoveDirectoryServer">
            <summary>Sets the shim of DirectoryServerCollection.Remove(DirectoryServer server)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryServerCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryServerCollection.AllInstances.AddDirectoryServer">
            <summary>Sets the shim of DirectoryServerCollection.Add(DirectoryServer server)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryServerCollection.AllInstances.AddRangeDirectoryServerArray">
            <summary>Sets the shim of DirectoryServerCollection.AddRange(DirectoryServer[] servers)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryServerCollection.AllInstances.Constructor">
            <summary>Sets the shim of DirectoryServerCollection.DirectoryServerCollection()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryServerCollection.AllInstances.ContainsDirectoryServer">
            <summary>Sets the shim of DirectoryServerCollection.Contains(DirectoryServer server)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryServerCollection.AllInstances.CopyToDirectoryServerArrayInt32">
            <summary>Sets the shim of DirectoryServerCollection.CopyTo(DirectoryServer[] array, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryServerCollection.AllInstances.IndexOfDirectoryServer">
            <summary>Sets the shim of DirectoryServerCollection.IndexOf(DirectoryServer server)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryServerCollection.AllInstances.InsertInt32DirectoryServer">
            <summary>Sets the shim of DirectoryServerCollection.Insert(Int32 index, DirectoryServer server)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryServerCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of DirectoryServerCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryServerCollection.AllInstances.ItemSetInt32DirectoryServer">
            <summary>Sets the shim of DirectoryServerCollection.set_Item(Int32 index, DirectoryServer value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryServerCollection.AllInstances.OnClear">
            <summary>Sets the shim of DirectoryServerCollection.OnClear()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryServerCollection.AllInstances.OnClearComplete">
            <summary>Sets the shim of DirectoryServerCollection.OnClearComplete()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryServerCollection.AllInstances.OnInsertCompleteInt32Object">
            <summary>Sets the shim of DirectoryServerCollection.OnInsertComplete(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryServerCollection.AllInstances.OnRemoveCompleteInt32Object">
            <summary>Sets the shim of DirectoryServerCollection.OnRemoveComplete(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryServerCollection.AllInstances.OnSetCompleteInt32ObjectObject">
            <summary>Sets the shim of DirectoryServerCollection.OnSetComplete(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryServerCollection.AllInstances.OnValidateObject">
            <summary>Sets the shim of DirectoryServerCollection.OnValidate(Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDirectoryServerCollection.AllInstances.RemoveDirectoryServer">
            <summary>Sets the shim of DirectoryServerCollection.Remove(DirectoryServer server)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.Domain</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.#ctor(System.DirectoryServices.ActiveDirectory.Domain)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.ChildrenGet">
            <summary>Sets the shim of Domain.get_Children()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.Constructor">
            <summary>Sets the shim of Domain.Domain()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.CreateLocalSideOfTrustRelationshipStringTrustDirectionString">
            <summary>Sets the shim of Domain.CreateLocalSideOfTrustRelationship(String targetDomainName, TrustDirection direction, String trustPassword)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.CreateTrustRelationshipDomainTrustDirection">
            <summary>Sets the shim of Domain.CreateTrustRelationship(Domain targetDomain, TrustDirection direction)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.DeleteLocalSideOfTrustRelationshipString">
            <summary>Sets the shim of Domain.DeleteLocalSideOfTrustRelationship(String targetDomainName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.DeleteTrustRelationshipDomain">
            <summary>Sets the shim of Domain.DeleteTrustRelationship(Domain targetDomain)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.DomainControllersGet">
            <summary>Sets the shim of Domain.get_DomainControllers()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.DomainModeGet">
            <summary>Sets the shim of Domain.get_DomainMode()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.FindAllDiscoverableDomainControllers">
            <summary>Sets the shim of Domain.FindAllDiscoverableDomainControllers()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.FindAllDiscoverableDomainControllersString">
            <summary>Sets the shim of Domain.FindAllDiscoverableDomainControllers(String siteName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.FindAllDomainControllers">
            <summary>Sets the shim of Domain.FindAllDomainControllers()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.FindAllDomainControllersString">
            <summary>Sets the shim of Domain.FindAllDomainControllers(String siteName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.FindDomainController">
            <summary>Sets the shim of Domain.FindDomainController()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.FindDomainControllerLocatorOptions">
            <summary>Sets the shim of Domain.FindDomainController(LocatorOptions flag)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.FindDomainControllerString">
            <summary>Sets the shim of Domain.FindDomainController(String siteName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.FindDomainControllerStringLocatorOptions">
            <summary>Sets the shim of Domain.FindDomainController(String siteName, LocatorOptions flag)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.ForestGet">
            <summary>Sets the shim of Domain.get_Forest()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.GetAllTrustRelationships">
            <summary>Sets the shim of Domain.GetAllTrustRelationships()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.GetComputerDomain">
            <summary>Sets the shim of Domain.GetComputerDomain()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.GetCurrentDomain">
            <summary>Sets the shim of Domain.GetCurrentDomain()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.GetDirectoryEntry">
            <summary>Sets the shim of Domain.GetDirectoryEntry()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.GetDomainDirectoryContext">
            <summary>Sets the shim of Domain.GetDomain(DirectoryContext context)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.GetSelectiveAuthenticationStatusString">
            <summary>Sets the shim of Domain.GetSelectiveAuthenticationStatus(String targetDomainName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.GetSidFilteringStatusString">
            <summary>Sets the shim of Domain.GetSidFilteringStatus(String targetDomainName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.GetTrustRelationshipString">
            <summary>Sets the shim of Domain.GetTrustRelationship(String targetDomainName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.InfrastructureRoleOwnerGet">
            <summary>Sets the shim of Domain.get_InfrastructureRoleOwner()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.ParentGet">
            <summary>Sets the shim of Domain.get_Parent()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.PdcRoleOwnerGet">
            <summary>Sets the shim of Domain.get_PdcRoleOwner()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.RaiseDomainFunctionalityDomainMode">
            <summary>Sets the shim of Domain.RaiseDomainFunctionality(DomainMode domainMode)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.RepairTrustRelationshipDomain">
            <summary>Sets the shim of Domain.RepairTrustRelationship(Domain targetDomain)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.RidRoleOwnerGet">
            <summary>Sets the shim of Domain.get_RidRoleOwner()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.SetSelectiveAuthenticationStatusStringBoolean">
            <summary>Sets the shim of Domain.SetSelectiveAuthenticationStatus(String targetDomainName, Boolean enable)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.SetSidFilteringStatusStringBoolean">
            <summary>Sets the shim of Domain.SetSidFilteringStatus(String targetDomainName, Boolean enable)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.UpdateLocalSideOfTrustRelationshipStringString">
            <summary>Sets the shim of Domain.UpdateLocalSideOfTrustRelationship(String targetDomainName, String newTrustPassword)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.UpdateLocalSideOfTrustRelationshipStringTrustDirectionString">
            <summary>Sets the shim of Domain.UpdateLocalSideOfTrustRelationship(String targetDomainName, TrustDirection newTrustDirection, String newTrustPassword)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.UpdateTrustRelationshipDomainTrustDirection">
            <summary>Sets the shim of Domain.UpdateTrustRelationship(Domain targetDomain, TrustDirection newTrustDirection)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.VerifyOutboundTrustRelationshipString">
            <summary>Sets the shim of Domain.VerifyOutboundTrustRelationship(String targetDomainName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.VerifyTrustRelationshipDomainTrustDirection">
            <summary>Sets the shim of Domain.VerifyTrustRelationship(Domain targetDomain, TrustDirection direction)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.AllInstances.ChildrenGet">
            <summary>Sets the shim of Domain.get_Children()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.AllInstances.Constructor">
            <summary>Sets the shim of Domain.Domain()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.AllInstances.CreateLocalSideOfTrustRelationshipStringTrustDirectionString">
            <summary>Sets the shim of Domain.CreateLocalSideOfTrustRelationship(String targetDomainName, TrustDirection direction, String trustPassword)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.AllInstances.CreateTrustRelationshipDomainTrustDirection">
            <summary>Sets the shim of Domain.CreateTrustRelationship(Domain targetDomain, TrustDirection direction)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.AllInstances.DeleteLocalSideOfTrustRelationshipString">
            <summary>Sets the shim of Domain.DeleteLocalSideOfTrustRelationship(String targetDomainName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.AllInstances.DeleteTrustRelationshipDomain">
            <summary>Sets the shim of Domain.DeleteTrustRelationship(Domain targetDomain)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.AllInstances.DomainControllersGet">
            <summary>Sets the shim of Domain.get_DomainControllers()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.AllInstances.DomainModeGet">
            <summary>Sets the shim of Domain.get_DomainMode()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.AllInstances.FindAllDiscoverableDomainControllers">
            <summary>Sets the shim of Domain.FindAllDiscoverableDomainControllers()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.AllInstances.FindAllDiscoverableDomainControllersString">
            <summary>Sets the shim of Domain.FindAllDiscoverableDomainControllers(String siteName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.AllInstances.FindAllDomainControllers">
            <summary>Sets the shim of Domain.FindAllDomainControllers()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.AllInstances.FindAllDomainControllersString">
            <summary>Sets the shim of Domain.FindAllDomainControllers(String siteName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.AllInstances.FindDomainController">
            <summary>Sets the shim of Domain.FindDomainController()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.AllInstances.FindDomainControllerLocatorOptions">
            <summary>Sets the shim of Domain.FindDomainController(LocatorOptions flag)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.AllInstances.FindDomainControllerString">
            <summary>Sets the shim of Domain.FindDomainController(String siteName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.AllInstances.FindDomainControllerStringLocatorOptions">
            <summary>Sets the shim of Domain.FindDomainController(String siteName, LocatorOptions flag)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.AllInstances.ForestGet">
            <summary>Sets the shim of Domain.get_Forest()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.AllInstances.GetAllTrustRelationships">
            <summary>Sets the shim of Domain.GetAllTrustRelationships()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.AllInstances.GetDirectoryEntry">
            <summary>Sets the shim of Domain.GetDirectoryEntry()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.AllInstances.GetSelectiveAuthenticationStatusString">
            <summary>Sets the shim of Domain.GetSelectiveAuthenticationStatus(String targetDomainName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.AllInstances.GetSidFilteringStatusString">
            <summary>Sets the shim of Domain.GetSidFilteringStatus(String targetDomainName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.AllInstances.GetTrustRelationshipString">
            <summary>Sets the shim of Domain.GetTrustRelationship(String targetDomainName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.AllInstances.InfrastructureRoleOwnerGet">
            <summary>Sets the shim of Domain.get_InfrastructureRoleOwner()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.AllInstances.ParentGet">
            <summary>Sets the shim of Domain.get_Parent()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.AllInstances.PdcRoleOwnerGet">
            <summary>Sets the shim of Domain.get_PdcRoleOwner()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.AllInstances.RaiseDomainFunctionalityDomainMode">
            <summary>Sets the shim of Domain.RaiseDomainFunctionality(DomainMode domainMode)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.AllInstances.RepairTrustRelationshipDomain">
            <summary>Sets the shim of Domain.RepairTrustRelationship(Domain targetDomain)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.AllInstances.RidRoleOwnerGet">
            <summary>Sets the shim of Domain.get_RidRoleOwner()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.AllInstances.SetSelectiveAuthenticationStatusStringBoolean">
            <summary>Sets the shim of Domain.SetSelectiveAuthenticationStatus(String targetDomainName, Boolean enable)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.AllInstances.SetSidFilteringStatusStringBoolean">
            <summary>Sets the shim of Domain.SetSidFilteringStatus(String targetDomainName, Boolean enable)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.AllInstances.UpdateLocalSideOfTrustRelationshipStringString">
            <summary>Sets the shim of Domain.UpdateLocalSideOfTrustRelationship(String targetDomainName, String newTrustPassword)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.AllInstances.UpdateLocalSideOfTrustRelationshipStringTrustDirectionString">
            <summary>Sets the shim of Domain.UpdateLocalSideOfTrustRelationship(String targetDomainName, TrustDirection newTrustDirection, String newTrustPassword)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.AllInstances.UpdateTrustRelationshipDomainTrustDirection">
            <summary>Sets the shim of Domain.UpdateTrustRelationship(Domain targetDomain, TrustDirection newTrustDirection)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.AllInstances.VerifyOutboundTrustRelationshipString">
            <summary>Sets the shim of Domain.VerifyOutboundTrustRelationship(String targetDomainName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomain.AllInstances.VerifyTrustRelationshipDomainTrustDirection">
            <summary>Sets the shim of Domain.VerifyTrustRelationship(Domain targetDomain, TrustDirection direction)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainCollection">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.DomainCollection</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainCollection.#ctor(System.DirectoryServices.ActiveDirectory.DomainCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainCollection.Constructor">
            <summary>Sets the shim of DomainCollection.DomainCollection()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainCollection.ContainsDomain">
            <summary>Sets the shim of DomainCollection.Contains(Domain domain)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainCollection.CopyToDomainArrayInt32">
            <summary>Sets the shim of DomainCollection.CopyTo(Domain[] domains, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainCollection.IndexOfDomain">
            <summary>Sets the shim of DomainCollection.IndexOf(Domain domain)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainCollection.ItemGetInt32">
            <summary>Sets the shim of DomainCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainCollection.AllInstances.ContainsDomain">
            <summary>Sets the shim of DomainCollection.Contains(Domain domain)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainCollection.AllInstances.CopyToDomainArrayInt32">
            <summary>Sets the shim of DomainCollection.CopyTo(Domain[] domains, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainCollection.AllInstances.IndexOfDomain">
            <summary>Sets the shim of DomainCollection.IndexOf(Domain domain)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of DomainCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.DomainController</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.#ctor(System.DirectoryServices.ActiveDirectory.DomainController)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.CheckReplicationConsistency">
            <summary>Sets the shim of DomainController.CheckReplicationConsistency()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.Constructor">
            <summary>Sets the shim of DomainController.DomainController()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.CurrentTimeGet">
            <summary>Sets the shim of DomainController.get_CurrentTime()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.DisposeBoolean">
            <summary>Sets the shim of DomainController.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.DomainGet">
            <summary>Sets the shim of DomainController.get_Domain()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.EnableGlobalCatalog">
            <summary>Sets the shim of DomainController.EnableGlobalCatalog()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.FindAllDirectoryContext">
            <summary>Sets the shim of DomainController.FindAll(DirectoryContext context)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.FindAllDirectoryContextString">
            <summary>Sets the shim of DomainController.FindAll(DirectoryContext context, String siteName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.FindOneDirectoryContext">
            <summary>Sets the shim of DomainController.FindOne(DirectoryContext context)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.FindOneDirectoryContextLocatorOptions">
            <summary>Sets the shim of DomainController.FindOne(DirectoryContext context, LocatorOptions flag)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.FindOneDirectoryContextString">
            <summary>Sets the shim of DomainController.FindOne(DirectoryContext context, String siteName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.FindOneDirectoryContextStringLocatorOptions">
            <summary>Sets the shim of DomainController.FindOne(DirectoryContext context, String siteName, LocatorOptions flag)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.ForestGet">
            <summary>Sets the shim of DomainController.get_Forest()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.GetAllReplicationNeighbors">
            <summary>Sets the shim of DomainController.GetAllReplicationNeighbors()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.GetDirectorySearcher">
            <summary>Sets the shim of DomainController.GetDirectorySearcher()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.GetDomainControllerDirectoryContext">
            <summary>Sets the shim of DomainController.GetDomainController(DirectoryContext context)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.GetReplicationConnectionFailures">
            <summary>Sets the shim of DomainController.GetReplicationConnectionFailures()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.GetReplicationCursorsString">
            <summary>Sets the shim of DomainController.GetReplicationCursors(String partition)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.GetReplicationMetadataString">
            <summary>Sets the shim of DomainController.GetReplicationMetadata(String objectPath)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.GetReplicationNeighborsString">
            <summary>Sets the shim of DomainController.GetReplicationNeighbors(String partition)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.GetReplicationOperationInformation">
            <summary>Sets the shim of DomainController.GetReplicationOperationInformation()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.HighestCommittedUsnGet">
            <summary>Sets the shim of DomainController.get_HighestCommittedUsn()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.IPAddressGet">
            <summary>Sets the shim of DomainController.get_IPAddress()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.InboundConnectionsGet">
            <summary>Sets the shim of DomainController.get_InboundConnections()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.IsGlobalCatalog">
            <summary>Sets the shim of DomainController.IsGlobalCatalog()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.OSVersionGet">
            <summary>Sets the shim of DomainController.get_OSVersion()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.OutboundConnectionsGet">
            <summary>Sets the shim of DomainController.get_OutboundConnections()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.RolesGet">
            <summary>Sets the shim of DomainController.get_Roles()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.SeizeRoleOwnershipActiveDirectoryRole">
            <summary>Sets the shim of DomainController.SeizeRoleOwnership(ActiveDirectoryRole role)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.SiteNameGet">
            <summary>Sets the shim of DomainController.get_SiteName()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.SyncFromAllServersCallbackGet">
            <summary>Sets the shim of DomainController.get_SyncFromAllServersCallback()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.SyncFromAllServersCallbackSetSyncUpdateCallback">
            <summary>Sets the shim of DomainController.set_SyncFromAllServersCallback(SyncUpdateCallback value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.SyncReplicaFromAllServersStringSyncFromAllServersOptions">
            <summary>Sets the shim of DomainController.SyncReplicaFromAllServers(String partition, SyncFromAllServersOptions options)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.SyncReplicaFromServerStringString">
            <summary>Sets the shim of DomainController.SyncReplicaFromServer(String partition, String sourceServer)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.TransferRoleOwnershipActiveDirectoryRole">
            <summary>Sets the shim of DomainController.TransferRoleOwnership(ActiveDirectoryRole role)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.TriggerSyncReplicaFromNeighborsString">
            <summary>Sets the shim of DomainController.TriggerSyncReplicaFromNeighbors(String partition)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.AllInstances.CheckReplicationConsistency">
            <summary>Sets the shim of DomainController.CheckReplicationConsistency()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.AllInstances.CurrentTimeGet">
            <summary>Sets the shim of DomainController.get_CurrentTime()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.AllInstances.DisposeBoolean">
            <summary>Sets the shim of DomainController.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.AllInstances.DomainGet">
            <summary>Sets the shim of DomainController.get_Domain()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.AllInstances.EnableGlobalCatalog">
            <summary>Sets the shim of DomainController.EnableGlobalCatalog()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.AllInstances.ForestGet">
            <summary>Sets the shim of DomainController.get_Forest()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.AllInstances.GetAllReplicationNeighbors">
            <summary>Sets the shim of DomainController.GetAllReplicationNeighbors()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.AllInstances.GetDirectorySearcher">
            <summary>Sets the shim of DomainController.GetDirectorySearcher()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.AllInstances.GetReplicationConnectionFailures">
            <summary>Sets the shim of DomainController.GetReplicationConnectionFailures()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.AllInstances.GetReplicationCursorsString">
            <summary>Sets the shim of DomainController.GetReplicationCursors(String partition)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.AllInstances.GetReplicationMetadataString">
            <summary>Sets the shim of DomainController.GetReplicationMetadata(String objectPath)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.AllInstances.GetReplicationNeighborsString">
            <summary>Sets the shim of DomainController.GetReplicationNeighbors(String partition)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.AllInstances.GetReplicationOperationInformation">
            <summary>Sets the shim of DomainController.GetReplicationOperationInformation()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.AllInstances.HighestCommittedUsnGet">
            <summary>Sets the shim of DomainController.get_HighestCommittedUsn()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.AllInstances.IPAddressGet">
            <summary>Sets the shim of DomainController.get_IPAddress()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.AllInstances.InboundConnectionsGet">
            <summary>Sets the shim of DomainController.get_InboundConnections()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.AllInstances.IsGlobalCatalog">
            <summary>Sets the shim of DomainController.IsGlobalCatalog()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.AllInstances.OSVersionGet">
            <summary>Sets the shim of DomainController.get_OSVersion()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.AllInstances.OutboundConnectionsGet">
            <summary>Sets the shim of DomainController.get_OutboundConnections()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.AllInstances.RolesGet">
            <summary>Sets the shim of DomainController.get_Roles()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.AllInstances.SeizeRoleOwnershipActiveDirectoryRole">
            <summary>Sets the shim of DomainController.SeizeRoleOwnership(ActiveDirectoryRole role)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.AllInstances.SiteNameGet">
            <summary>Sets the shim of DomainController.get_SiteName()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.AllInstances.SyncFromAllServersCallbackGet">
            <summary>Sets the shim of DomainController.get_SyncFromAllServersCallback()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.AllInstances.SyncFromAllServersCallbackSetSyncUpdateCallback">
            <summary>Sets the shim of DomainController.set_SyncFromAllServersCallback(SyncUpdateCallback value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.AllInstances.SyncReplicaFromAllServersStringSyncFromAllServersOptions">
            <summary>Sets the shim of DomainController.SyncReplicaFromAllServers(String partition, SyncFromAllServersOptions options)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.AllInstances.SyncReplicaFromServerStringString">
            <summary>Sets the shim of DomainController.SyncReplicaFromServer(String partition, String sourceServer)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.AllInstances.TransferRoleOwnershipActiveDirectoryRole">
            <summary>Sets the shim of DomainController.TransferRoleOwnership(ActiveDirectoryRole role)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainController.AllInstances.TriggerSyncReplicaFromNeighborsString">
            <summary>Sets the shim of DomainController.TriggerSyncReplicaFromNeighbors(String partition)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainControllerCollection">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.DomainControllerCollection</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainControllerCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainControllerCollection.#ctor(System.DirectoryServices.ActiveDirectory.DomainControllerCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainControllerCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainControllerCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainControllerCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainControllerCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainControllerCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainControllerCollection.Constructor">
            <summary>Sets the shim of DomainControllerCollection.DomainControllerCollection()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainControllerCollection.ContainsDomainController">
            <summary>Sets the shim of DomainControllerCollection.Contains(DomainController domainController)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainControllerCollection.CopyToDomainControllerArrayInt32">
            <summary>Sets the shim of DomainControllerCollection.CopyTo(DomainController[] domainControllers, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainControllerCollection.IndexOfDomainController">
            <summary>Sets the shim of DomainControllerCollection.IndexOf(DomainController domainController)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainControllerCollection.ItemGetInt32">
            <summary>Sets the shim of DomainControllerCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainControllerCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainControllerCollection.AllInstances.ContainsDomainController">
            <summary>Sets the shim of DomainControllerCollection.Contains(DomainController domainController)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainControllerCollection.AllInstances.CopyToDomainControllerArrayInt32">
            <summary>Sets the shim of DomainControllerCollection.CopyTo(DomainController[] domainControllers, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainControllerCollection.AllInstances.IndexOfDomainController">
            <summary>Sets the shim of DomainControllerCollection.IndexOf(DomainController domainController)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimDomainControllerCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of DomainControllerCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.Forest</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.#ctor(System.DirectoryServices.ActiveDirectory.Forest)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.ApplicationPartitionsGet">
            <summary>Sets the shim of Forest.get_ApplicationPartitions()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.Constructor">
            <summary>Sets the shim of Forest.Forest()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.CreateLocalSideOfTrustRelationshipStringTrustDirectionString">
            <summary>Sets the shim of Forest.CreateLocalSideOfTrustRelationship(String targetForestName, TrustDirection direction, String trustPassword)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.CreateTrustRelationshipForestTrustDirection">
            <summary>Sets the shim of Forest.CreateTrustRelationship(Forest targetForest, TrustDirection direction)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.DeleteLocalSideOfTrustRelationshipString">
            <summary>Sets the shim of Forest.DeleteLocalSideOfTrustRelationship(String targetForestName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.DeleteTrustRelationshipForest">
            <summary>Sets the shim of Forest.DeleteTrustRelationship(Forest targetForest)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.Dispose">
            <summary>Sets the shim of Forest.Dispose()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.DisposeBoolean">
            <summary>Sets the shim of Forest.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.DomainsGet">
            <summary>Sets the shim of Forest.get_Domains()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.FindAllDiscoverableGlobalCatalogs">
            <summary>Sets the shim of Forest.FindAllDiscoverableGlobalCatalogs()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.FindAllDiscoverableGlobalCatalogsString">
            <summary>Sets the shim of Forest.FindAllDiscoverableGlobalCatalogs(String siteName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.FindAllGlobalCatalogs">
            <summary>Sets the shim of Forest.FindAllGlobalCatalogs()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.FindAllGlobalCatalogsString">
            <summary>Sets the shim of Forest.FindAllGlobalCatalogs(String siteName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.FindGlobalCatalog">
            <summary>Sets the shim of Forest.FindGlobalCatalog()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.FindGlobalCatalogLocatorOptions">
            <summary>Sets the shim of Forest.FindGlobalCatalog(LocatorOptions flag)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.FindGlobalCatalogString">
            <summary>Sets the shim of Forest.FindGlobalCatalog(String siteName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.FindGlobalCatalogStringLocatorOptions">
            <summary>Sets the shim of Forest.FindGlobalCatalog(String siteName, LocatorOptions flag)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.ForestModeGet">
            <summary>Sets the shim of Forest.get_ForestMode()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.GetAllTrustRelationships">
            <summary>Sets the shim of Forest.GetAllTrustRelationships()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.GetCurrentForest">
            <summary>Sets the shim of Forest.GetCurrentForest()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.GetForestDirectoryContext">
            <summary>Sets the shim of Forest.GetForest(DirectoryContext context)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.GetSelectiveAuthenticationStatusString">
            <summary>Sets the shim of Forest.GetSelectiveAuthenticationStatus(String targetForestName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.GetSidFilteringStatusString">
            <summary>Sets the shim of Forest.GetSidFilteringStatus(String targetForestName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.GetTrustRelationshipString">
            <summary>Sets the shim of Forest.GetTrustRelationship(String targetForestName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.GlobalCatalogsGet">
            <summary>Sets the shim of Forest.get_GlobalCatalogs()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.NameGet">
            <summary>Sets the shim of Forest.get_Name()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.NamingRoleOwnerGet">
            <summary>Sets the shim of Forest.get_NamingRoleOwner()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.RaiseForestFunctionalityForestMode">
            <summary>Sets the shim of Forest.RaiseForestFunctionality(ForestMode forestMode)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.RepairTrustRelationshipForest">
            <summary>Sets the shim of Forest.RepairTrustRelationship(Forest targetForest)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.RootDomainGet">
            <summary>Sets the shim of Forest.get_RootDomain()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.SchemaGet">
            <summary>Sets the shim of Forest.get_Schema()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.SchemaRoleOwnerGet">
            <summary>Sets the shim of Forest.get_SchemaRoleOwner()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.SetSelectiveAuthenticationStatusStringBoolean">
            <summary>Sets the shim of Forest.SetSelectiveAuthenticationStatus(String targetForestName, Boolean enable)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.SetSidFilteringStatusStringBoolean">
            <summary>Sets the shim of Forest.SetSidFilteringStatus(String targetForestName, Boolean enable)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.SitesGet">
            <summary>Sets the shim of Forest.get_Sites()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.ToString">
            <summary>Sets the shim of Forest.ToString()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.UpdateLocalSideOfTrustRelationshipStringString">
            <summary>Sets the shim of Forest.UpdateLocalSideOfTrustRelationship(String targetForestName, String newTrustPassword)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.UpdateLocalSideOfTrustRelationshipStringTrustDirectionString">
            <summary>Sets the shim of Forest.UpdateLocalSideOfTrustRelationship(String targetForestName, TrustDirection newTrustDirection, String newTrustPassword)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.UpdateTrustRelationshipForestTrustDirection">
            <summary>Sets the shim of Forest.UpdateTrustRelationship(Forest targetForest, TrustDirection newTrustDirection)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.VerifyOutboundTrustRelationshipString">
            <summary>Sets the shim of Forest.VerifyOutboundTrustRelationship(String targetForestName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.VerifyTrustRelationshipForestTrustDirection">
            <summary>Sets the shim of Forest.VerifyTrustRelationship(Forest targetForest, TrustDirection direction)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.AllInstances.ApplicationPartitionsGet">
            <summary>Sets the shim of Forest.get_ApplicationPartitions()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.AllInstances.Constructor">
            <summary>Sets the shim of Forest.Forest()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.AllInstances.CreateLocalSideOfTrustRelationshipStringTrustDirectionString">
            <summary>Sets the shim of Forest.CreateLocalSideOfTrustRelationship(String targetForestName, TrustDirection direction, String trustPassword)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.AllInstances.CreateTrustRelationshipForestTrustDirection">
            <summary>Sets the shim of Forest.CreateTrustRelationship(Forest targetForest, TrustDirection direction)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.AllInstances.DeleteLocalSideOfTrustRelationshipString">
            <summary>Sets the shim of Forest.DeleteLocalSideOfTrustRelationship(String targetForestName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.AllInstances.DeleteTrustRelationshipForest">
            <summary>Sets the shim of Forest.DeleteTrustRelationship(Forest targetForest)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.AllInstances.Dispose">
            <summary>Sets the shim of Forest.Dispose()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.AllInstances.DisposeBoolean">
            <summary>Sets the shim of Forest.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.AllInstances.DomainsGet">
            <summary>Sets the shim of Forest.get_Domains()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.AllInstances.FindAllDiscoverableGlobalCatalogs">
            <summary>Sets the shim of Forest.FindAllDiscoverableGlobalCatalogs()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.AllInstances.FindAllDiscoverableGlobalCatalogsString">
            <summary>Sets the shim of Forest.FindAllDiscoverableGlobalCatalogs(String siteName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.AllInstances.FindAllGlobalCatalogs">
            <summary>Sets the shim of Forest.FindAllGlobalCatalogs()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.AllInstances.FindAllGlobalCatalogsString">
            <summary>Sets the shim of Forest.FindAllGlobalCatalogs(String siteName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.AllInstances.FindGlobalCatalog">
            <summary>Sets the shim of Forest.FindGlobalCatalog()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.AllInstances.FindGlobalCatalogLocatorOptions">
            <summary>Sets the shim of Forest.FindGlobalCatalog(LocatorOptions flag)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.AllInstances.FindGlobalCatalogString">
            <summary>Sets the shim of Forest.FindGlobalCatalog(String siteName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.AllInstances.FindGlobalCatalogStringLocatorOptions">
            <summary>Sets the shim of Forest.FindGlobalCatalog(String siteName, LocatorOptions flag)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.AllInstances.ForestModeGet">
            <summary>Sets the shim of Forest.get_ForestMode()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.AllInstances.GetAllTrustRelationships">
            <summary>Sets the shim of Forest.GetAllTrustRelationships()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.AllInstances.GetSelectiveAuthenticationStatusString">
            <summary>Sets the shim of Forest.GetSelectiveAuthenticationStatus(String targetForestName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.AllInstances.GetSidFilteringStatusString">
            <summary>Sets the shim of Forest.GetSidFilteringStatus(String targetForestName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.AllInstances.GetTrustRelationshipString">
            <summary>Sets the shim of Forest.GetTrustRelationship(String targetForestName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.AllInstances.GlobalCatalogsGet">
            <summary>Sets the shim of Forest.get_GlobalCatalogs()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.AllInstances.NameGet">
            <summary>Sets the shim of Forest.get_Name()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.AllInstances.NamingRoleOwnerGet">
            <summary>Sets the shim of Forest.get_NamingRoleOwner()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.AllInstances.RaiseForestFunctionalityForestMode">
            <summary>Sets the shim of Forest.RaiseForestFunctionality(ForestMode forestMode)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.AllInstances.RepairTrustRelationshipForest">
            <summary>Sets the shim of Forest.RepairTrustRelationship(Forest targetForest)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.AllInstances.RootDomainGet">
            <summary>Sets the shim of Forest.get_RootDomain()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.AllInstances.SchemaGet">
            <summary>Sets the shim of Forest.get_Schema()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.AllInstances.SchemaRoleOwnerGet">
            <summary>Sets the shim of Forest.get_SchemaRoleOwner()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.AllInstances.SetSelectiveAuthenticationStatusStringBoolean">
            <summary>Sets the shim of Forest.SetSelectiveAuthenticationStatus(String targetForestName, Boolean enable)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.AllInstances.SetSidFilteringStatusStringBoolean">
            <summary>Sets the shim of Forest.SetSidFilteringStatus(String targetForestName, Boolean enable)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.AllInstances.SitesGet">
            <summary>Sets the shim of Forest.get_Sites()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.AllInstances.ToString01">
            <summary>Sets the shim of Forest.ToString()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.AllInstances.UpdateLocalSideOfTrustRelationshipStringString">
            <summary>Sets the shim of Forest.UpdateLocalSideOfTrustRelationship(String targetForestName, String newTrustPassword)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.AllInstances.UpdateLocalSideOfTrustRelationshipStringTrustDirectionString">
            <summary>Sets the shim of Forest.UpdateLocalSideOfTrustRelationship(String targetForestName, TrustDirection newTrustDirection, String newTrustPassword)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.AllInstances.UpdateTrustRelationshipForestTrustDirection">
            <summary>Sets the shim of Forest.UpdateTrustRelationship(Forest targetForest, TrustDirection newTrustDirection)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.AllInstances.VerifyOutboundTrustRelationshipString">
            <summary>Sets the shim of Forest.VerifyOutboundTrustRelationship(String targetForestName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForest.AllInstances.VerifyTrustRelationshipForestTrustDirection">
            <summary>Sets the shim of Forest.VerifyTrustRelationship(Forest targetForest, TrustDirection direction)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustCollisionException">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustCollisionException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustCollisionException.#ctor(System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustCollisionException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustCollisionException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustCollisionException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustCollisionException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustCollisionException.CollisionsGet">
            <summary>Sets the shim of ForestTrustCollisionException.get_Collisions()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustCollisionException.Constructor">
            <summary>Sets the shim of ForestTrustCollisionException.ForestTrustCollisionException()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustCollisionException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of ForestTrustCollisionException.ForestTrustCollisionException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustCollisionException.ConstructorString">
            <summary>Sets the shim of ForestTrustCollisionException.ForestTrustCollisionException(String message)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustCollisionException.ConstructorStringException">
            <summary>Sets the shim of ForestTrustCollisionException.ForestTrustCollisionException(String message, Exception inner)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustCollisionException.ConstructorStringExceptionForestTrustRelationshipCollisionCollection">
            <summary>Sets the shim of ForestTrustCollisionException.ForestTrustCollisionException(String message, Exception inner, ForestTrustRelationshipCollisionCollection collisions)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustCollisionException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of ForestTrustCollisionException.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustCollisionException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustCollisionException.AllInstances.CollisionsGet">
            <summary>Sets the shim of ForestTrustCollisionException.get_Collisions()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustCollisionException.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of ForestTrustCollisionException.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustDomainInfoCollection">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustDomainInfoCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustDomainInfoCollection.#ctor(System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustDomainInfoCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustDomainInfoCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustDomainInfoCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustDomainInfoCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustDomainInfoCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustDomainInfoCollection.Constructor">
            <summary>Sets the shim of ForestTrustDomainInfoCollection.ForestTrustDomainInfoCollection()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustDomainInfoCollection.ContainsForestTrustDomainInformation">
            <summary>Sets the shim of ForestTrustDomainInfoCollection.Contains(ForestTrustDomainInformation information)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustDomainInfoCollection.CopyToForestTrustDomainInformationArrayInt32">
            <summary>Sets the shim of ForestTrustDomainInfoCollection.CopyTo(ForestTrustDomainInformation[] array, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustDomainInfoCollection.IndexOfForestTrustDomainInformation">
            <summary>Sets the shim of ForestTrustDomainInfoCollection.IndexOf(ForestTrustDomainInformation information)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustDomainInfoCollection.ItemGetInt32">
            <summary>Sets the shim of ForestTrustDomainInfoCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustDomainInfoCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustDomainInfoCollection.AllInstances.ContainsForestTrustDomainInformation">
            <summary>Sets the shim of ForestTrustDomainInfoCollection.Contains(ForestTrustDomainInformation information)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustDomainInfoCollection.AllInstances.CopyToForestTrustDomainInformationArrayInt32">
            <summary>Sets the shim of ForestTrustDomainInfoCollection.CopyTo(ForestTrustDomainInformation[] array, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustDomainInfoCollection.AllInstances.IndexOfForestTrustDomainInformation">
            <summary>Sets the shim of ForestTrustDomainInfoCollection.IndexOf(ForestTrustDomainInformation information)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustDomainInfoCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of ForestTrustDomainInfoCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustDomainInformation">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustDomainInformation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustDomainInformation.#ctor(System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustDomainInformation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustDomainInformation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustDomainInformation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustDomainInformation.Constructor">
            <summary>Sets the shim of ForestTrustDomainInformation.ForestTrustDomainInformation()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustDomainInformation.DnsNameGet">
            <summary>Sets the shim of ForestTrustDomainInformation.get_DnsName()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustDomainInformation.DomainSidGet">
            <summary>Sets the shim of ForestTrustDomainInformation.get_DomainSid()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustDomainInformation.NetBiosNameGet">
            <summary>Sets the shim of ForestTrustDomainInformation.get_NetBiosName()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustDomainInformation.StatusGet">
            <summary>Sets the shim of ForestTrustDomainInformation.get_Status()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustDomainInformation.StatusSetForestTrustDomainStatus">
            <summary>Sets the shim of ForestTrustDomainInformation.set_Status(ForestTrustDomainStatus value)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustDomainInformation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustDomainInformation.AllInstances.Constructor">
            <summary>Sets the shim of ForestTrustDomainInformation.ForestTrustDomainInformation()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustDomainInformation.AllInstances.DnsNameGet">
            <summary>Sets the shim of ForestTrustDomainInformation.get_DnsName()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustDomainInformation.AllInstances.DomainSidGet">
            <summary>Sets the shim of ForestTrustDomainInformation.get_DomainSid()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustDomainInformation.AllInstances.NetBiosNameGet">
            <summary>Sets the shim of ForestTrustDomainInformation.get_NetBiosName()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustDomainInformation.AllInstances.StatusGet">
            <summary>Sets the shim of ForestTrustDomainInformation.get_Status()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustDomainInformation.AllInstances.StatusSetForestTrustDomainStatus">
            <summary>Sets the shim of ForestTrustDomainInformation.set_Status(ForestTrustDomainStatus value)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustRelationshipCollision">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustRelationshipCollision.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustRelationshipCollision.#ctor(System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustRelationshipCollision.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustRelationshipCollision.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustRelationshipCollision.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustRelationshipCollision.CollisionRecordGet">
            <summary>Sets the shim of ForestTrustRelationshipCollision.get_CollisionRecord()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustRelationshipCollision.CollisionTypeGet">
            <summary>Sets the shim of ForestTrustRelationshipCollision.get_CollisionType()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustRelationshipCollision.Constructor">
            <summary>Sets the shim of ForestTrustRelationshipCollision.ForestTrustRelationshipCollision()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustRelationshipCollision.DomainCollisionOptionGet">
            <summary>Sets the shim of ForestTrustRelationshipCollision.get_DomainCollisionOption()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustRelationshipCollision.TopLevelNameCollisionOptionGet">
            <summary>Sets the shim of ForestTrustRelationshipCollision.get_TopLevelNameCollisionOption()</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustRelationshipCollision.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustRelationshipCollision.AllInstances.CollisionRecordGet">
            <summary>Sets the shim of ForestTrustRelationshipCollision.get_CollisionRecord()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustRelationshipCollision.AllInstances.CollisionTypeGet">
            <summary>Sets the shim of ForestTrustRelationshipCollision.get_CollisionType()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustRelationshipCollision.AllInstances.Constructor">
            <summary>Sets the shim of ForestTrustRelationshipCollision.ForestTrustRelationshipCollision()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustRelationshipCollision.AllInstances.DomainCollisionOptionGet">
            <summary>Sets the shim of ForestTrustRelationshipCollision.get_DomainCollisionOption()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustRelationshipCollision.AllInstances.TopLevelNameCollisionOptionGet">
            <summary>Sets the shim of ForestTrustRelationshipCollision.get_TopLevelNameCollisionOption()</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustRelationshipCollisionCollection">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustRelationshipCollisionCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustRelationshipCollisionCollection.#ctor(System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustRelationshipCollisionCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustRelationshipCollisionCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustRelationshipCollisionCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustRelationshipCollisionCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustRelationshipCollisionCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustRelationshipCollisionCollection.Constructor">
            <summary>Sets the shim of ForestTrustRelationshipCollisionCollection.ForestTrustRelationshipCollisionCollection()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustRelationshipCollisionCollection.ContainsForestTrustRelationshipCollision">
            <summary>Sets the shim of ForestTrustRelationshipCollisionCollection.Contains(ForestTrustRelationshipCollision collision)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustRelationshipCollisionCollection.CopyToForestTrustRelationshipCollisionArrayInt32">
            <summary>Sets the shim of ForestTrustRelationshipCollisionCollection.CopyTo(ForestTrustRelationshipCollision[] array, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustRelationshipCollisionCollection.IndexOfForestTrustRelationshipCollision">
            <summary>Sets the shim of ForestTrustRelationshipCollisionCollection.IndexOf(ForestTrustRelationshipCollision collision)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustRelationshipCollisionCollection.ItemGetInt32">
            <summary>Sets the shim of ForestTrustRelationshipCollisionCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustRelationshipCollisionCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustRelationshipCollisionCollection.AllInstances.ContainsForestTrustRelationshipCollision">
            <summary>Sets the shim of ForestTrustRelationshipCollisionCollection.Contains(ForestTrustRelationshipCollision collision)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustRelationshipCollisionCollection.AllInstances.CopyToForestTrustRelationshipCollisionArrayInt32">
            <summary>Sets the shim of ForestTrustRelationshipCollisionCollection.CopyTo(ForestTrustRelationshipCollision[] array, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustRelationshipCollisionCollection.AllInstances.IndexOfForestTrustRelationshipCollision">
            <summary>Sets the shim of ForestTrustRelationshipCollisionCollection.IndexOf(ForestTrustRelationshipCollision collision)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustRelationshipCollisionCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of ForestTrustRelationshipCollisionCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustRelationshipInformation">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustRelationshipInformation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustRelationshipInformation.#ctor(System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustRelationshipInformation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustRelationshipInformation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustRelationshipInformation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustRelationshipInformation.Constructor">
            <summary>Sets the shim of ForestTrustRelationshipInformation.ForestTrustRelationshipInformation()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustRelationshipInformation.ExcludedTopLevelNamesGet">
            <summary>Sets the shim of ForestTrustRelationshipInformation.get_ExcludedTopLevelNames()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustRelationshipInformation.Save">
            <summary>Sets the shim of ForestTrustRelationshipInformation.Save()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustRelationshipInformation.TopLevelNamesGet">
            <summary>Sets the shim of ForestTrustRelationshipInformation.get_TopLevelNames()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustRelationshipInformation.TrustedDomainInformationGet">
            <summary>Sets the shim of ForestTrustRelationshipInformation.get_TrustedDomainInformation()</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustRelationshipInformation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustRelationshipInformation.AllInstances.Constructor">
            <summary>Sets the shim of ForestTrustRelationshipInformation.ForestTrustRelationshipInformation()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustRelationshipInformation.AllInstances.ExcludedTopLevelNamesGet">
            <summary>Sets the shim of ForestTrustRelationshipInformation.get_ExcludedTopLevelNames()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustRelationshipInformation.AllInstances.Save">
            <summary>Sets the shim of ForestTrustRelationshipInformation.Save()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustRelationshipInformation.AllInstances.TopLevelNamesGet">
            <summary>Sets the shim of ForestTrustRelationshipInformation.get_TopLevelNames()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimForestTrustRelationshipInformation.AllInstances.TrustedDomainInformationGet">
            <summary>Sets the shim of ForestTrustRelationshipInformation.get_TrustedDomainInformation()</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimGlobalCatalog">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.GlobalCatalog</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimGlobalCatalog.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimGlobalCatalog.#ctor(System.DirectoryServices.ActiveDirectory.GlobalCatalog)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimGlobalCatalog.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimGlobalCatalog.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimGlobalCatalog.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimGlobalCatalog.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimGlobalCatalog.Constructor">
            <summary>Sets the shim of GlobalCatalog.GlobalCatalog()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimGlobalCatalog.DisableGlobalCatalog">
            <summary>Sets the shim of GlobalCatalog.DisableGlobalCatalog()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimGlobalCatalog.EnableGlobalCatalog">
            <summary>Sets the shim of GlobalCatalog.EnableGlobalCatalog()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimGlobalCatalog.FindAllDirectoryContext">
            <summary>Sets the shim of GlobalCatalog.FindAll(DirectoryContext context)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimGlobalCatalog.FindAllDirectoryContextString">
            <summary>Sets the shim of GlobalCatalog.FindAll(DirectoryContext context, String siteName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimGlobalCatalog.FindAllProperties">
            <summary>Sets the shim of GlobalCatalog.FindAllProperties()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimGlobalCatalog.FindOneDirectoryContext">
            <summary>Sets the shim of GlobalCatalog.FindOne(DirectoryContext context)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimGlobalCatalog.FindOneDirectoryContextLocatorOptions">
            <summary>Sets the shim of GlobalCatalog.FindOne(DirectoryContext context, LocatorOptions flag)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimGlobalCatalog.FindOneDirectoryContextString">
            <summary>Sets the shim of GlobalCatalog.FindOne(DirectoryContext context, String siteName)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimGlobalCatalog.FindOneDirectoryContextStringLocatorOptions">
            <summary>Sets the shim of GlobalCatalog.FindOne(DirectoryContext context, String siteName, LocatorOptions flag)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimGlobalCatalog.GetDirectorySearcher">
            <summary>Sets the shim of GlobalCatalog.GetDirectorySearcher()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimGlobalCatalog.GetGlobalCatalogDirectoryContext">
            <summary>Sets the shim of GlobalCatalog.GetGlobalCatalog(DirectoryContext context)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimGlobalCatalog.IsGlobalCatalog">
            <summary>Sets the shim of GlobalCatalog.IsGlobalCatalog()</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimGlobalCatalog.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimGlobalCatalog.AllInstances.Constructor">
            <summary>Sets the shim of GlobalCatalog.GlobalCatalog()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimGlobalCatalog.AllInstances.DisableGlobalCatalog">
            <summary>Sets the shim of GlobalCatalog.DisableGlobalCatalog()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimGlobalCatalog.AllInstances.EnableGlobalCatalog">
            <summary>Sets the shim of GlobalCatalog.EnableGlobalCatalog()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimGlobalCatalog.AllInstances.FindAllProperties">
            <summary>Sets the shim of GlobalCatalog.FindAllProperties()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimGlobalCatalog.AllInstances.GetDirectorySearcher">
            <summary>Sets the shim of GlobalCatalog.GetDirectorySearcher()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimGlobalCatalog.AllInstances.IsGlobalCatalog">
            <summary>Sets the shim of GlobalCatalog.IsGlobalCatalog()</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimGlobalCatalogCollection">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimGlobalCatalogCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimGlobalCatalogCollection.#ctor(System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimGlobalCatalogCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimGlobalCatalogCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimGlobalCatalogCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimGlobalCatalogCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimGlobalCatalogCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimGlobalCatalogCollection.Constructor">
            <summary>Sets the shim of GlobalCatalogCollection.GlobalCatalogCollection()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimGlobalCatalogCollection.ContainsGlobalCatalog">
            <summary>Sets the shim of GlobalCatalogCollection.Contains(GlobalCatalog globalCatalog)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimGlobalCatalogCollection.CopyToGlobalCatalogArrayInt32">
            <summary>Sets the shim of GlobalCatalogCollection.CopyTo(GlobalCatalog[] globalCatalogs, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimGlobalCatalogCollection.IndexOfGlobalCatalog">
            <summary>Sets the shim of GlobalCatalogCollection.IndexOf(GlobalCatalog globalCatalog)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimGlobalCatalogCollection.ItemGetInt32">
            <summary>Sets the shim of GlobalCatalogCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimGlobalCatalogCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimGlobalCatalogCollection.AllInstances.ContainsGlobalCatalog">
            <summary>Sets the shim of GlobalCatalogCollection.Contains(GlobalCatalog globalCatalog)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimGlobalCatalogCollection.AllInstances.CopyToGlobalCatalogArrayInt32">
            <summary>Sets the shim of GlobalCatalogCollection.CopyTo(GlobalCatalog[] globalCatalogs, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimGlobalCatalogCollection.AllInstances.IndexOfGlobalCatalog">
            <summary>Sets the shim of GlobalCatalogCollection.IndexOf(GlobalCatalog globalCatalog)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimGlobalCatalogCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of GlobalCatalogCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyActiveDirectorySchemaClassCollection">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyActiveDirectorySchemaClassCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyActiveDirectorySchemaClassCollection.#ctor(System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyActiveDirectorySchemaClassCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyActiveDirectorySchemaClassCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyActiveDirectorySchemaClassCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyActiveDirectorySchemaClassCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyActiveDirectorySchemaClassCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyActiveDirectorySchemaClassCollection.Constructor">
            <summary>Sets the shim of ReadOnlyActiveDirectorySchemaClassCollection.ReadOnlyActiveDirectorySchemaClassCollection()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyActiveDirectorySchemaClassCollection.ContainsActiveDirectorySchemaClass">
            <summary>Sets the shim of ReadOnlyActiveDirectorySchemaClassCollection.Contains(ActiveDirectorySchemaClass schemaClass)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyActiveDirectorySchemaClassCollection.CopyToActiveDirectorySchemaClassArrayInt32">
            <summary>Sets the shim of ReadOnlyActiveDirectorySchemaClassCollection.CopyTo(ActiveDirectorySchemaClass[] classes, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyActiveDirectorySchemaClassCollection.IndexOfActiveDirectorySchemaClass">
            <summary>Sets the shim of ReadOnlyActiveDirectorySchemaClassCollection.IndexOf(ActiveDirectorySchemaClass schemaClass)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyActiveDirectorySchemaClassCollection.ItemGetInt32">
            <summary>Sets the shim of ReadOnlyActiveDirectorySchemaClassCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyActiveDirectorySchemaClassCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyActiveDirectorySchemaClassCollection.AllInstances.ContainsActiveDirectorySchemaClass">
            <summary>Sets the shim of ReadOnlyActiveDirectorySchemaClassCollection.Contains(ActiveDirectorySchemaClass schemaClass)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyActiveDirectorySchemaClassCollection.AllInstances.CopyToActiveDirectorySchemaClassArrayInt32">
            <summary>Sets the shim of ReadOnlyActiveDirectorySchemaClassCollection.CopyTo(ActiveDirectorySchemaClass[] classes, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyActiveDirectorySchemaClassCollection.AllInstances.IndexOfActiveDirectorySchemaClass">
            <summary>Sets the shim of ReadOnlyActiveDirectorySchemaClassCollection.IndexOf(ActiveDirectorySchemaClass schemaClass)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyActiveDirectorySchemaClassCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of ReadOnlyActiveDirectorySchemaClassCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyActiveDirectorySchemaPropertyCollection">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyActiveDirectorySchemaPropertyCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyActiveDirectorySchemaPropertyCollection.#ctor(System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyActiveDirectorySchemaPropertyCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyActiveDirectorySchemaPropertyCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyActiveDirectorySchemaPropertyCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyActiveDirectorySchemaPropertyCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyActiveDirectorySchemaPropertyCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyActiveDirectorySchemaPropertyCollection.Constructor">
            <summary>Sets the shim of ReadOnlyActiveDirectorySchemaPropertyCollection.ReadOnlyActiveDirectorySchemaPropertyCollection()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyActiveDirectorySchemaPropertyCollection.ContainsActiveDirectorySchemaProperty">
            <summary>Sets the shim of ReadOnlyActiveDirectorySchemaPropertyCollection.Contains(ActiveDirectorySchemaProperty schemaProperty)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyActiveDirectorySchemaPropertyCollection.CopyToActiveDirectorySchemaPropertyArrayInt32">
            <summary>Sets the shim of ReadOnlyActiveDirectorySchemaPropertyCollection.CopyTo(ActiveDirectorySchemaProperty[] properties, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyActiveDirectorySchemaPropertyCollection.IndexOfActiveDirectorySchemaProperty">
            <summary>Sets the shim of ReadOnlyActiveDirectorySchemaPropertyCollection.IndexOf(ActiveDirectorySchemaProperty schemaProperty)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyActiveDirectorySchemaPropertyCollection.ItemGetInt32">
            <summary>Sets the shim of ReadOnlyActiveDirectorySchemaPropertyCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyActiveDirectorySchemaPropertyCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyActiveDirectorySchemaPropertyCollection.AllInstances.ContainsActiveDirectorySchemaProperty">
            <summary>Sets the shim of ReadOnlyActiveDirectorySchemaPropertyCollection.Contains(ActiveDirectorySchemaProperty schemaProperty)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyActiveDirectorySchemaPropertyCollection.AllInstances.CopyToActiveDirectorySchemaPropertyArrayInt32">
            <summary>Sets the shim of ReadOnlyActiveDirectorySchemaPropertyCollection.CopyTo(ActiveDirectorySchemaProperty[] properties, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyActiveDirectorySchemaPropertyCollection.AllInstances.IndexOfActiveDirectorySchemaProperty">
            <summary>Sets the shim of ReadOnlyActiveDirectorySchemaPropertyCollection.IndexOf(ActiveDirectorySchemaProperty schemaProperty)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyActiveDirectorySchemaPropertyCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of ReadOnlyActiveDirectorySchemaPropertyCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyDirectoryServerCollection">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyDirectoryServerCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyDirectoryServerCollection.#ctor(System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyDirectoryServerCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyDirectoryServerCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyDirectoryServerCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyDirectoryServerCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyDirectoryServerCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyDirectoryServerCollection.Constructor">
            <summary>Sets the shim of ReadOnlyDirectoryServerCollection.ReadOnlyDirectoryServerCollection()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyDirectoryServerCollection.ContainsDirectoryServer">
            <summary>Sets the shim of ReadOnlyDirectoryServerCollection.Contains(DirectoryServer directoryServer)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyDirectoryServerCollection.CopyToDirectoryServerArrayInt32">
            <summary>Sets the shim of ReadOnlyDirectoryServerCollection.CopyTo(DirectoryServer[] directoryServers, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyDirectoryServerCollection.IndexOfDirectoryServer">
            <summary>Sets the shim of ReadOnlyDirectoryServerCollection.IndexOf(DirectoryServer directoryServer)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyDirectoryServerCollection.ItemGetInt32">
            <summary>Sets the shim of ReadOnlyDirectoryServerCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyDirectoryServerCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyDirectoryServerCollection.AllInstances.ContainsDirectoryServer">
            <summary>Sets the shim of ReadOnlyDirectoryServerCollection.Contains(DirectoryServer directoryServer)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyDirectoryServerCollection.AllInstances.CopyToDirectoryServerArrayInt32">
            <summary>Sets the shim of ReadOnlyDirectoryServerCollection.CopyTo(DirectoryServer[] directoryServers, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyDirectoryServerCollection.AllInstances.IndexOfDirectoryServer">
            <summary>Sets the shim of ReadOnlyDirectoryServerCollection.IndexOf(DirectoryServer directoryServer)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyDirectoryServerCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of ReadOnlyDirectoryServerCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlySiteCollection">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlySiteCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlySiteCollection.#ctor(System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlySiteCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlySiteCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlySiteCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlySiteCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlySiteCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlySiteCollection.Constructor">
            <summary>Sets the shim of ReadOnlySiteCollection.ReadOnlySiteCollection()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlySiteCollection.ContainsActiveDirectorySite">
            <summary>Sets the shim of ReadOnlySiteCollection.Contains(ActiveDirectorySite site)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlySiteCollection.CopyToActiveDirectorySiteArrayInt32">
            <summary>Sets the shim of ReadOnlySiteCollection.CopyTo(ActiveDirectorySite[] sites, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlySiteCollection.IndexOfActiveDirectorySite">
            <summary>Sets the shim of ReadOnlySiteCollection.IndexOf(ActiveDirectorySite site)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlySiteCollection.ItemGetInt32">
            <summary>Sets the shim of ReadOnlySiteCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlySiteCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlySiteCollection.AllInstances.ContainsActiveDirectorySite">
            <summary>Sets the shim of ReadOnlySiteCollection.Contains(ActiveDirectorySite site)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlySiteCollection.AllInstances.CopyToActiveDirectorySiteArrayInt32">
            <summary>Sets the shim of ReadOnlySiteCollection.CopyTo(ActiveDirectorySite[] sites, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlySiteCollection.AllInstances.IndexOfActiveDirectorySite">
            <summary>Sets the shim of ReadOnlySiteCollection.IndexOf(ActiveDirectorySite site)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlySiteCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of ReadOnlySiteCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlySiteLinkBridgeCollection">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlySiteLinkBridgeCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlySiteLinkBridgeCollection.#ctor(System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlySiteLinkBridgeCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlySiteLinkBridgeCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlySiteLinkBridgeCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlySiteLinkBridgeCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlySiteLinkBridgeCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlySiteLinkBridgeCollection.Constructor">
            <summary>Sets the shim of ReadOnlySiteLinkBridgeCollection.ReadOnlySiteLinkBridgeCollection()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlySiteLinkBridgeCollection.ContainsActiveDirectorySiteLinkBridge">
            <summary>Sets the shim of ReadOnlySiteLinkBridgeCollection.Contains(ActiveDirectorySiteLinkBridge bridge)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlySiteLinkBridgeCollection.CopyToActiveDirectorySiteLinkBridgeArrayInt32">
            <summary>Sets the shim of ReadOnlySiteLinkBridgeCollection.CopyTo(ActiveDirectorySiteLinkBridge[] bridges, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlySiteLinkBridgeCollection.IndexOfActiveDirectorySiteLinkBridge">
            <summary>Sets the shim of ReadOnlySiteLinkBridgeCollection.IndexOf(ActiveDirectorySiteLinkBridge bridge)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlySiteLinkBridgeCollection.ItemGetInt32">
            <summary>Sets the shim of ReadOnlySiteLinkBridgeCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlySiteLinkBridgeCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlySiteLinkBridgeCollection.AllInstances.ContainsActiveDirectorySiteLinkBridge">
            <summary>Sets the shim of ReadOnlySiteLinkBridgeCollection.Contains(ActiveDirectorySiteLinkBridge bridge)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlySiteLinkBridgeCollection.AllInstances.CopyToActiveDirectorySiteLinkBridgeArrayInt32">
            <summary>Sets the shim of ReadOnlySiteLinkBridgeCollection.CopyTo(ActiveDirectorySiteLinkBridge[] bridges, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlySiteLinkBridgeCollection.AllInstances.IndexOfActiveDirectorySiteLinkBridge">
            <summary>Sets the shim of ReadOnlySiteLinkBridgeCollection.IndexOf(ActiveDirectorySiteLinkBridge bridge)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlySiteLinkBridgeCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of ReadOnlySiteLinkBridgeCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlySiteLinkCollection">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlySiteLinkCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlySiteLinkCollection.#ctor(System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlySiteLinkCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlySiteLinkCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlySiteLinkCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlySiteLinkCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlySiteLinkCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlySiteLinkCollection.Constructor">
            <summary>Sets the shim of ReadOnlySiteLinkCollection.ReadOnlySiteLinkCollection()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlySiteLinkCollection.ContainsActiveDirectorySiteLink">
            <summary>Sets the shim of ReadOnlySiteLinkCollection.Contains(ActiveDirectorySiteLink link)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlySiteLinkCollection.CopyToActiveDirectorySiteLinkArrayInt32">
            <summary>Sets the shim of ReadOnlySiteLinkCollection.CopyTo(ActiveDirectorySiteLink[] links, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlySiteLinkCollection.IndexOfActiveDirectorySiteLink">
            <summary>Sets the shim of ReadOnlySiteLinkCollection.IndexOf(ActiveDirectorySiteLink link)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlySiteLinkCollection.ItemGetInt32">
            <summary>Sets the shim of ReadOnlySiteLinkCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlySiteLinkCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlySiteLinkCollection.AllInstances.ContainsActiveDirectorySiteLink">
            <summary>Sets the shim of ReadOnlySiteLinkCollection.Contains(ActiveDirectorySiteLink link)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlySiteLinkCollection.AllInstances.CopyToActiveDirectorySiteLinkArrayInt32">
            <summary>Sets the shim of ReadOnlySiteLinkCollection.CopyTo(ActiveDirectorySiteLink[] links, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlySiteLinkCollection.AllInstances.IndexOfActiveDirectorySiteLink">
            <summary>Sets the shim of ReadOnlySiteLinkCollection.IndexOf(ActiveDirectorySiteLink link)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlySiteLinkCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of ReadOnlySiteLinkCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyStringCollection">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyStringCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyStringCollection.#ctor(System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyStringCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyStringCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyStringCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyStringCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyStringCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyStringCollection.Constructor">
            <summary>Sets the shim of ReadOnlyStringCollection.ReadOnlyStringCollection()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyStringCollection.ContainsString">
            <summary>Sets the shim of ReadOnlyStringCollection.Contains(String value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyStringCollection.CopyToStringArrayInt32">
            <summary>Sets the shim of ReadOnlyStringCollection.CopyTo(String[] values, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyStringCollection.IndexOfString">
            <summary>Sets the shim of ReadOnlyStringCollection.IndexOf(String value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyStringCollection.ItemGetInt32">
            <summary>Sets the shim of ReadOnlyStringCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyStringCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyStringCollection.AllInstances.ContainsString">
            <summary>Sets the shim of ReadOnlyStringCollection.Contains(String value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyStringCollection.AllInstances.CopyToStringArrayInt32">
            <summary>Sets the shim of ReadOnlyStringCollection.CopyTo(String[] values, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyStringCollection.AllInstances.IndexOfString">
            <summary>Sets the shim of ReadOnlyStringCollection.IndexOf(String value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReadOnlyStringCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of ReadOnlyStringCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnection">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.ReplicationConnection</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnection.#ctor(System.DirectoryServices.ActiveDirectory.ReplicationConnection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnection.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnection.ChangeNotificationStatusGet">
            <summary>Sets the shim of ReplicationConnection.get_ChangeNotificationStatus()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnection.ChangeNotificationStatusSetNotificationStatus">
            <summary>Sets the shim of ReplicationConnection.set_ChangeNotificationStatus(NotificationStatus value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnection.ConstructorDirectoryContextStringDirectoryServer">
            <summary>Sets the shim of ReplicationConnection.ReplicationConnection(DirectoryContext context, String name, DirectoryServer sourceServer)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnection.ConstructorDirectoryContextStringDirectoryServerActiveDirectorySchedule">
            <summary>Sets the shim of ReplicationConnection.ReplicationConnection(DirectoryContext context, String name, DirectoryServer sourceServer, ActiveDirectorySchedule schedule)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnection.ConstructorDirectoryContextStringDirectoryServerActiveDirectoryScheduleActiveDirectoryTransportType">
            <summary>Sets the shim of ReplicationConnection.ReplicationConnection(DirectoryContext context, String name, DirectoryServer sourceServer, ActiveDirectorySchedule schedule, ActiveDirectoryTransportType transport)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnection.ConstructorDirectoryContextStringDirectoryServerActiveDirectoryTransportType">
            <summary>Sets the shim of ReplicationConnection.ReplicationConnection(DirectoryContext context, String name, DirectoryServer sourceServer, ActiveDirectoryTransportType transport)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnection.DataCompressionEnabledGet">
            <summary>Sets the shim of ReplicationConnection.get_DataCompressionEnabled()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnection.DataCompressionEnabledSetBoolean">
            <summary>Sets the shim of ReplicationConnection.set_DataCompressionEnabled(Boolean value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnection.Delete">
            <summary>Sets the shim of ReplicationConnection.Delete()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnection.DestinationServerGet">
            <summary>Sets the shim of ReplicationConnection.get_DestinationServer()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnection.Dispose">
            <summary>Sets the shim of ReplicationConnection.Dispose()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnection.DisposeBoolean">
            <summary>Sets the shim of ReplicationConnection.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnection.EnabledGet">
            <summary>Sets the shim of ReplicationConnection.get_Enabled()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnection.EnabledSetBoolean">
            <summary>Sets the shim of ReplicationConnection.set_Enabled(Boolean value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnection.FindByNameDirectoryContextString">
            <summary>Sets the shim of ReplicationConnection.FindByName(DirectoryContext context, String name)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnection.GeneratedByKccGet">
            <summary>Sets the shim of ReplicationConnection.get_GeneratedByKcc()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnection.GeneratedByKccSetBoolean">
            <summary>Sets the shim of ReplicationConnection.set_GeneratedByKcc(Boolean value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnection.GetDirectoryEntry">
            <summary>Sets the shim of ReplicationConnection.GetDirectoryEntry()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnection.NameGet">
            <summary>Sets the shim of ReplicationConnection.get_Name()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnection.ReciprocalReplicationEnabledGet">
            <summary>Sets the shim of ReplicationConnection.get_ReciprocalReplicationEnabled()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnection.ReciprocalReplicationEnabledSetBoolean">
            <summary>Sets the shim of ReplicationConnection.set_ReciprocalReplicationEnabled(Boolean value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnection.ReplicationScheduleGet">
            <summary>Sets the shim of ReplicationConnection.get_ReplicationSchedule()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnection.ReplicationScheduleOwnedByUserGet">
            <summary>Sets the shim of ReplicationConnection.get_ReplicationScheduleOwnedByUser()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnection.ReplicationScheduleOwnedByUserSetBoolean">
            <summary>Sets the shim of ReplicationConnection.set_ReplicationScheduleOwnedByUser(Boolean value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnection.ReplicationScheduleSetActiveDirectorySchedule">
            <summary>Sets the shim of ReplicationConnection.set_ReplicationSchedule(ActiveDirectorySchedule value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnection.ReplicationSpanGet">
            <summary>Sets the shim of ReplicationConnection.get_ReplicationSpan()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnection.Save">
            <summary>Sets the shim of ReplicationConnection.Save()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnection.SourceServerGet">
            <summary>Sets the shim of ReplicationConnection.get_SourceServer()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnection.ToString">
            <summary>Sets the shim of ReplicationConnection.ToString()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnection.TransportTypeGet">
            <summary>Sets the shim of ReplicationConnection.get_TransportType()</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnection.AllInstances.ChangeNotificationStatusGet">
            <summary>Sets the shim of ReplicationConnection.get_ChangeNotificationStatus()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnection.AllInstances.ChangeNotificationStatusSetNotificationStatus">
            <summary>Sets the shim of ReplicationConnection.set_ChangeNotificationStatus(NotificationStatus value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnection.AllInstances.DataCompressionEnabledGet">
            <summary>Sets the shim of ReplicationConnection.get_DataCompressionEnabled()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnection.AllInstances.DataCompressionEnabledSetBoolean">
            <summary>Sets the shim of ReplicationConnection.set_DataCompressionEnabled(Boolean value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnection.AllInstances.Delete">
            <summary>Sets the shim of ReplicationConnection.Delete()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnection.AllInstances.DestinationServerGet">
            <summary>Sets the shim of ReplicationConnection.get_DestinationServer()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnection.AllInstances.Dispose">
            <summary>Sets the shim of ReplicationConnection.Dispose()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnection.AllInstances.DisposeBoolean">
            <summary>Sets the shim of ReplicationConnection.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnection.AllInstances.EnabledGet">
            <summary>Sets the shim of ReplicationConnection.get_Enabled()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnection.AllInstances.EnabledSetBoolean">
            <summary>Sets the shim of ReplicationConnection.set_Enabled(Boolean value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnection.AllInstances.GeneratedByKccGet">
            <summary>Sets the shim of ReplicationConnection.get_GeneratedByKcc()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnection.AllInstances.GeneratedByKccSetBoolean">
            <summary>Sets the shim of ReplicationConnection.set_GeneratedByKcc(Boolean value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnection.AllInstances.GetDirectoryEntry">
            <summary>Sets the shim of ReplicationConnection.GetDirectoryEntry()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnection.AllInstances.NameGet">
            <summary>Sets the shim of ReplicationConnection.get_Name()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnection.AllInstances.ReciprocalReplicationEnabledGet">
            <summary>Sets the shim of ReplicationConnection.get_ReciprocalReplicationEnabled()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnection.AllInstances.ReciprocalReplicationEnabledSetBoolean">
            <summary>Sets the shim of ReplicationConnection.set_ReciprocalReplicationEnabled(Boolean value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnection.AllInstances.ReplicationScheduleGet">
            <summary>Sets the shim of ReplicationConnection.get_ReplicationSchedule()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnection.AllInstances.ReplicationScheduleOwnedByUserGet">
            <summary>Sets the shim of ReplicationConnection.get_ReplicationScheduleOwnedByUser()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnection.AllInstances.ReplicationScheduleOwnedByUserSetBoolean">
            <summary>Sets the shim of ReplicationConnection.set_ReplicationScheduleOwnedByUser(Boolean value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnection.AllInstances.ReplicationScheduleSetActiveDirectorySchedule">
            <summary>Sets the shim of ReplicationConnection.set_ReplicationSchedule(ActiveDirectorySchedule value)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnection.AllInstances.ReplicationSpanGet">
            <summary>Sets the shim of ReplicationConnection.get_ReplicationSpan()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnection.AllInstances.Save">
            <summary>Sets the shim of ReplicationConnection.Save()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnection.AllInstances.SourceServerGet">
            <summary>Sets the shim of ReplicationConnection.get_SourceServer()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnection.AllInstances.ToString01">
            <summary>Sets the shim of ReplicationConnection.ToString()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnection.AllInstances.TransportTypeGet">
            <summary>Sets the shim of ReplicationConnection.get_TransportType()</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnectionCollection">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnectionCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnectionCollection.#ctor(System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnectionCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnectionCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnectionCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnectionCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnectionCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnectionCollection.Constructor">
            <summary>Sets the shim of ReplicationConnectionCollection.ReplicationConnectionCollection()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnectionCollection.ContainsReplicationConnection">
            <summary>Sets the shim of ReplicationConnectionCollection.Contains(ReplicationConnection connection)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnectionCollection.CopyToReplicationConnectionArrayInt32">
            <summary>Sets the shim of ReplicationConnectionCollection.CopyTo(ReplicationConnection[] connections, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnectionCollection.IndexOfReplicationConnection">
            <summary>Sets the shim of ReplicationConnectionCollection.IndexOf(ReplicationConnection connection)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnectionCollection.ItemGetInt32">
            <summary>Sets the shim of ReplicationConnectionCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnectionCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnectionCollection.AllInstances.ContainsReplicationConnection">
            <summary>Sets the shim of ReplicationConnectionCollection.Contains(ReplicationConnection connection)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnectionCollection.AllInstances.CopyToReplicationConnectionArrayInt32">
            <summary>Sets the shim of ReplicationConnectionCollection.CopyTo(ReplicationConnection[] connections, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnectionCollection.AllInstances.IndexOfReplicationConnection">
            <summary>Sets the shim of ReplicationConnectionCollection.IndexOf(ReplicationConnection connection)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationConnectionCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of ReplicationConnectionCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationCursor">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.ReplicationCursor</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationCursor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationCursor.#ctor(System.DirectoryServices.ActiveDirectory.ReplicationCursor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationCursor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationCursor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationCursor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationCursor.Constructor">
            <summary>Sets the shim of ReplicationCursor.ReplicationCursor()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationCursor.LastSuccessfulSyncTimeGet">
            <summary>Sets the shim of ReplicationCursor.get_LastSuccessfulSyncTime()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationCursor.PartitionNameGet">
            <summary>Sets the shim of ReplicationCursor.get_PartitionName()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationCursor.SourceInvocationIdGet">
            <summary>Sets the shim of ReplicationCursor.get_SourceInvocationId()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationCursor.SourceServerGet">
            <summary>Sets the shim of ReplicationCursor.get_SourceServer()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationCursor.UpToDatenessUsnGet">
            <summary>Sets the shim of ReplicationCursor.get_UpToDatenessUsn()</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationCursor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationCursor.AllInstances.LastSuccessfulSyncTimeGet">
            <summary>Sets the shim of ReplicationCursor.get_LastSuccessfulSyncTime()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationCursor.AllInstances.PartitionNameGet">
            <summary>Sets the shim of ReplicationCursor.get_PartitionName()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationCursor.AllInstances.SourceInvocationIdGet">
            <summary>Sets the shim of ReplicationCursor.get_SourceInvocationId()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationCursor.AllInstances.SourceServerGet">
            <summary>Sets the shim of ReplicationCursor.get_SourceServer()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationCursor.AllInstances.UpToDatenessUsnGet">
            <summary>Sets the shim of ReplicationCursor.get_UpToDatenessUsn()</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationCursorCollection">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationCursorCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationCursorCollection.#ctor(System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationCursorCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationCursorCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationCursorCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationCursorCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationCursorCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationCursorCollection.Constructor">
            <summary>Sets the shim of ReplicationCursorCollection.ReplicationCursorCollection()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationCursorCollection.ContainsReplicationCursor">
            <summary>Sets the shim of ReplicationCursorCollection.Contains(ReplicationCursor cursor)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationCursorCollection.CopyToReplicationCursorArrayInt32">
            <summary>Sets the shim of ReplicationCursorCollection.CopyTo(ReplicationCursor[] values, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationCursorCollection.IndexOfReplicationCursor">
            <summary>Sets the shim of ReplicationCursorCollection.IndexOf(ReplicationCursor cursor)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationCursorCollection.ItemGetInt32">
            <summary>Sets the shim of ReplicationCursorCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationCursorCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationCursorCollection.AllInstances.Constructor">
            <summary>Sets the shim of ReplicationCursorCollection.ReplicationCursorCollection()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationCursorCollection.AllInstances.ContainsReplicationCursor">
            <summary>Sets the shim of ReplicationCursorCollection.Contains(ReplicationCursor cursor)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationCursorCollection.AllInstances.CopyToReplicationCursorArrayInt32">
            <summary>Sets the shim of ReplicationCursorCollection.CopyTo(ReplicationCursor[] values, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationCursorCollection.AllInstances.IndexOfReplicationCursor">
            <summary>Sets the shim of ReplicationCursorCollection.IndexOf(ReplicationCursor cursor)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationCursorCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of ReplicationCursorCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationFailure">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.ReplicationFailure</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationFailure.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationFailure.#ctor(System.DirectoryServices.ActiveDirectory.ReplicationFailure)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationFailure.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationFailure.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationFailure.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationFailure.ConsecutiveFailureCountGet">
            <summary>Sets the shim of ReplicationFailure.get_ConsecutiveFailureCount()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationFailure.Constructor">
            <summary>Sets the shim of ReplicationFailure.ReplicationFailure()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationFailure.FirstFailureTimeGet">
            <summary>Sets the shim of ReplicationFailure.get_FirstFailureTime()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationFailure.LastErrorCodeGet">
            <summary>Sets the shim of ReplicationFailure.get_LastErrorCode()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationFailure.LastErrorMessageGet">
            <summary>Sets the shim of ReplicationFailure.get_LastErrorMessage()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationFailure.SourceServerGet">
            <summary>Sets the shim of ReplicationFailure.get_SourceServer()</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationFailure.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationFailure.AllInstances.ConsecutiveFailureCountGet">
            <summary>Sets the shim of ReplicationFailure.get_ConsecutiveFailureCount()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationFailure.AllInstances.Constructor">
            <summary>Sets the shim of ReplicationFailure.ReplicationFailure()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationFailure.AllInstances.FirstFailureTimeGet">
            <summary>Sets the shim of ReplicationFailure.get_FirstFailureTime()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationFailure.AllInstances.LastErrorCodeGet">
            <summary>Sets the shim of ReplicationFailure.get_LastErrorCode()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationFailure.AllInstances.LastErrorMessageGet">
            <summary>Sets the shim of ReplicationFailure.get_LastErrorMessage()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationFailure.AllInstances.SourceServerGet">
            <summary>Sets the shim of ReplicationFailure.get_SourceServer()</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationFailureCollection">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationFailureCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationFailureCollection.#ctor(System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationFailureCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationFailureCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationFailureCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationFailureCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationFailureCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationFailureCollection.Constructor">
            <summary>Sets the shim of ReplicationFailureCollection.ReplicationFailureCollection()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationFailureCollection.ContainsReplicationFailure">
            <summary>Sets the shim of ReplicationFailureCollection.Contains(ReplicationFailure failure)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationFailureCollection.CopyToReplicationFailureArrayInt32">
            <summary>Sets the shim of ReplicationFailureCollection.CopyTo(ReplicationFailure[] failures, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationFailureCollection.IndexOfReplicationFailure">
            <summary>Sets the shim of ReplicationFailureCollection.IndexOf(ReplicationFailure failure)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationFailureCollection.ItemGetInt32">
            <summary>Sets the shim of ReplicationFailureCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationFailureCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationFailureCollection.AllInstances.Constructor">
            <summary>Sets the shim of ReplicationFailureCollection.ReplicationFailureCollection()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationFailureCollection.AllInstances.ContainsReplicationFailure">
            <summary>Sets the shim of ReplicationFailureCollection.Contains(ReplicationFailure failure)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationFailureCollection.AllInstances.CopyToReplicationFailureArrayInt32">
            <summary>Sets the shim of ReplicationFailureCollection.CopyTo(ReplicationFailure[] failures, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationFailureCollection.AllInstances.IndexOfReplicationFailure">
            <summary>Sets the shim of ReplicationFailureCollection.IndexOf(ReplicationFailure failure)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationFailureCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of ReplicationFailureCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationNeighbor">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.ReplicationNeighbor</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationNeighbor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationNeighbor.#ctor(System.DirectoryServices.ActiveDirectory.ReplicationNeighbor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationNeighbor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationNeighbor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationNeighbor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationNeighbor.ConsecutiveFailureCountGet">
            <summary>Sets the shim of ReplicationNeighbor.get_ConsecutiveFailureCount()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationNeighbor.Constructor">
            <summary>Sets the shim of ReplicationNeighbor.ReplicationNeighbor()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationNeighbor.LastAttemptedSyncGet">
            <summary>Sets the shim of ReplicationNeighbor.get_LastAttemptedSync()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationNeighbor.LastSuccessfulSyncGet">
            <summary>Sets the shim of ReplicationNeighbor.get_LastSuccessfulSync()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationNeighbor.LastSyncMessageGet">
            <summary>Sets the shim of ReplicationNeighbor.get_LastSyncMessage()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationNeighbor.LastSyncResultGet">
            <summary>Sets the shim of ReplicationNeighbor.get_LastSyncResult()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationNeighbor.PartitionNameGet">
            <summary>Sets the shim of ReplicationNeighbor.get_PartitionName()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationNeighbor.ReplicationNeighborOptionGet">
            <summary>Sets the shim of ReplicationNeighbor.get_ReplicationNeighborOption()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationNeighbor.SourceInvocationIdGet">
            <summary>Sets the shim of ReplicationNeighbor.get_SourceInvocationId()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationNeighbor.SourceServerGet">
            <summary>Sets the shim of ReplicationNeighbor.get_SourceServer()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationNeighbor.TransportTypeGet">
            <summary>Sets the shim of ReplicationNeighbor.get_TransportType()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationNeighbor.UsnAttributeFilterGet">
            <summary>Sets the shim of ReplicationNeighbor.get_UsnAttributeFilter()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationNeighbor.UsnLastObjectChangeSyncedGet">
            <summary>Sets the shim of ReplicationNeighbor.get_UsnLastObjectChangeSynced()</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationNeighbor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationNeighbor.AllInstances.ConsecutiveFailureCountGet">
            <summary>Sets the shim of ReplicationNeighbor.get_ConsecutiveFailureCount()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationNeighbor.AllInstances.Constructor">
            <summary>Sets the shim of ReplicationNeighbor.ReplicationNeighbor()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationNeighbor.AllInstances.LastAttemptedSyncGet">
            <summary>Sets the shim of ReplicationNeighbor.get_LastAttemptedSync()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationNeighbor.AllInstances.LastSuccessfulSyncGet">
            <summary>Sets the shim of ReplicationNeighbor.get_LastSuccessfulSync()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationNeighbor.AllInstances.LastSyncMessageGet">
            <summary>Sets the shim of ReplicationNeighbor.get_LastSyncMessage()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationNeighbor.AllInstances.LastSyncResultGet">
            <summary>Sets the shim of ReplicationNeighbor.get_LastSyncResult()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationNeighbor.AllInstances.PartitionNameGet">
            <summary>Sets the shim of ReplicationNeighbor.get_PartitionName()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationNeighbor.AllInstances.ReplicationNeighborOptionGet">
            <summary>Sets the shim of ReplicationNeighbor.get_ReplicationNeighborOption()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationNeighbor.AllInstances.SourceInvocationIdGet">
            <summary>Sets the shim of ReplicationNeighbor.get_SourceInvocationId()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationNeighbor.AllInstances.SourceServerGet">
            <summary>Sets the shim of ReplicationNeighbor.get_SourceServer()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationNeighbor.AllInstances.TransportTypeGet">
            <summary>Sets the shim of ReplicationNeighbor.get_TransportType()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationNeighbor.AllInstances.UsnAttributeFilterGet">
            <summary>Sets the shim of ReplicationNeighbor.get_UsnAttributeFilter()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationNeighbor.AllInstances.UsnLastObjectChangeSyncedGet">
            <summary>Sets the shim of ReplicationNeighbor.get_UsnLastObjectChangeSynced()</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationNeighborCollection">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationNeighborCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationNeighborCollection.#ctor(System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationNeighborCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationNeighborCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationNeighborCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationNeighborCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationNeighborCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationNeighborCollection.Constructor">
            <summary>Sets the shim of ReplicationNeighborCollection.ReplicationNeighborCollection()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationNeighborCollection.ContainsReplicationNeighbor">
            <summary>Sets the shim of ReplicationNeighborCollection.Contains(ReplicationNeighbor neighbor)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationNeighborCollection.CopyToReplicationNeighborArrayInt32">
            <summary>Sets the shim of ReplicationNeighborCollection.CopyTo(ReplicationNeighbor[] neighbors, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationNeighborCollection.IndexOfReplicationNeighbor">
            <summary>Sets the shim of ReplicationNeighborCollection.IndexOf(ReplicationNeighbor neighbor)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationNeighborCollection.ItemGetInt32">
            <summary>Sets the shim of ReplicationNeighborCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationNeighborCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationNeighborCollection.AllInstances.Constructor">
            <summary>Sets the shim of ReplicationNeighborCollection.ReplicationNeighborCollection()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationNeighborCollection.AllInstances.ContainsReplicationNeighbor">
            <summary>Sets the shim of ReplicationNeighborCollection.Contains(ReplicationNeighbor neighbor)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationNeighborCollection.AllInstances.CopyToReplicationNeighborArrayInt32">
            <summary>Sets the shim of ReplicationNeighborCollection.CopyTo(ReplicationNeighbor[] neighbors, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationNeighborCollection.AllInstances.IndexOfReplicationNeighbor">
            <summary>Sets the shim of ReplicationNeighborCollection.IndexOf(ReplicationNeighbor neighbor)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationNeighborCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of ReplicationNeighborCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationOperation">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.ReplicationOperation</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationOperation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationOperation.#ctor(System.DirectoryServices.ActiveDirectory.ReplicationOperation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationOperation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationOperation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationOperation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationOperation.Constructor">
            <summary>Sets the shim of ReplicationOperation.ReplicationOperation()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationOperation.OperationNumberGet">
            <summary>Sets the shim of ReplicationOperation.get_OperationNumber()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationOperation.OperationTypeGet">
            <summary>Sets the shim of ReplicationOperation.get_OperationType()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationOperation.PartitionNameGet">
            <summary>Sets the shim of ReplicationOperation.get_PartitionName()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationOperation.PriorityGet">
            <summary>Sets the shim of ReplicationOperation.get_Priority()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationOperation.SourceServerGet">
            <summary>Sets the shim of ReplicationOperation.get_SourceServer()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationOperation.TimeEnqueuedGet">
            <summary>Sets the shim of ReplicationOperation.get_TimeEnqueued()</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationOperation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationOperation.AllInstances.Constructor">
            <summary>Sets the shim of ReplicationOperation.ReplicationOperation()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationOperation.AllInstances.OperationNumberGet">
            <summary>Sets the shim of ReplicationOperation.get_OperationNumber()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationOperation.AllInstances.OperationTypeGet">
            <summary>Sets the shim of ReplicationOperation.get_OperationType()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationOperation.AllInstances.PartitionNameGet">
            <summary>Sets the shim of ReplicationOperation.get_PartitionName()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationOperation.AllInstances.PriorityGet">
            <summary>Sets the shim of ReplicationOperation.get_Priority()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationOperation.AllInstances.SourceServerGet">
            <summary>Sets the shim of ReplicationOperation.get_SourceServer()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationOperation.AllInstances.TimeEnqueuedGet">
            <summary>Sets the shim of ReplicationOperation.get_TimeEnqueued()</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationOperationCollection">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationOperationCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationOperationCollection.#ctor(System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationOperationCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationOperationCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationOperationCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationOperationCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationOperationCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationOperationCollection.Constructor">
            <summary>Sets the shim of ReplicationOperationCollection.ReplicationOperationCollection()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationOperationCollection.ContainsReplicationOperation">
            <summary>Sets the shim of ReplicationOperationCollection.Contains(ReplicationOperation operation)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationOperationCollection.CopyToReplicationOperationArrayInt32">
            <summary>Sets the shim of ReplicationOperationCollection.CopyTo(ReplicationOperation[] operations, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationOperationCollection.IndexOfReplicationOperation">
            <summary>Sets the shim of ReplicationOperationCollection.IndexOf(ReplicationOperation operation)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationOperationCollection.ItemGetInt32">
            <summary>Sets the shim of ReplicationOperationCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationOperationCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationOperationCollection.AllInstances.Constructor">
            <summary>Sets the shim of ReplicationOperationCollection.ReplicationOperationCollection()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationOperationCollection.AllInstances.ContainsReplicationOperation">
            <summary>Sets the shim of ReplicationOperationCollection.Contains(ReplicationOperation operation)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationOperationCollection.AllInstances.CopyToReplicationOperationArrayInt32">
            <summary>Sets the shim of ReplicationOperationCollection.CopyTo(ReplicationOperation[] operations, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationOperationCollection.AllInstances.IndexOfReplicationOperation">
            <summary>Sets the shim of ReplicationOperationCollection.IndexOf(ReplicationOperation operation)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationOperationCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of ReplicationOperationCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationOperationInformation">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationOperationInformation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationOperationInformation.#ctor(System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationOperationInformation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationOperationInformation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationOperationInformation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationOperationInformation.Constructor">
            <summary>Sets the shim of ReplicationOperationInformation.ReplicationOperationInformation()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationOperationInformation.CurrentOperationGet">
            <summary>Sets the shim of ReplicationOperationInformation.get_CurrentOperation()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationOperationInformation.OperationStartTimeGet">
            <summary>Sets the shim of ReplicationOperationInformation.get_OperationStartTime()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationOperationInformation.PendingOperationsGet">
            <summary>Sets the shim of ReplicationOperationInformation.get_PendingOperations()</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationOperationInformation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationOperationInformation.AllInstances.CurrentOperationGet">
            <summary>Sets the shim of ReplicationOperationInformation.get_CurrentOperation()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationOperationInformation.AllInstances.OperationStartTimeGet">
            <summary>Sets the shim of ReplicationOperationInformation.get_OperationStartTime()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimReplicationOperationInformation.AllInstances.PendingOperationsGet">
            <summary>Sets the shim of ReplicationOperationInformation.get_PendingOperations()</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimSyncFromAllServersErrorInformation">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimSyncFromAllServersErrorInformation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimSyncFromAllServersErrorInformation.#ctor(System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimSyncFromAllServersErrorInformation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimSyncFromAllServersErrorInformation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimSyncFromAllServersErrorInformation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimSyncFromAllServersErrorInformation.Constructor">
            <summary>Sets the shim of SyncFromAllServersErrorInformation.SyncFromAllServersErrorInformation()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimSyncFromAllServersErrorInformation.ErrorCategoryGet">
            <summary>Sets the shim of SyncFromAllServersErrorInformation.get_ErrorCategory()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimSyncFromAllServersErrorInformation.ErrorCodeGet">
            <summary>Sets the shim of SyncFromAllServersErrorInformation.get_ErrorCode()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimSyncFromAllServersErrorInformation.ErrorMessageGet">
            <summary>Sets the shim of SyncFromAllServersErrorInformation.get_ErrorMessage()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimSyncFromAllServersErrorInformation.SourceServerGet">
            <summary>Sets the shim of SyncFromAllServersErrorInformation.get_SourceServer()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimSyncFromAllServersErrorInformation.TargetServerGet">
            <summary>Sets the shim of SyncFromAllServersErrorInformation.get_TargetServer()</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimSyncFromAllServersErrorInformation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimSyncFromAllServersErrorInformation.AllInstances.Constructor">
            <summary>Sets the shim of SyncFromAllServersErrorInformation.SyncFromAllServersErrorInformation()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimSyncFromAllServersErrorInformation.AllInstances.ErrorCategoryGet">
            <summary>Sets the shim of SyncFromAllServersErrorInformation.get_ErrorCategory()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimSyncFromAllServersErrorInformation.AllInstances.ErrorCodeGet">
            <summary>Sets the shim of SyncFromAllServersErrorInformation.get_ErrorCode()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimSyncFromAllServersErrorInformation.AllInstances.ErrorMessageGet">
            <summary>Sets the shim of SyncFromAllServersErrorInformation.get_ErrorMessage()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimSyncFromAllServersErrorInformation.AllInstances.SourceServerGet">
            <summary>Sets the shim of SyncFromAllServersErrorInformation.get_SourceServer()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimSyncFromAllServersErrorInformation.AllInstances.TargetServerGet">
            <summary>Sets the shim of SyncFromAllServersErrorInformation.get_TargetServer()</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimSyncFromAllServersOperationException">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimSyncFromAllServersOperationException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimSyncFromAllServersOperationException.#ctor(System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimSyncFromAllServersOperationException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimSyncFromAllServersOperationException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimSyncFromAllServersOperationException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimSyncFromAllServersOperationException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimSyncFromAllServersOperationException.Constructor">
            <summary>Sets the shim of SyncFromAllServersOperationException.SyncFromAllServersOperationException()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimSyncFromAllServersOperationException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of SyncFromAllServersOperationException.SyncFromAllServersOperationException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimSyncFromAllServersOperationException.ConstructorString">
            <summary>Sets the shim of SyncFromAllServersOperationException.SyncFromAllServersOperationException(String message)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimSyncFromAllServersOperationException.ConstructorStringException">
            <summary>Sets the shim of SyncFromAllServersOperationException.SyncFromAllServersOperationException(String message, Exception inner)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimSyncFromAllServersOperationException.ConstructorStringExceptionSyncFromAllServersErrorInformationArray">
            <summary>Sets the shim of SyncFromAllServersOperationException.SyncFromAllServersOperationException(String message, Exception inner, SyncFromAllServersErrorInformation[] errors)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimSyncFromAllServersOperationException.ErrorInformationGet">
            <summary>Sets the shim of SyncFromAllServersOperationException.get_ErrorInformation()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimSyncFromAllServersOperationException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of SyncFromAllServersOperationException.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimSyncFromAllServersOperationException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimSyncFromAllServersOperationException.AllInstances.ErrorInformationGet">
            <summary>Sets the shim of SyncFromAllServersOperationException.get_ErrorInformation()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimSyncFromAllServersOperationException.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of SyncFromAllServersOperationException.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimTopLevelName">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.TopLevelName</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimTopLevelName.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimTopLevelName.#ctor(System.DirectoryServices.ActiveDirectory.TopLevelName)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimTopLevelName.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimTopLevelName.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimTopLevelName.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimTopLevelName.Constructor">
            <summary>Sets the shim of TopLevelName.TopLevelName()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimTopLevelName.NameGet">
            <summary>Sets the shim of TopLevelName.get_Name()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimTopLevelName.StatusGet">
            <summary>Sets the shim of TopLevelName.get_Status()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimTopLevelName.StatusSetTopLevelNameStatus">
            <summary>Sets the shim of TopLevelName.set_Status(TopLevelNameStatus value)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimTopLevelName.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimTopLevelName.AllInstances.Constructor">
            <summary>Sets the shim of TopLevelName.TopLevelName()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimTopLevelName.AllInstances.NameGet">
            <summary>Sets the shim of TopLevelName.get_Name()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimTopLevelName.AllInstances.StatusGet">
            <summary>Sets the shim of TopLevelName.get_Status()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimTopLevelName.AllInstances.StatusSetTopLevelNameStatus">
            <summary>Sets the shim of TopLevelName.set_Status(TopLevelNameStatus value)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimTopLevelNameCollection">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.TopLevelNameCollection</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimTopLevelNameCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimTopLevelNameCollection.#ctor(System.DirectoryServices.ActiveDirectory.TopLevelNameCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimTopLevelNameCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimTopLevelNameCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimTopLevelNameCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimTopLevelNameCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimTopLevelNameCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimTopLevelNameCollection.Constructor">
            <summary>Sets the shim of TopLevelNameCollection.TopLevelNameCollection()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimTopLevelNameCollection.ContainsTopLevelName">
            <summary>Sets the shim of TopLevelNameCollection.Contains(TopLevelName name)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimTopLevelNameCollection.CopyToTopLevelNameArrayInt32">
            <summary>Sets the shim of TopLevelNameCollection.CopyTo(TopLevelName[] names, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimTopLevelNameCollection.IndexOfTopLevelName">
            <summary>Sets the shim of TopLevelNameCollection.IndexOf(TopLevelName name)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimTopLevelNameCollection.ItemGetInt32">
            <summary>Sets the shim of TopLevelNameCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimTopLevelNameCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimTopLevelNameCollection.AllInstances.ContainsTopLevelName">
            <summary>Sets the shim of TopLevelNameCollection.Contains(TopLevelName name)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimTopLevelNameCollection.AllInstances.CopyToTopLevelNameArrayInt32">
            <summary>Sets the shim of TopLevelNameCollection.CopyTo(TopLevelName[] names, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimTopLevelNameCollection.AllInstances.IndexOfTopLevelName">
            <summary>Sets the shim of TopLevelNameCollection.IndexOf(TopLevelName name)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimTopLevelNameCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of TopLevelNameCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimTrustRelationshipInformation">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimTrustRelationshipInformation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimTrustRelationshipInformation.#ctor(System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimTrustRelationshipInformation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimTrustRelationshipInformation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimTrustRelationshipInformation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimTrustRelationshipInformation.Constructor">
            <summary>Sets the shim of TrustRelationshipInformation.TrustRelationshipInformation()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimTrustRelationshipInformation.SourceNameGet">
            <summary>Sets the shim of TrustRelationshipInformation.get_SourceName()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimTrustRelationshipInformation.TargetNameGet">
            <summary>Sets the shim of TrustRelationshipInformation.get_TargetName()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimTrustRelationshipInformation.TrustDirectionGet">
            <summary>Sets the shim of TrustRelationshipInformation.get_TrustDirection()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimTrustRelationshipInformation.TrustTypeGet">
            <summary>Sets the shim of TrustRelationshipInformation.get_TrustType()</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimTrustRelationshipInformation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimTrustRelationshipInformation.AllInstances.SourceNameGet">
            <summary>Sets the shim of TrustRelationshipInformation.get_SourceName()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimTrustRelationshipInformation.AllInstances.TargetNameGet">
            <summary>Sets the shim of TrustRelationshipInformation.get_TargetName()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimTrustRelationshipInformation.AllInstances.TrustDirectionGet">
            <summary>Sets the shim of TrustRelationshipInformation.get_TrustDirection()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimTrustRelationshipInformation.AllInstances.TrustTypeGet">
            <summary>Sets the shim of TrustRelationshipInformation.get_TrustType()</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimTrustRelationshipInformationCollection">
            <summary>Shim type of System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimTrustRelationshipInformationCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimTrustRelationshipInformationCollection.#ctor(System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimTrustRelationshipInformationCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimTrustRelationshipInformationCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimTrustRelationshipInformationCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.ShimTrustRelationshipInformationCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimTrustRelationshipInformationCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimTrustRelationshipInformationCollection.Constructor">
            <summary>Sets the shim of TrustRelationshipInformationCollection.TrustRelationshipInformationCollection()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimTrustRelationshipInformationCollection.ContainsTrustRelationshipInformation">
            <summary>Sets the shim of TrustRelationshipInformationCollection.Contains(TrustRelationshipInformation information)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimTrustRelationshipInformationCollection.CopyToTrustRelationshipInformationArrayInt32">
            <summary>Sets the shim of TrustRelationshipInformationCollection.CopyTo(TrustRelationshipInformation[] array, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimTrustRelationshipInformationCollection.IndexOfTrustRelationshipInformation">
            <summary>Sets the shim of TrustRelationshipInformationCollection.IndexOf(TrustRelationshipInformation information)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimTrustRelationshipInformationCollection.ItemGetInt32">
            <summary>Sets the shim of TrustRelationshipInformationCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.ShimTrustRelationshipInformationCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimTrustRelationshipInformationCollection.AllInstances.ContainsTrustRelationshipInformation">
            <summary>Sets the shim of TrustRelationshipInformationCollection.Contains(TrustRelationshipInformation information)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimTrustRelationshipInformationCollection.AllInstances.CopyToTrustRelationshipInformationArrayInt32">
            <summary>Sets the shim of TrustRelationshipInformationCollection.CopyTo(TrustRelationshipInformation[] array, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimTrustRelationshipInformationCollection.AllInstances.IndexOfTrustRelationshipInformation">
            <summary>Sets the shim of TrustRelationshipInformationCollection.IndexOf(TrustRelationshipInformation information)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.ShimTrustRelationshipInformationCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of TrustRelationshipInformationCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryObjectExistsException">
            <summary>Stub type of System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryObjectExistsException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryObjectExistsException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryObjectExistsException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryObjectExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryObjectExistsException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubActiveDirectoryObjectExistsException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryObjectExistsException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubActiveDirectoryObjectExistsException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryObjectExistsException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryObjectExistsException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryObjectExistsException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryObjectExistsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryObjectExistsException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryObjectExistsException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryObjectExistsException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryObjectExistsException.InitializeStub">
            <summary>Initializes a new instance of type StubActiveDirectoryObjectExistsException</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryObjectExistsException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryObjectExistsException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryObjectExistsException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryObjectExistsException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryObjectExistsException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryObjectExistsException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryObjectExistsException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryObjectExistsException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryObjectExistsException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryObjectExistsException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryObjectExistsException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryObjectExistsException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryObjectExistsException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryObjectExistsException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryObjectNotFoundException">
            <summary>Stub type of System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryObjectNotFoundException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryObjectNotFoundException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryObjectNotFoundException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryObjectNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryObjectNotFoundException.#ctor(System.String,System.Type,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryObjectNotFoundException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubActiveDirectoryObjectNotFoundException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryObjectNotFoundException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubActiveDirectoryObjectNotFoundException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryObjectNotFoundException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryObjectNotFoundException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryObjectNotFoundException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryObjectNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of ActiveDirectoryObjectNotFoundException.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryObjectNotFoundException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of ActiveDirectoryObjectNotFoundException.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryObjectNotFoundException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryObjectNotFoundException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryObjectNotFoundException.InitializeStub">
            <summary>Initializes a new instance of type StubActiveDirectoryObjectNotFoundException</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryObjectNotFoundException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryObjectNotFoundException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryObjectNotFoundException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryObjectNotFoundException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryObjectNotFoundException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryObjectNotFoundException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryObjectNotFoundException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryObjectNotFoundException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryObjectNotFoundException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryObjectNotFoundException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryObjectNotFoundException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryObjectNotFoundException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryObjectNotFoundException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryObjectNotFoundException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryOperationException">
            <summary>Stub type of System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryOperationException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryOperationException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryOperationException.#ctor(System.String,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryOperationException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryOperationException.#ctor(System.String,System.Exception,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryOperationException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubActiveDirectoryOperationException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryOperationException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubActiveDirectoryOperationException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryOperationException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryOperationException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryOperationException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryOperationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of ActiveDirectoryOperationException.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryOperationException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of ActiveDirectoryOperationException.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryOperationException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryOperationException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryOperationException.InitializeStub">
            <summary>Initializes a new instance of type StubActiveDirectoryOperationException</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryOperationException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryOperationException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryOperationException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryOperationException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryOperationException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryOperationException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryOperationException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryOperationException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryOperationException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryOperationException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryOperationException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryOperationException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryOperationException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryOperationException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryPartition">
            <summary>Stub type of System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryPartition.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryPartition.Dispose(System.Boolean)">
            <summary>Sets the stub of ActiveDirectoryPartition.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryPartition.DisposeBoolean">
            <summary>Sets the stub of ActiveDirectoryPartition.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryPartition.GetDirectoryEntry">
            <summary>Sets the stub of ActiveDirectoryPartition.GetDirectoryEntry()</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryPartition.GetDirectoryEntry01">
            <summary>Sets the stub of ActiveDirectoryPartition.GetDirectoryEntry()</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryPartition.InitializeStub">
            <summary>Initializes a new instance of type StubActiveDirectoryPartition</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryPartition.ToString">
            <summary>Sets the stub of ActiveDirectoryPartition.ToString()</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryPartition.ToString01">
            <summary>Sets the stub of ActiveDirectoryPartition.ToString()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryPartition.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryPartition.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryPartition.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySchedule">
            <summary>Stub type of System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySchedule.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySchedule.#ctor(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySchedule.InitializeStub">
            <summary>Initializes a new instance of type StubActiveDirectorySchedule</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySchedule.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySchedule.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySchedule.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySchemaClass">
            <summary>Stub type of System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySchemaClass.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySchemaClass.Dispose(System.Boolean)">
            <summary>Sets the stub of ActiveDirectorySchemaClass.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySchemaClass.DisposeBoolean">
            <summary>Sets the stub of ActiveDirectorySchemaClass.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySchemaClass.InitializeStub">
            <summary>Initializes a new instance of type StubActiveDirectorySchemaClass</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySchemaClass.ToString">
            <summary>Sets the stub of ActiveDirectorySchemaClass.ToString()</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySchemaClass.ToString01">
            <summary>Sets the stub of ActiveDirectorySchemaClass.ToString()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySchemaClass.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySchemaClass.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySchemaClass.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySchemaProperty">
            <summary>Stub type of System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySchemaProperty.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySchemaProperty.Dispose(System.Boolean)">
            <summary>Sets the stub of ActiveDirectorySchemaProperty.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySchemaProperty.DisposeBoolean">
            <summary>Sets the stub of ActiveDirectorySchemaProperty.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySchemaProperty.InitializeStub">
            <summary>Initializes a new instance of type StubActiveDirectorySchemaProperty</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySchemaProperty.ToString">
            <summary>Sets the stub of ActiveDirectorySchemaProperty.ToString()</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySchemaProperty.ToString01">
            <summary>Sets the stub of ActiveDirectorySchemaProperty.ToString()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySchemaProperty.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySchemaProperty.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySchemaProperty.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryServerDownException">
            <summary>Stub type of System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryServerDownException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryServerDownException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryServerDownException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryServerDownException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryServerDownException.#ctor(System.String,System.Int32,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryServerDownException.#ctor(System.String,System.Exception,System.Int32,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryServerDownException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubActiveDirectoryServerDownException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryServerDownException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubActiveDirectoryServerDownException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryServerDownException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryServerDownException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryServerDownException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryServerDownException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of ActiveDirectoryServerDownException.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryServerDownException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of ActiveDirectoryServerDownException.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryServerDownException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryServerDownException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryServerDownException.InitializeStub">
            <summary>Initializes a new instance of type StubActiveDirectoryServerDownException</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryServerDownException.MessageGet">
            <summary>Sets the stub of ActiveDirectoryServerDownException.get_Message()</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryServerDownException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryServerDownException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryServerDownException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryServerDownException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryServerDownException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryServerDownException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryServerDownException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryServerDownException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryServerDownException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryServerDownException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryServerDownException.Message">
            <summary>Sets the stub of ActiveDirectoryServerDownException.get_Message()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryServerDownException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectoryServerDownException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySite">
            <summary>Stub type of System.DirectoryServices.ActiveDirectory.ActiveDirectorySite</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySite.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySite.Dispose(System.Boolean)">
            <summary>Sets the stub of ActiveDirectorySite.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySite.DisposeBoolean">
            <summary>Sets the stub of ActiveDirectorySite.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySite.InitializeStub">
            <summary>Initializes a new instance of type StubActiveDirectorySite</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySite.ToString">
            <summary>Sets the stub of ActiveDirectorySite.ToString()</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySite.ToString01">
            <summary>Sets the stub of ActiveDirectorySite.ToString()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySite.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySite.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySite.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySiteLink">
            <summary>Stub type of System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySiteLink.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySiteLink.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySiteLink.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType,System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySiteLink.Dispose(System.Boolean)">
            <summary>Sets the stub of ActiveDirectorySiteLink.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySiteLink.DisposeBoolean">
            <summary>Sets the stub of ActiveDirectorySiteLink.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySiteLink.InitializeStub">
            <summary>Initializes a new instance of type StubActiveDirectorySiteLink</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySiteLink.ToString">
            <summary>Sets the stub of ActiveDirectorySiteLink.ToString()</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySiteLink.ToString01">
            <summary>Sets the stub of ActiveDirectorySiteLink.ToString()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySiteLink.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySiteLink.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySiteLink.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySiteLinkBridge">
            <summary>Stub type of System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySiteLinkBridge.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySiteLinkBridge.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySiteLinkBridge.Dispose(System.Boolean)">
            <summary>Sets the stub of ActiveDirectorySiteLinkBridge.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySiteLinkBridge.DisposeBoolean">
            <summary>Sets the stub of ActiveDirectorySiteLinkBridge.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySiteLinkBridge.InitializeStub">
            <summary>Initializes a new instance of type StubActiveDirectorySiteLinkBridge</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySiteLinkBridge.ToString">
            <summary>Sets the stub of ActiveDirectorySiteLinkBridge.ToString()</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySiteLinkBridge.ToString01">
            <summary>Sets the stub of ActiveDirectorySiteLinkBridge.ToString()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySiteLinkBridge.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySiteLinkBridge.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySiteLinkBridge.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySubnet">
            <summary>Stub type of System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySubnet.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySubnet.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySubnet.Dispose(System.Boolean)">
            <summary>Sets the stub of ActiveDirectorySubnet.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySubnet.DisposeBoolean">
            <summary>Sets the stub of ActiveDirectorySubnet.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySubnet.InitializeStub">
            <summary>Initializes a new instance of type StubActiveDirectorySubnet</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySubnet.ToString">
            <summary>Sets the stub of ActiveDirectorySubnet.ToString()</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySubnet.ToString01">
            <summary>Sets the stub of ActiveDirectorySubnet.ToString()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySubnet.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySubnet.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubActiveDirectorySubnet.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.StubApplicationPartition">
            <summary>Stub type of System.DirectoryServices.ActiveDirectory.ApplicationPartition</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubApplicationPartition.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubApplicationPartition.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubApplicationPartition.Dispose(System.Boolean)">
            <summary>Sets the stub of ApplicationPartition.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubApplicationPartition.DisposeBoolean">
            <summary>Sets the stub of ApplicationPartition.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubApplicationPartition.GetDirectoryEntry">
            <summary>Sets the stub of ApplicationPartition.GetDirectoryEntry()</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubApplicationPartition.GetDirectoryEntry01">
            <summary>Sets the stub of ApplicationPartition.GetDirectoryEntry()</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubApplicationPartition.InitializeStub">
            <summary>Initializes a new instance of type StubApplicationPartition</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubApplicationPartition.ToString">
            <summary>Sets the stub of ActiveDirectoryPartition.ToString()</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubApplicationPartition.ToString01">
            <summary>Sets the stub of ActiveDirectoryPartition.ToString()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubApplicationPartition.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubApplicationPartition.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubApplicationPartition.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.StubDirectoryContext">
            <summary>Stub type of System.DirectoryServices.ActiveDirectory.DirectoryContext</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubDirectoryContext.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContextType)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubDirectoryContext.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContextType,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubDirectoryContext.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContextType,System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubDirectoryContext.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContextType,System.String,System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubDirectoryContext.InitializeStub">
            <summary>Initializes a new instance of type StubDirectoryContext</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubDirectoryContext.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubDirectoryContext.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubDirectoryContext.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.StubDirectoryServer">
            <summary>Stub type of System.DirectoryServices.ActiveDirectory.DirectoryServer</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubDirectoryServer.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubDirectoryServer.AttachBackingFieldToSyncFromAllServersCallback">
            <summary>Attaches delegates to emulate StubDirectoryServer.SyncFromAllServersCallback as a property with a backing field.</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubDirectoryServer.CheckReplicationConsistency">
            <summary>Sets the stub of DirectoryServer.CheckReplicationConsistency()</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubDirectoryServer.CheckReplicationConsistency01">
            <summary>Sets the stub of DirectoryServer.CheckReplicationConsistency()</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubDirectoryServer.Dispose(System.Boolean)">
            <summary>Sets the stub of DirectoryServer.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubDirectoryServer.DisposeBoolean">
            <summary>Sets the stub of DirectoryServer.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubDirectoryServer.GetAllReplicationNeighbors">
            <summary>Sets the stub of DirectoryServer.GetAllReplicationNeighbors()</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubDirectoryServer.GetAllReplicationNeighbors01">
            <summary>Sets the stub of DirectoryServer.GetAllReplicationNeighbors()</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubDirectoryServer.GetReplicationConnectionFailures">
            <summary>Sets the stub of DirectoryServer.GetReplicationConnectionFailures()</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubDirectoryServer.GetReplicationConnectionFailures01">
            <summary>Sets the stub of DirectoryServer.GetReplicationConnectionFailures()</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubDirectoryServer.GetReplicationCursors(System.String)">
            <summary>Sets the stub of DirectoryServer.GetReplicationCursors(String partition)</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubDirectoryServer.GetReplicationCursorsString">
            <summary>Sets the stub of DirectoryServer.GetReplicationCursors(String partition)</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubDirectoryServer.GetReplicationMetadata(System.String)">
            <summary>Sets the stub of DirectoryServer.GetReplicationMetadata(String objectPath)</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubDirectoryServer.GetReplicationMetadataString">
            <summary>Sets the stub of DirectoryServer.GetReplicationMetadata(String objectPath)</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubDirectoryServer.GetReplicationNeighbors(System.String)">
            <summary>Sets the stub of DirectoryServer.GetReplicationNeighbors(String partition)</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubDirectoryServer.GetReplicationNeighborsString">
            <summary>Sets the stub of DirectoryServer.GetReplicationNeighbors(String partition)</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubDirectoryServer.GetReplicationOperationInformation">
            <summary>Sets the stub of DirectoryServer.GetReplicationOperationInformation()</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubDirectoryServer.GetReplicationOperationInformation01">
            <summary>Sets the stub of DirectoryServer.GetReplicationOperationInformation()</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubDirectoryServer.IPAddressGet">
            <summary>Sets the stub of DirectoryServer.get_IPAddress()</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubDirectoryServer.InboundConnectionsGet">
            <summary>Sets the stub of DirectoryServer.get_InboundConnections()</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubDirectoryServer.InitializeStub">
            <summary>Initializes a new instance of type StubDirectoryServer</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubDirectoryServer.OutboundConnectionsGet">
            <summary>Sets the stub of DirectoryServer.get_OutboundConnections()</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubDirectoryServer.SiteNameGet">
            <summary>Sets the stub of DirectoryServer.get_SiteName()</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubDirectoryServer.SyncFromAllServersCallbackGet">
            <summary>Sets the stub of DirectoryServer.get_SyncFromAllServersCallback()</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubDirectoryServer.SyncFromAllServersCallbackSetSyncUpdateCallback">
            <summary>Sets the stub of DirectoryServer.set_SyncFromAllServersCallback(SyncUpdateCallback value)</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubDirectoryServer.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)">
            <summary>Sets the stub of DirectoryServer.SyncReplicaFromAllServers(String partition, SyncFromAllServersOptions options)</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubDirectoryServer.SyncReplicaFromAllServersStringSyncFromAllServersOptions">
            <summary>Sets the stub of DirectoryServer.SyncReplicaFromAllServers(String partition, SyncFromAllServersOptions options)</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubDirectoryServer.SyncReplicaFromServer(System.String,System.String)">
            <summary>Sets the stub of DirectoryServer.SyncReplicaFromServer(String partition, String sourceServer)</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubDirectoryServer.SyncReplicaFromServerStringString">
            <summary>Sets the stub of DirectoryServer.SyncReplicaFromServer(String partition, String sourceServer)</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubDirectoryServer.ToString">
            <summary>Sets the stub of DirectoryServer.ToString()</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubDirectoryServer.ToString01">
            <summary>Sets the stub of DirectoryServer.ToString()</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubDirectoryServer.TriggerSyncReplicaFromNeighbors(System.String)">
            <summary>Sets the stub of DirectoryServer.TriggerSyncReplicaFromNeighbors(String partition)</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubDirectoryServer.TriggerSyncReplicaFromNeighborsString">
            <summary>Sets the stub of DirectoryServer.TriggerSyncReplicaFromNeighbors(String partition)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubDirectoryServer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubDirectoryServer.IPAddress">
            <summary>Sets the stub of DirectoryServer.get_IPAddress()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubDirectoryServer.InboundConnections">
            <summary>Sets the stub of DirectoryServer.get_InboundConnections()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubDirectoryServer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubDirectoryServer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubDirectoryServer.OutboundConnections">
            <summary>Sets the stub of DirectoryServer.get_OutboundConnections()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubDirectoryServer.SiteName">
            <summary>Sets the stub of DirectoryServer.get_SiteName()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubDirectoryServer.SyncFromAllServersCallback">
            <summary>Sets the stub of DirectoryServer.get_SyncFromAllServersCallback()</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.StubDomainController">
            <summary>Stub type of System.DirectoryServices.ActiveDirectory.DomainController</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubDomainController.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubDomainController.AttachBackingFieldToSyncFromAllServersCallback">
            <summary>Attaches delegates to emulate StubDomainController.SyncFromAllServersCallback as a property with a backing field.</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubDomainController.CheckReplicationConsistency">
            <summary>Sets the stub of DomainController.CheckReplicationConsistency()</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubDomainController.CheckReplicationConsistency01">
            <summary>Sets the stub of DomainController.CheckReplicationConsistency()</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubDomainController.Dispose(System.Boolean)">
            <summary>Sets the stub of DomainController.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubDomainController.DisposeBoolean">
            <summary>Sets the stub of DomainController.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubDomainController.EnableGlobalCatalog">
            <summary>Sets the stub of DomainController.EnableGlobalCatalog()</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubDomainController.EnableGlobalCatalog01">
            <summary>Sets the stub of DomainController.EnableGlobalCatalog()</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubDomainController.GetAllReplicationNeighbors">
            <summary>Sets the stub of DomainController.GetAllReplicationNeighbors()</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubDomainController.GetAllReplicationNeighbors01">
            <summary>Sets the stub of DomainController.GetAllReplicationNeighbors()</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubDomainController.GetDirectorySearcher">
            <summary>Sets the stub of DomainController.GetDirectorySearcher()</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubDomainController.GetDirectorySearcher01">
            <summary>Sets the stub of DomainController.GetDirectorySearcher()</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubDomainController.GetReplicationConnectionFailures">
            <summary>Sets the stub of DomainController.GetReplicationConnectionFailures()</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubDomainController.GetReplicationConnectionFailures01">
            <summary>Sets the stub of DomainController.GetReplicationConnectionFailures()</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubDomainController.GetReplicationCursors(System.String)">
            <summary>Sets the stub of DomainController.GetReplicationCursors(String partition)</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubDomainController.GetReplicationCursorsString">
            <summary>Sets the stub of DomainController.GetReplicationCursors(String partition)</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubDomainController.GetReplicationMetadata(System.String)">
            <summary>Sets the stub of DomainController.GetReplicationMetadata(String objectPath)</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubDomainController.GetReplicationMetadataString">
            <summary>Sets the stub of DomainController.GetReplicationMetadata(String objectPath)</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubDomainController.GetReplicationNeighbors(System.String)">
            <summary>Sets the stub of DomainController.GetReplicationNeighbors(String partition)</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubDomainController.GetReplicationNeighborsString">
            <summary>Sets the stub of DomainController.GetReplicationNeighbors(String partition)</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubDomainController.GetReplicationOperationInformation">
            <summary>Sets the stub of DomainController.GetReplicationOperationInformation()</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubDomainController.GetReplicationOperationInformation01">
            <summary>Sets the stub of DomainController.GetReplicationOperationInformation()</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubDomainController.IPAddressGet">
            <summary>Sets the stub of DomainController.get_IPAddress()</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubDomainController.InboundConnectionsGet">
            <summary>Sets the stub of DomainController.get_InboundConnections()</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubDomainController.InitializeStub">
            <summary>Initializes a new instance of type StubDomainController</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubDomainController.IsGlobalCatalog">
            <summary>Sets the stub of DomainController.IsGlobalCatalog()</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubDomainController.IsGlobalCatalog01">
            <summary>Sets the stub of DomainController.IsGlobalCatalog()</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubDomainController.OutboundConnectionsGet">
            <summary>Sets the stub of DomainController.get_OutboundConnections()</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubDomainController.SiteNameGet">
            <summary>Sets the stub of DomainController.get_SiteName()</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubDomainController.SyncFromAllServersCallbackGet">
            <summary>Sets the stub of DomainController.get_SyncFromAllServersCallback()</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubDomainController.SyncFromAllServersCallbackSetSyncUpdateCallback">
            <summary>Sets the stub of DomainController.set_SyncFromAllServersCallback(SyncUpdateCallback value)</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubDomainController.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)">
            <summary>Sets the stub of DomainController.SyncReplicaFromAllServers(String partition, SyncFromAllServersOptions options)</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubDomainController.SyncReplicaFromAllServersStringSyncFromAllServersOptions">
            <summary>Sets the stub of DomainController.SyncReplicaFromAllServers(String partition, SyncFromAllServersOptions options)</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubDomainController.SyncReplicaFromServer(System.String,System.String)">
            <summary>Sets the stub of DomainController.SyncReplicaFromServer(String partition, String sourceServer)</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubDomainController.SyncReplicaFromServerStringString">
            <summary>Sets the stub of DomainController.SyncReplicaFromServer(String partition, String sourceServer)</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubDomainController.ToString">
            <summary>Sets the stub of DirectoryServer.ToString()</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubDomainController.ToString01">
            <summary>Sets the stub of DirectoryServer.ToString()</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubDomainController.TriggerSyncReplicaFromNeighbors(System.String)">
            <summary>Sets the stub of DomainController.TriggerSyncReplicaFromNeighbors(String partition)</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubDomainController.TriggerSyncReplicaFromNeighborsString">
            <summary>Sets the stub of DomainController.TriggerSyncReplicaFromNeighbors(String partition)</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubDomainController.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubDomainController.IPAddress">
            <summary>Sets the stub of DomainController.get_IPAddress()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubDomainController.InboundConnections">
            <summary>Sets the stub of DomainController.get_InboundConnections()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubDomainController.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubDomainController.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubDomainController.OutboundConnections">
            <summary>Sets the stub of DomainController.get_OutboundConnections()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubDomainController.SiteName">
            <summary>Sets the stub of DomainController.get_SiteName()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubDomainController.SyncFromAllServersCallback">
            <summary>Sets the stub of DomainController.get_SyncFromAllServersCallback()</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.StubForestTrustCollisionException">
            <summary>Stub type of System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubForestTrustCollisionException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubForestTrustCollisionException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubForestTrustCollisionException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubForestTrustCollisionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubForestTrustCollisionException.#ctor(System.String,System.Exception,System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubForestTrustCollisionException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubForestTrustCollisionException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubForestTrustCollisionException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubForestTrustCollisionException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubForestTrustCollisionException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubForestTrustCollisionException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubForestTrustCollisionException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubForestTrustCollisionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of ForestTrustCollisionException.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubForestTrustCollisionException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of ForestTrustCollisionException.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubForestTrustCollisionException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubForestTrustCollisionException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubForestTrustCollisionException.InitializeStub">
            <summary>Initializes a new instance of type StubForestTrustCollisionException</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubForestTrustCollisionException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubForestTrustCollisionException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubForestTrustCollisionException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubForestTrustCollisionException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubForestTrustCollisionException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubForestTrustCollisionException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubForestTrustCollisionException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubForestTrustCollisionException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubForestTrustCollisionException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubForestTrustCollisionException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubForestTrustCollisionException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubForestTrustCollisionException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubForestTrustCollisionException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubForestTrustCollisionException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.StubReplicationConnection">
            <summary>Stub type of System.DirectoryServices.ActiveDirectory.ReplicationConnection</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubReplicationConnection.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.DirectoryServer)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubReplicationConnection.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.DirectoryServer,System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubReplicationConnection.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.DirectoryServer,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubReplicationConnection.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.DirectoryServer,System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubReplicationConnection.Dispose(System.Boolean)">
            <summary>Sets the stub of ReplicationConnection.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubReplicationConnection.DisposeBoolean">
            <summary>Sets the stub of ReplicationConnection.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubReplicationConnection.InitializeStub">
            <summary>Initializes a new instance of type StubReplicationConnection</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubReplicationConnection.ToString">
            <summary>Sets the stub of ReplicationConnection.ToString()</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubReplicationConnection.ToString01">
            <summary>Sets the stub of ReplicationConnection.ToString()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubReplicationConnection.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubReplicationConnection.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubReplicationConnection.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.StubReplicationOperationInformation">
            <summary>Stub type of System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubReplicationOperationInformation.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubReplicationOperationInformation.InitializeStub">
            <summary>Initializes a new instance of type StubReplicationOperationInformation</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubReplicationOperationInformation.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubReplicationOperationInformation.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubReplicationOperationInformation.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.DirectoryServices.ActiveDirectory.Fakes.StubSyncFromAllServersOperationException">
            <summary>Stub type of System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubSyncFromAllServersOperationException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubSyncFromAllServersOperationException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubSyncFromAllServersOperationException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubSyncFromAllServersOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubSyncFromAllServersOperationException.#ctor(System.String,System.Exception,System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubSyncFromAllServersOperationException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubSyncFromAllServersOperationException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubSyncFromAllServersOperationException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubSyncFromAllServersOperationException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubSyncFromAllServersOperationException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubSyncFromAllServersOperationException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubSyncFromAllServersOperationException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubSyncFromAllServersOperationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of SyncFromAllServersOperationException.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubSyncFromAllServersOperationException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of SyncFromAllServersOperationException.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubSyncFromAllServersOperationException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubSyncFromAllServersOperationException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubSyncFromAllServersOperationException.InitializeStub">
            <summary>Initializes a new instance of type StubSyncFromAllServersOperationException</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubSyncFromAllServersOperationException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubSyncFromAllServersOperationException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubSyncFromAllServersOperationException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubSyncFromAllServersOperationException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.DirectoryServices.ActiveDirectory.Fakes.StubSyncFromAllServersOperationException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:System.DirectoryServices.ActiveDirectory.Fakes.StubSyncFromAllServersOperationException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubSyncFromAllServersOperationException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubSyncFromAllServersOperationException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubSyncFromAllServersOperationException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubSyncFromAllServersOperationException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubSyncFromAllServersOperationException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubSyncFromAllServersOperationException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubSyncFromAllServersOperationException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:System.DirectoryServices.ActiveDirectory.Fakes.StubSyncFromAllServersOperationException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.ShimActiveDirectoryAccessRule">
            <summary>Shim type of System.DirectoryServices.ActiveDirectoryAccessRule</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimActiveDirectoryAccessRule.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimActiveDirectoryAccessRule.#ctor(System.DirectoryServices.ActiveDirectoryAccessRule)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimActiveDirectoryAccessRule.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimActiveDirectoryAccessRule.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectoryAccessRule.ActiveDirectoryRightsGet">
            <summary>Sets the shim of ActiveDirectoryAccessRule.get_ActiveDirectoryRights()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectoryAccessRule.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectoryAccessRule.ConstructorIdentityReferenceActiveDirectoryRightsAccessControlType">
            <summary>Sets the shim of ActiveDirectoryAccessRule.ActiveDirectoryAccessRule(IdentityReference identity, ActiveDirectoryRights adRights, AccessControlType type)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectoryAccessRule.ConstructorIdentityReferenceActiveDirectoryRightsAccessControlTypeActiveDirectorySecurityInheritance">
            <summary>Sets the shim of ActiveDirectoryAccessRule.ActiveDirectoryAccessRule(IdentityReference identity, ActiveDirectoryRights adRights, AccessControlType type, ActiveDirectorySecurityInheritance inheritanceType)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectoryAccessRule.ConstructorIdentityReferenceActiveDirectoryRightsAccessControlTypeActiveDirectorySecurityInheritanceGuid">
            <summary>Sets the shim of ActiveDirectoryAccessRule.ActiveDirectoryAccessRule(IdentityReference identity, ActiveDirectoryRights adRights, AccessControlType type, ActiveDirectorySecurityInheritance inheritanceType, Guid inheritedObjectType)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectoryAccessRule.ConstructorIdentityReferenceActiveDirectoryRightsAccessControlTypeGuid">
            <summary>Sets the shim of ActiveDirectoryAccessRule.ActiveDirectoryAccessRule(IdentityReference identity, ActiveDirectoryRights adRights, AccessControlType type, Guid objectType)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectoryAccessRule.ConstructorIdentityReferenceActiveDirectoryRightsAccessControlTypeGuidActiveDirectorySecurityInheritance">
            <summary>Sets the shim of ActiveDirectoryAccessRule.ActiveDirectoryAccessRule(IdentityReference identity, ActiveDirectoryRights adRights, AccessControlType type, Guid objectType, ActiveDirectorySecurityInheritance inheritanceType)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectoryAccessRule.ConstructorIdentityReferenceActiveDirectoryRightsAccessControlTypeGuidActiveDirectorySecurityInheritanceGuid">
            <summary>Sets the shim of ActiveDirectoryAccessRule.ActiveDirectoryAccessRule(IdentityReference identity, ActiveDirectoryRights adRights, AccessControlType type, Guid objectType, ActiveDirectorySecurityInheritance inheritanceType, Guid inheritedObjectType)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectoryAccessRule.InheritanceTypeGet">
            <summary>Sets the shim of ActiveDirectoryAccessRule.get_InheritanceType()</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.ShimActiveDirectoryAccessRule.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectoryAccessRule.AllInstances.ActiveDirectoryRightsGet">
            <summary>Sets the shim of ActiveDirectoryAccessRule.get_ActiveDirectoryRights()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectoryAccessRule.AllInstances.InheritanceTypeGet">
            <summary>Sets the shim of ActiveDirectoryAccessRule.get_InheritanceType()</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.ShimActiveDirectoryAuditRule">
            <summary>Shim type of System.DirectoryServices.ActiveDirectoryAuditRule</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimActiveDirectoryAuditRule.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimActiveDirectoryAuditRule.#ctor(System.DirectoryServices.ActiveDirectoryAuditRule)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimActiveDirectoryAuditRule.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimActiveDirectoryAuditRule.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectoryAuditRule.ActiveDirectoryRightsGet">
            <summary>Sets the shim of ActiveDirectoryAuditRule.get_ActiveDirectoryRights()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectoryAuditRule.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectoryAuditRule.ConstructorIdentityReferenceActiveDirectoryRightsAuditFlags">
            <summary>Sets the shim of ActiveDirectoryAuditRule.ActiveDirectoryAuditRule(IdentityReference identity, ActiveDirectoryRights adRights, AuditFlags auditFlags)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectoryAuditRule.ConstructorIdentityReferenceActiveDirectoryRightsAuditFlagsActiveDirectorySecurityInheritance">
            <summary>Sets the shim of ActiveDirectoryAuditRule.ActiveDirectoryAuditRule(IdentityReference identity, ActiveDirectoryRights adRights, AuditFlags auditFlags, ActiveDirectorySecurityInheritance inheritanceType)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectoryAuditRule.ConstructorIdentityReferenceActiveDirectoryRightsAuditFlagsActiveDirectorySecurityInheritanceGuid">
            <summary>Sets the shim of ActiveDirectoryAuditRule.ActiveDirectoryAuditRule(IdentityReference identity, ActiveDirectoryRights adRights, AuditFlags auditFlags, ActiveDirectorySecurityInheritance inheritanceType, Guid inheritedObjectType)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectoryAuditRule.ConstructorIdentityReferenceActiveDirectoryRightsAuditFlagsGuid">
            <summary>Sets the shim of ActiveDirectoryAuditRule.ActiveDirectoryAuditRule(IdentityReference identity, ActiveDirectoryRights adRights, AuditFlags auditFlags, Guid objectType)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectoryAuditRule.ConstructorIdentityReferenceActiveDirectoryRightsAuditFlagsGuidActiveDirectorySecurityInheritance">
            <summary>Sets the shim of ActiveDirectoryAuditRule.ActiveDirectoryAuditRule(IdentityReference identity, ActiveDirectoryRights adRights, AuditFlags auditFlags, Guid objectType, ActiveDirectorySecurityInheritance inheritanceType)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectoryAuditRule.ConstructorIdentityReferenceActiveDirectoryRightsAuditFlagsGuidActiveDirectorySecurityInheritanceGuid">
            <summary>Sets the shim of ActiveDirectoryAuditRule.ActiveDirectoryAuditRule(IdentityReference identity, ActiveDirectoryRights adRights, AuditFlags auditFlags, Guid objectType, ActiveDirectorySecurityInheritance inheritanceType, Guid inheritedObjectType)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectoryAuditRule.InheritanceTypeGet">
            <summary>Sets the shim of ActiveDirectoryAuditRule.get_InheritanceType()</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.ShimActiveDirectoryAuditRule.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectoryAuditRule.AllInstances.ActiveDirectoryRightsGet">
            <summary>Sets the shim of ActiveDirectoryAuditRule.get_ActiveDirectoryRights()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectoryAuditRule.AllInstances.InheritanceTypeGet">
            <summary>Sets the shim of ActiveDirectoryAuditRule.get_InheritanceType()</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.ShimActiveDirectorySecurity">
            <summary>Shim type of System.DirectoryServices.ActiveDirectorySecurity</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimActiveDirectorySecurity.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimActiveDirectorySecurity.#ctor(System.DirectoryServices.ActiveDirectorySecurity)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimActiveDirectorySecurity.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimActiveDirectorySecurity.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectorySecurity.AccessRightTypeGet">
            <summary>Sets the shim of ActiveDirectorySecurity.get_AccessRightType()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectorySecurity.AccessRuleFactoryIdentityReferenceInt32BooleanInheritanceFlagsPropagationFlagsAccessControlType">
            <summary>Sets the shim of ActiveDirectorySecurity.AccessRuleFactory(IdentityReference identityReference, Int32 accessMask, Boolean isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AccessControlType type)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectorySecurity.AccessRuleFactoryIdentityReferenceInt32BooleanInheritanceFlagsPropagationFlagsAccessControlTypeGuidGuid">
            <summary>Sets the shim of ActiveDirectorySecurity.AccessRuleFactory(IdentityReference identityReference, Int32 accessMask, Boolean isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AccessControlType type, Guid objectGuid, Guid inheritedObjectGuid)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectorySecurity.AccessRuleTypeGet">
            <summary>Sets the shim of ActiveDirectorySecurity.get_AccessRuleType()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectorySecurity.AddAccessRuleActiveDirectoryAccessRule">
            <summary>Sets the shim of ActiveDirectorySecurity.AddAccessRule(ActiveDirectoryAccessRule rule)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectorySecurity.AddAuditRuleActiveDirectoryAuditRule">
            <summary>Sets the shim of ActiveDirectorySecurity.AddAuditRule(ActiveDirectoryAuditRule rule)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectorySecurity.AuditRuleFactoryIdentityReferenceInt32BooleanInheritanceFlagsPropagationFlagsAuditFlags">
            <summary>Sets the shim of ActiveDirectorySecurity.AuditRuleFactory(IdentityReference identityReference, Int32 accessMask, Boolean isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AuditFlags flags)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectorySecurity.AuditRuleFactoryIdentityReferenceInt32BooleanInheritanceFlagsPropagationFlagsAuditFlagsGuidGuid">
            <summary>Sets the shim of ActiveDirectorySecurity.AuditRuleFactory(IdentityReference identityReference, Int32 accessMask, Boolean isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AuditFlags flags, Guid objectGuid, Guid inheritedObjectGuid)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectorySecurity.AuditRuleTypeGet">
            <summary>Sets the shim of ActiveDirectorySecurity.get_AuditRuleType()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectorySecurity.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectorySecurity.Constructor">
            <summary>Sets the shim of ActiveDirectorySecurity.ActiveDirectorySecurity()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectorySecurity.ModifyAccessRuleAccessControlModificationAccessRuleBooleanOut">
            <summary>Sets the shim of ActiveDirectorySecurity.ModifyAccessRule(AccessControlModification modification, AccessRule rule, Boolean&amp; modified)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectorySecurity.ModifyAuditRuleAccessControlModificationAuditRuleBooleanOut">
            <summary>Sets the shim of ActiveDirectorySecurity.ModifyAuditRule(AccessControlModification modification, AuditRule rule, Boolean&amp; modified)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectorySecurity.PurgeAccessRulesIdentityReference">
            <summary>Sets the shim of ActiveDirectorySecurity.PurgeAccessRules(IdentityReference identity)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectorySecurity.PurgeAuditRulesIdentityReference">
            <summary>Sets the shim of ActiveDirectorySecurity.PurgeAuditRules(IdentityReference identity)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectorySecurity.RemoveAccessIdentityReferenceAccessControlType">
            <summary>Sets the shim of ActiveDirectorySecurity.RemoveAccess(IdentityReference identity, AccessControlType type)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectorySecurity.RemoveAccessRuleActiveDirectoryAccessRule">
            <summary>Sets the shim of ActiveDirectorySecurity.RemoveAccessRule(ActiveDirectoryAccessRule rule)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectorySecurity.RemoveAccessRuleSpecificActiveDirectoryAccessRule">
            <summary>Sets the shim of ActiveDirectorySecurity.RemoveAccessRuleSpecific(ActiveDirectoryAccessRule rule)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectorySecurity.RemoveAuditIdentityReference">
            <summary>Sets the shim of ActiveDirectorySecurity.RemoveAudit(IdentityReference identity)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectorySecurity.RemoveAuditRuleActiveDirectoryAuditRule">
            <summary>Sets the shim of ActiveDirectorySecurity.RemoveAuditRule(ActiveDirectoryAuditRule rule)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectorySecurity.RemoveAuditRuleSpecificActiveDirectoryAuditRule">
            <summary>Sets the shim of ActiveDirectorySecurity.RemoveAuditRuleSpecific(ActiveDirectoryAuditRule rule)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectorySecurity.ResetAccessRuleActiveDirectoryAccessRule">
            <summary>Sets the shim of ActiveDirectorySecurity.ResetAccessRule(ActiveDirectoryAccessRule rule)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectorySecurity.SetAccessRuleActiveDirectoryAccessRule">
            <summary>Sets the shim of ActiveDirectorySecurity.SetAccessRule(ActiveDirectoryAccessRule rule)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectorySecurity.SetAuditRuleActiveDirectoryAuditRule">
            <summary>Sets the shim of ActiveDirectorySecurity.SetAuditRule(ActiveDirectoryAuditRule rule)</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.ShimActiveDirectorySecurity.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectorySecurity.AllInstances.AccessRightTypeGet">
            <summary>Sets the shim of ActiveDirectorySecurity.get_AccessRightType()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectorySecurity.AllInstances.AccessRuleFactoryIdentityReferenceInt32BooleanInheritanceFlagsPropagationFlagsAccessControlType">
            <summary>Sets the shim of ActiveDirectorySecurity.AccessRuleFactory(IdentityReference identityReference, Int32 accessMask, Boolean isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AccessControlType type)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectorySecurity.AllInstances.AccessRuleFactoryIdentityReferenceInt32BooleanInheritanceFlagsPropagationFlagsAccessControlTypeGuidGuid">
            <summary>Sets the shim of ActiveDirectorySecurity.AccessRuleFactory(IdentityReference identityReference, Int32 accessMask, Boolean isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AccessControlType type, Guid objectGuid, Guid inheritedObjectGuid)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectorySecurity.AllInstances.AccessRuleTypeGet">
            <summary>Sets the shim of ActiveDirectorySecurity.get_AccessRuleType()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectorySecurity.AllInstances.AddAccessRuleActiveDirectoryAccessRule">
            <summary>Sets the shim of ActiveDirectorySecurity.AddAccessRule(ActiveDirectoryAccessRule rule)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectorySecurity.AllInstances.AddAuditRuleActiveDirectoryAuditRule">
            <summary>Sets the shim of ActiveDirectorySecurity.AddAuditRule(ActiveDirectoryAuditRule rule)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectorySecurity.AllInstances.AuditRuleFactoryIdentityReferenceInt32BooleanInheritanceFlagsPropagationFlagsAuditFlags">
            <summary>Sets the shim of ActiveDirectorySecurity.AuditRuleFactory(IdentityReference identityReference, Int32 accessMask, Boolean isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AuditFlags flags)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectorySecurity.AllInstances.AuditRuleFactoryIdentityReferenceInt32BooleanInheritanceFlagsPropagationFlagsAuditFlagsGuidGuid">
            <summary>Sets the shim of ActiveDirectorySecurity.AuditRuleFactory(IdentityReference identityReference, Int32 accessMask, Boolean isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AuditFlags flags, Guid objectGuid, Guid inheritedObjectGuid)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectorySecurity.AllInstances.AuditRuleTypeGet">
            <summary>Sets the shim of ActiveDirectorySecurity.get_AuditRuleType()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectorySecurity.AllInstances.ModifyAccessRuleAccessControlModificationAccessRuleBooleanOut">
            <summary>Sets the shim of ActiveDirectorySecurity.ModifyAccessRule(AccessControlModification modification, AccessRule rule, Boolean&amp; modified)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectorySecurity.AllInstances.ModifyAuditRuleAccessControlModificationAuditRuleBooleanOut">
            <summary>Sets the shim of ActiveDirectorySecurity.ModifyAuditRule(AccessControlModification modification, AuditRule rule, Boolean&amp; modified)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectorySecurity.AllInstances.PurgeAccessRulesIdentityReference">
            <summary>Sets the shim of ActiveDirectorySecurity.PurgeAccessRules(IdentityReference identity)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectorySecurity.AllInstances.PurgeAuditRulesIdentityReference">
            <summary>Sets the shim of ActiveDirectorySecurity.PurgeAuditRules(IdentityReference identity)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectorySecurity.AllInstances.RemoveAccessIdentityReferenceAccessControlType">
            <summary>Sets the shim of ActiveDirectorySecurity.RemoveAccess(IdentityReference identity, AccessControlType type)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectorySecurity.AllInstances.RemoveAccessRuleActiveDirectoryAccessRule">
            <summary>Sets the shim of ActiveDirectorySecurity.RemoveAccessRule(ActiveDirectoryAccessRule rule)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectorySecurity.AllInstances.RemoveAccessRuleSpecificActiveDirectoryAccessRule">
            <summary>Sets the shim of ActiveDirectorySecurity.RemoveAccessRuleSpecific(ActiveDirectoryAccessRule rule)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectorySecurity.AllInstances.RemoveAuditIdentityReference">
            <summary>Sets the shim of ActiveDirectorySecurity.RemoveAudit(IdentityReference identity)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectorySecurity.AllInstances.RemoveAuditRuleActiveDirectoryAuditRule">
            <summary>Sets the shim of ActiveDirectorySecurity.RemoveAuditRule(ActiveDirectoryAuditRule rule)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectorySecurity.AllInstances.RemoveAuditRuleSpecificActiveDirectoryAuditRule">
            <summary>Sets the shim of ActiveDirectorySecurity.RemoveAuditRuleSpecific(ActiveDirectoryAuditRule rule)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectorySecurity.AllInstances.ResetAccessRuleActiveDirectoryAccessRule">
            <summary>Sets the shim of ActiveDirectorySecurity.ResetAccessRule(ActiveDirectoryAccessRule rule)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectorySecurity.AllInstances.SetAccessRuleActiveDirectoryAccessRule">
            <summary>Sets the shim of ActiveDirectorySecurity.SetAccessRule(ActiveDirectoryAccessRule rule)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimActiveDirectorySecurity.AllInstances.SetAuditRuleActiveDirectoryAuditRule">
            <summary>Sets the shim of ActiveDirectorySecurity.SetAuditRule(ActiveDirectoryAuditRule rule)</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.ShimCreateChildAccessRule">
            <summary>Shim type of System.DirectoryServices.CreateChildAccessRule</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimCreateChildAccessRule.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimCreateChildAccessRule.#ctor(System.DirectoryServices.CreateChildAccessRule)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimCreateChildAccessRule.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimCreateChildAccessRule.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimCreateChildAccessRule.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimCreateChildAccessRule.ConstructorIdentityReferenceAccessControlType">
            <summary>Sets the shim of CreateChildAccessRule.CreateChildAccessRule(IdentityReference identity, AccessControlType type)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimCreateChildAccessRule.ConstructorIdentityReferenceAccessControlTypeActiveDirectorySecurityInheritance">
            <summary>Sets the shim of CreateChildAccessRule.CreateChildAccessRule(IdentityReference identity, AccessControlType type, ActiveDirectorySecurityInheritance inheritanceType)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimCreateChildAccessRule.ConstructorIdentityReferenceAccessControlTypeActiveDirectorySecurityInheritanceGuid">
            <summary>Sets the shim of CreateChildAccessRule.CreateChildAccessRule(IdentityReference identity, AccessControlType type, ActiveDirectorySecurityInheritance inheritanceType, Guid inheritedObjectType)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimCreateChildAccessRule.ConstructorIdentityReferenceAccessControlTypeGuid">
            <summary>Sets the shim of CreateChildAccessRule.CreateChildAccessRule(IdentityReference identity, AccessControlType type, Guid childType)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimCreateChildAccessRule.ConstructorIdentityReferenceAccessControlTypeGuidActiveDirectorySecurityInheritance">
            <summary>Sets the shim of CreateChildAccessRule.CreateChildAccessRule(IdentityReference identity, AccessControlType type, Guid childType, ActiveDirectorySecurityInheritance inheritanceType)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimCreateChildAccessRule.ConstructorIdentityReferenceAccessControlTypeGuidActiveDirectorySecurityInheritanceGuid">
            <summary>Sets the shim of CreateChildAccessRule.CreateChildAccessRule(IdentityReference identity, AccessControlType type, Guid childType, ActiveDirectorySecurityInheritance inheritanceType, Guid inheritedObjectType)</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.ShimCreateChildAccessRule.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.ShimDSDescriptionAttribute">
            <summary>Shim type of System.DirectoryServices.DSDescriptionAttribute</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDSDescriptionAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDSDescriptionAttribute.#ctor(System.DirectoryServices.DSDescriptionAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDSDescriptionAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDSDescriptionAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDSDescriptionAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDSDescriptionAttribute.ConstructorString">
            <summary>Sets the shim of DSDescriptionAttribute.DSDescriptionAttribute(String description)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDSDescriptionAttribute.DescriptionGet">
            <summary>Sets the shim of DSDescriptionAttribute.get_Description()</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.ShimDSDescriptionAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDSDescriptionAttribute.AllInstances.DescriptionGet">
            <summary>Sets the shim of DSDescriptionAttribute.get_Description()</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.ShimDeleteChildAccessRule">
            <summary>Shim type of System.DirectoryServices.DeleteChildAccessRule</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDeleteChildAccessRule.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDeleteChildAccessRule.#ctor(System.DirectoryServices.DeleteChildAccessRule)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDeleteChildAccessRule.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDeleteChildAccessRule.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDeleteChildAccessRule.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDeleteChildAccessRule.ConstructorIdentityReferenceAccessControlType">
            <summary>Sets the shim of DeleteChildAccessRule.DeleteChildAccessRule(IdentityReference identity, AccessControlType type)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDeleteChildAccessRule.ConstructorIdentityReferenceAccessControlTypeActiveDirectorySecurityInheritance">
            <summary>Sets the shim of DeleteChildAccessRule.DeleteChildAccessRule(IdentityReference identity, AccessControlType type, ActiveDirectorySecurityInheritance inheritanceType)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDeleteChildAccessRule.ConstructorIdentityReferenceAccessControlTypeActiveDirectorySecurityInheritanceGuid">
            <summary>Sets the shim of DeleteChildAccessRule.DeleteChildAccessRule(IdentityReference identity, AccessControlType type, ActiveDirectorySecurityInheritance inheritanceType, Guid inheritedObjectType)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDeleteChildAccessRule.ConstructorIdentityReferenceAccessControlTypeGuid">
            <summary>Sets the shim of DeleteChildAccessRule.DeleteChildAccessRule(IdentityReference identity, AccessControlType type, Guid childType)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDeleteChildAccessRule.ConstructorIdentityReferenceAccessControlTypeGuidActiveDirectorySecurityInheritance">
            <summary>Sets the shim of DeleteChildAccessRule.DeleteChildAccessRule(IdentityReference identity, AccessControlType type, Guid childType, ActiveDirectorySecurityInheritance inheritanceType)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDeleteChildAccessRule.ConstructorIdentityReferenceAccessControlTypeGuidActiveDirectorySecurityInheritanceGuid">
            <summary>Sets the shim of DeleteChildAccessRule.DeleteChildAccessRule(IdentityReference identity, AccessControlType type, Guid childType, ActiveDirectorySecurityInheritance inheritanceType, Guid inheritedObjectType)</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.ShimDeleteChildAccessRule.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.ShimDeleteTreeAccessRule">
            <summary>Shim type of System.DirectoryServices.DeleteTreeAccessRule</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDeleteTreeAccessRule.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDeleteTreeAccessRule.#ctor(System.DirectoryServices.DeleteTreeAccessRule)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDeleteTreeAccessRule.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDeleteTreeAccessRule.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDeleteTreeAccessRule.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDeleteTreeAccessRule.ConstructorIdentityReferenceAccessControlType">
            <summary>Sets the shim of DeleteTreeAccessRule.DeleteTreeAccessRule(IdentityReference identity, AccessControlType type)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDeleteTreeAccessRule.ConstructorIdentityReferenceAccessControlTypeActiveDirectorySecurityInheritance">
            <summary>Sets the shim of DeleteTreeAccessRule.DeleteTreeAccessRule(IdentityReference identity, AccessControlType type, ActiveDirectorySecurityInheritance inheritanceType)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDeleteTreeAccessRule.ConstructorIdentityReferenceAccessControlTypeActiveDirectorySecurityInheritanceGuid">
            <summary>Sets the shim of DeleteTreeAccessRule.DeleteTreeAccessRule(IdentityReference identity, AccessControlType type, ActiveDirectorySecurityInheritance inheritanceType, Guid inheritedObjectType)</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.ShimDeleteTreeAccessRule.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.ShimDirectoryEntries">
            <summary>Shim type of System.DirectoryServices.DirectoryEntries</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDirectoryEntries.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDirectoryEntries.#ctor(System.DirectoryServices.DirectoryEntries)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDirectoryEntries.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDirectoryEntries.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDirectoryEntries.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntries.AddStringString">
            <summary>Sets the shim of DirectoryEntries.Add(String name, String schemaClassName)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntries.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntries.Constructor">
            <summary>Sets the shim of DirectoryEntries.DirectoryEntries()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntries.FindString">
            <summary>Sets the shim of DirectoryEntries.Find(String name)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntries.FindStringString">
            <summary>Sets the shim of DirectoryEntries.Find(String name, String schemaClassName)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntries.GetEnumerator">
            <summary>Sets the shim of DirectoryEntries.GetEnumerator()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntries.RemoveDirectoryEntry">
            <summary>Sets the shim of DirectoryEntries.Remove(DirectoryEntry entry)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntries.SchemaFilterGet">
            <summary>Sets the shim of DirectoryEntries.get_SchemaFilter()</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.ShimDirectoryEntries.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntries.AllInstances.AddStringString">
            <summary>Sets the shim of DirectoryEntries.Add(String name, String schemaClassName)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntries.AllInstances.Constructor">
            <summary>Sets the shim of DirectoryEntries.DirectoryEntries()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntries.AllInstances.FindString">
            <summary>Sets the shim of DirectoryEntries.Find(String name)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntries.AllInstances.FindStringString">
            <summary>Sets the shim of DirectoryEntries.Find(String name, String schemaClassName)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntries.AllInstances.GetEnumerator">
            <summary>Sets the shim of DirectoryEntries.GetEnumerator()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntries.AllInstances.RemoveDirectoryEntry">
            <summary>Sets the shim of DirectoryEntries.Remove(DirectoryEntry entry)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntries.AllInstances.SchemaFilterGet">
            <summary>Sets the shim of DirectoryEntries.get_SchemaFilter()</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.ShimDirectoryEntry">
            <summary>Shim type of System.DirectoryServices.DirectoryEntry</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDirectoryEntry.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDirectoryEntry.#ctor(System.DirectoryServices.DirectoryEntry)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDirectoryEntry.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDirectoryEntry.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDirectoryEntry.Bind(System.ComponentModel.IComponent)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDirectoryEntry.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.AuthenticationTypeGet">
            <summary>Sets the shim of DirectoryEntry.get_AuthenticationType()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.AuthenticationTypeSetAuthenticationTypes">
            <summary>Sets the shim of DirectoryEntry.set_AuthenticationType(AuthenticationTypes value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.ChildrenGet">
            <summary>Sets the shim of DirectoryEntry.get_Children()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.Close">
            <summary>Sets the shim of DirectoryEntry.Close()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.CommitChanges">
            <summary>Sets the shim of DirectoryEntry.CommitChanges()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.Constructor">
            <summary>Sets the shim of DirectoryEntry.DirectoryEntry()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.ConstructorObject">
            <summary>Sets the shim of DirectoryEntry.DirectoryEntry(Object adsObject)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.ConstructorString">
            <summary>Sets the shim of DirectoryEntry.DirectoryEntry(String path)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.ConstructorStringStringString">
            <summary>Sets the shim of DirectoryEntry.DirectoryEntry(String path, String username, String password)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.ConstructorStringStringStringAuthenticationTypes">
            <summary>Sets the shim of DirectoryEntry.DirectoryEntry(String path, String username, String password, AuthenticationTypes authenticationType)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.CopyToDirectoryEntry">
            <summary>Sets the shim of DirectoryEntry.CopyTo(DirectoryEntry newParent)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.CopyToDirectoryEntryString">
            <summary>Sets the shim of DirectoryEntry.CopyTo(DirectoryEntry newParent, String newName)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.DeleteTree">
            <summary>Sets the shim of DirectoryEntry.DeleteTree()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.DisposeBoolean">
            <summary>Sets the shim of DirectoryEntry.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.ExistsString">
            <summary>Sets the shim of DirectoryEntry.Exists(String path)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.GuidGet">
            <summary>Sets the shim of DirectoryEntry.get_Guid()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.InvokeGetString">
            <summary>Sets the shim of DirectoryEntry.InvokeGet(String propertyName)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.InvokeSetStringObjectArray">
            <summary>Sets the shim of DirectoryEntry.InvokeSet(String propertyName, Object[] args)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.InvokeStringObjectArray">
            <summary>Sets the shim of DirectoryEntry.Invoke(String methodName, Object[] args)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.MoveToDirectoryEntry">
            <summary>Sets the shim of DirectoryEntry.MoveTo(DirectoryEntry newParent)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.MoveToDirectoryEntryString">
            <summary>Sets the shim of DirectoryEntry.MoveTo(DirectoryEntry newParent, String newName)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.NameGet">
            <summary>Sets the shim of DirectoryEntry.get_Name()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.NativeGuidGet">
            <summary>Sets the shim of DirectoryEntry.get_NativeGuid()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.NativeObjectGet">
            <summary>Sets the shim of DirectoryEntry.get_NativeObject()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.ObjectSecurityGet">
            <summary>Sets the shim of DirectoryEntry.get_ObjectSecurity()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.ObjectSecuritySetActiveDirectorySecurity">
            <summary>Sets the shim of DirectoryEntry.set_ObjectSecurity(ActiveDirectorySecurity value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.OptionsGet">
            <summary>Sets the shim of DirectoryEntry.get_Options()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.ParentGet">
            <summary>Sets the shim of DirectoryEntry.get_Parent()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.PasswordSetString">
            <summary>Sets the shim of DirectoryEntry.set_Password(String value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.PathGet">
            <summary>Sets the shim of DirectoryEntry.get_Path()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.PathSetString">
            <summary>Sets the shim of DirectoryEntry.set_Path(String value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.PropertiesGet">
            <summary>Sets the shim of DirectoryEntry.get_Properties()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.RefreshCache">
            <summary>Sets the shim of DirectoryEntry.RefreshCache()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.RefreshCacheStringArray">
            <summary>Sets the shim of DirectoryEntry.RefreshCache(String[] propertyNames)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.RenameString">
            <summary>Sets the shim of DirectoryEntry.Rename(String newName)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.SchemaClassNameGet">
            <summary>Sets the shim of DirectoryEntry.get_SchemaClassName()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.SchemaEntryGet">
            <summary>Sets the shim of DirectoryEntry.get_SchemaEntry()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.StaticConstructor">
            <summary>Sets the shim of DirectoryEntry.DirectoryEntry()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.UsePropertyCacheGet">
            <summary>Sets the shim of DirectoryEntry.get_UsePropertyCache()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.UsePropertyCacheSetBoolean">
            <summary>Sets the shim of DirectoryEntry.set_UsePropertyCache(Boolean value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.UsernameGet">
            <summary>Sets the shim of DirectoryEntry.get_Username()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.UsernameSetString">
            <summary>Sets the shim of DirectoryEntry.set_Username(String value)</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.ShimDirectoryEntry.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.AllInstances.AuthenticationTypeGet">
            <summary>Sets the shim of DirectoryEntry.get_AuthenticationType()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.AllInstances.AuthenticationTypeSetAuthenticationTypes">
            <summary>Sets the shim of DirectoryEntry.set_AuthenticationType(AuthenticationTypes value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.AllInstances.ChildrenGet">
            <summary>Sets the shim of DirectoryEntry.get_Children()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.AllInstances.Close">
            <summary>Sets the shim of DirectoryEntry.Close()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.AllInstances.CommitChanges">
            <summary>Sets the shim of DirectoryEntry.CommitChanges()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.AllInstances.CopyToDirectoryEntry">
            <summary>Sets the shim of DirectoryEntry.CopyTo(DirectoryEntry newParent)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.AllInstances.CopyToDirectoryEntryString">
            <summary>Sets the shim of DirectoryEntry.CopyTo(DirectoryEntry newParent, String newName)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.AllInstances.DeleteTree">
            <summary>Sets the shim of DirectoryEntry.DeleteTree()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.AllInstances.DisposeBoolean">
            <summary>Sets the shim of DirectoryEntry.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.AllInstances.GuidGet">
            <summary>Sets the shim of DirectoryEntry.get_Guid()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.AllInstances.InvokeGetString">
            <summary>Sets the shim of DirectoryEntry.InvokeGet(String propertyName)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.AllInstances.InvokeSetStringObjectArray">
            <summary>Sets the shim of DirectoryEntry.InvokeSet(String propertyName, Object[] args)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.AllInstances.InvokeStringObjectArray">
            <summary>Sets the shim of DirectoryEntry.Invoke(String methodName, Object[] args)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.AllInstances.MoveToDirectoryEntry">
            <summary>Sets the shim of DirectoryEntry.MoveTo(DirectoryEntry newParent)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.AllInstances.MoveToDirectoryEntryString">
            <summary>Sets the shim of DirectoryEntry.MoveTo(DirectoryEntry newParent, String newName)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.AllInstances.NameGet">
            <summary>Sets the shim of DirectoryEntry.get_Name()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.AllInstances.NativeGuidGet">
            <summary>Sets the shim of DirectoryEntry.get_NativeGuid()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.AllInstances.NativeObjectGet">
            <summary>Sets the shim of DirectoryEntry.get_NativeObject()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.AllInstances.ObjectSecurityGet">
            <summary>Sets the shim of DirectoryEntry.get_ObjectSecurity()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.AllInstances.ObjectSecuritySetActiveDirectorySecurity">
            <summary>Sets the shim of DirectoryEntry.set_ObjectSecurity(ActiveDirectorySecurity value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.AllInstances.OptionsGet">
            <summary>Sets the shim of DirectoryEntry.get_Options()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.AllInstances.ParentGet">
            <summary>Sets the shim of DirectoryEntry.get_Parent()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.AllInstances.PasswordSetString">
            <summary>Sets the shim of DirectoryEntry.set_Password(String value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.AllInstances.PathGet">
            <summary>Sets the shim of DirectoryEntry.get_Path()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.AllInstances.PathSetString">
            <summary>Sets the shim of DirectoryEntry.set_Path(String value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.AllInstances.PropertiesGet">
            <summary>Sets the shim of DirectoryEntry.get_Properties()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.AllInstances.RefreshCache">
            <summary>Sets the shim of DirectoryEntry.RefreshCache()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.AllInstances.RefreshCacheStringArray">
            <summary>Sets the shim of DirectoryEntry.RefreshCache(String[] propertyNames)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.AllInstances.RenameString">
            <summary>Sets the shim of DirectoryEntry.Rename(String newName)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.AllInstances.SchemaClassNameGet">
            <summary>Sets the shim of DirectoryEntry.get_SchemaClassName()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.AllInstances.SchemaEntryGet">
            <summary>Sets the shim of DirectoryEntry.get_SchemaEntry()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.AllInstances.UsePropertyCacheGet">
            <summary>Sets the shim of DirectoryEntry.get_UsePropertyCache()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.AllInstances.UsePropertyCacheSetBoolean">
            <summary>Sets the shim of DirectoryEntry.set_UsePropertyCache(Boolean value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.AllInstances.UsernameGet">
            <summary>Sets the shim of DirectoryEntry.get_Username()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntry.AllInstances.UsernameSetString">
            <summary>Sets the shim of DirectoryEntry.set_Username(String value)</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.ShimDirectoryEntryConfiguration">
            <summary>Shim type of System.DirectoryServices.DirectoryEntryConfiguration</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDirectoryEntryConfiguration.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDirectoryEntryConfiguration.#ctor(System.DirectoryServices.DirectoryEntryConfiguration)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDirectoryEntryConfiguration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDirectoryEntryConfiguration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntryConfiguration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntryConfiguration.Constructor">
            <summary>Sets the shim of DirectoryEntryConfiguration.DirectoryEntryConfiguration()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntryConfiguration.GetCurrentServerName">
            <summary>Sets the shim of DirectoryEntryConfiguration.GetCurrentServerName()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntryConfiguration.IsMutuallyAuthenticated">
            <summary>Sets the shim of DirectoryEntryConfiguration.IsMutuallyAuthenticated()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntryConfiguration.PageSizeGet">
            <summary>Sets the shim of DirectoryEntryConfiguration.get_PageSize()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntryConfiguration.PageSizeSetInt32">
            <summary>Sets the shim of DirectoryEntryConfiguration.set_PageSize(Int32 value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntryConfiguration.PasswordEncodingGet">
            <summary>Sets the shim of DirectoryEntryConfiguration.get_PasswordEncoding()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntryConfiguration.PasswordEncodingSetPasswordEncodingMethod">
            <summary>Sets the shim of DirectoryEntryConfiguration.set_PasswordEncoding(PasswordEncodingMethod value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntryConfiguration.PasswordPortGet">
            <summary>Sets the shim of DirectoryEntryConfiguration.get_PasswordPort()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntryConfiguration.PasswordPortSetInt32">
            <summary>Sets the shim of DirectoryEntryConfiguration.set_PasswordPort(Int32 value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntryConfiguration.ReferralGet">
            <summary>Sets the shim of DirectoryEntryConfiguration.get_Referral()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntryConfiguration.ReferralSetReferralChasingOption">
            <summary>Sets the shim of DirectoryEntryConfiguration.set_Referral(ReferralChasingOption value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntryConfiguration.SecurityMasksGet">
            <summary>Sets the shim of DirectoryEntryConfiguration.get_SecurityMasks()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntryConfiguration.SecurityMasksSetSecurityMasks">
            <summary>Sets the shim of DirectoryEntryConfiguration.set_SecurityMasks(SecurityMasks value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntryConfiguration.SetUserNameQueryQuotaString">
            <summary>Sets the shim of DirectoryEntryConfiguration.SetUserNameQueryQuota(String accountName)</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.ShimDirectoryEntryConfiguration.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntryConfiguration.AllInstances.Constructor">
            <summary>Sets the shim of DirectoryEntryConfiguration.DirectoryEntryConfiguration()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntryConfiguration.AllInstances.GetCurrentServerName">
            <summary>Sets the shim of DirectoryEntryConfiguration.GetCurrentServerName()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntryConfiguration.AllInstances.IsMutuallyAuthenticated">
            <summary>Sets the shim of DirectoryEntryConfiguration.IsMutuallyAuthenticated()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntryConfiguration.AllInstances.PageSizeGet">
            <summary>Sets the shim of DirectoryEntryConfiguration.get_PageSize()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntryConfiguration.AllInstances.PageSizeSetInt32">
            <summary>Sets the shim of DirectoryEntryConfiguration.set_PageSize(Int32 value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntryConfiguration.AllInstances.PasswordEncodingGet">
            <summary>Sets the shim of DirectoryEntryConfiguration.get_PasswordEncoding()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntryConfiguration.AllInstances.PasswordEncodingSetPasswordEncodingMethod">
            <summary>Sets the shim of DirectoryEntryConfiguration.set_PasswordEncoding(PasswordEncodingMethod value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntryConfiguration.AllInstances.PasswordPortGet">
            <summary>Sets the shim of DirectoryEntryConfiguration.get_PasswordPort()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntryConfiguration.AllInstances.PasswordPortSetInt32">
            <summary>Sets the shim of DirectoryEntryConfiguration.set_PasswordPort(Int32 value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntryConfiguration.AllInstances.ReferralGet">
            <summary>Sets the shim of DirectoryEntryConfiguration.get_Referral()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntryConfiguration.AllInstances.ReferralSetReferralChasingOption">
            <summary>Sets the shim of DirectoryEntryConfiguration.set_Referral(ReferralChasingOption value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntryConfiguration.AllInstances.SecurityMasksGet">
            <summary>Sets the shim of DirectoryEntryConfiguration.get_SecurityMasks()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntryConfiguration.AllInstances.SecurityMasksSetSecurityMasks">
            <summary>Sets the shim of DirectoryEntryConfiguration.set_SecurityMasks(SecurityMasks value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryEntryConfiguration.AllInstances.SetUserNameQueryQuotaString">
            <summary>Sets the shim of DirectoryEntryConfiguration.SetUserNameQueryQuota(String accountName)</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.ShimDirectorySearcher">
            <summary>Shim type of System.DirectoryServices.DirectorySearcher</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDirectorySearcher.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDirectorySearcher.#ctor(System.DirectoryServices.DirectorySearcher)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDirectorySearcher.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDirectorySearcher.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDirectorySearcher.Bind(System.ComponentModel.IComponent)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDirectorySearcher.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.AsynchronousGet">
            <summary>Sets the shim of DirectorySearcher.get_Asynchronous()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.AsynchronousSetBoolean">
            <summary>Sets the shim of DirectorySearcher.set_Asynchronous(Boolean value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.AttributeScopeQueryGet">
            <summary>Sets the shim of DirectorySearcher.get_AttributeScopeQuery()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.AttributeScopeQuerySetString">
            <summary>Sets the shim of DirectorySearcher.set_AttributeScopeQuery(String value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.CacheResultsGet">
            <summary>Sets the shim of DirectorySearcher.get_CacheResults()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.CacheResultsSetBoolean">
            <summary>Sets the shim of DirectorySearcher.set_CacheResults(Boolean value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.ClientTimeoutGet">
            <summary>Sets the shim of DirectorySearcher.get_ClientTimeout()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.ClientTimeoutSetTimeSpan">
            <summary>Sets the shim of DirectorySearcher.set_ClientTimeout(TimeSpan value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.Constructor">
            <summary>Sets the shim of DirectorySearcher.DirectorySearcher()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.ConstructorDirectoryEntry">
            <summary>Sets the shim of DirectorySearcher.DirectorySearcher(DirectoryEntry searchRoot)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.ConstructorDirectoryEntryString">
            <summary>Sets the shim of DirectorySearcher.DirectorySearcher(DirectoryEntry searchRoot, String filter)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.ConstructorDirectoryEntryStringStringArray">
            <summary>Sets the shim of DirectorySearcher.DirectorySearcher(DirectoryEntry searchRoot, String filter, String[] propertiesToLoad)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.ConstructorDirectoryEntryStringStringArraySearchScope">
            <summary>Sets the shim of DirectorySearcher.DirectorySearcher(DirectoryEntry searchRoot, String filter, String[] propertiesToLoad, SearchScope scope)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.ConstructorString">
            <summary>Sets the shim of DirectorySearcher.DirectorySearcher(String filter)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.ConstructorStringStringArray">
            <summary>Sets the shim of DirectorySearcher.DirectorySearcher(String filter, String[] propertiesToLoad)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.ConstructorStringStringArraySearchScope">
            <summary>Sets the shim of DirectorySearcher.DirectorySearcher(String filter, String[] propertiesToLoad, SearchScope scope)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.DerefAliasGet">
            <summary>Sets the shim of DirectorySearcher.get_DerefAlias()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.DerefAliasSetDereferenceAlias">
            <summary>Sets the shim of DirectorySearcher.set_DerefAlias(DereferenceAlias value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.DirectorySynchronizationGet">
            <summary>Sets the shim of DirectorySearcher.get_DirectorySynchronization()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.DirectorySynchronizationSetDirectorySynchronization">
            <summary>Sets the shim of DirectorySearcher.set_DirectorySynchronization(DirectorySynchronization value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.DisposeBoolean">
            <summary>Sets the shim of DirectorySearcher.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.ExtendedDNGet">
            <summary>Sets the shim of DirectorySearcher.get_ExtendedDN()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.ExtendedDNSetExtendedDN">
            <summary>Sets the shim of DirectorySearcher.set_ExtendedDN(ExtendedDN value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.FilterGet">
            <summary>Sets the shim of DirectorySearcher.get_Filter()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.FilterSetString">
            <summary>Sets the shim of DirectorySearcher.set_Filter(String value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.FindAll">
            <summary>Sets the shim of DirectorySearcher.FindAll()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.FindOne">
            <summary>Sets the shim of DirectorySearcher.FindOne()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.PageSizeGet">
            <summary>Sets the shim of DirectorySearcher.get_PageSize()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.PageSizeSetInt32">
            <summary>Sets the shim of DirectorySearcher.set_PageSize(Int32 value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.PropertiesToLoadGet">
            <summary>Sets the shim of DirectorySearcher.get_PropertiesToLoad()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.PropertyNamesOnlyGet">
            <summary>Sets the shim of DirectorySearcher.get_PropertyNamesOnly()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.PropertyNamesOnlySetBoolean">
            <summary>Sets the shim of DirectorySearcher.set_PropertyNamesOnly(Boolean value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.ReferralChasingGet">
            <summary>Sets the shim of DirectorySearcher.get_ReferralChasing()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.ReferralChasingSetReferralChasingOption">
            <summary>Sets the shim of DirectorySearcher.set_ReferralChasing(ReferralChasingOption value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.SearchRootGet">
            <summary>Sets the shim of DirectorySearcher.get_SearchRoot()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.SearchRootSetDirectoryEntry">
            <summary>Sets the shim of DirectorySearcher.set_SearchRoot(DirectoryEntry value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.SearchScopeGet">
            <summary>Sets the shim of DirectorySearcher.get_SearchScope()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.SearchScopeSetSearchScope">
            <summary>Sets the shim of DirectorySearcher.set_SearchScope(SearchScope value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.SecurityMasksGet">
            <summary>Sets the shim of DirectorySearcher.get_SecurityMasks()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.SecurityMasksSetSecurityMasks">
            <summary>Sets the shim of DirectorySearcher.set_SecurityMasks(SecurityMasks value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.ServerPageTimeLimitGet">
            <summary>Sets the shim of DirectorySearcher.get_ServerPageTimeLimit()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.ServerPageTimeLimitSetTimeSpan">
            <summary>Sets the shim of DirectorySearcher.set_ServerPageTimeLimit(TimeSpan value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.ServerTimeLimitGet">
            <summary>Sets the shim of DirectorySearcher.get_ServerTimeLimit()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.ServerTimeLimitSetTimeSpan">
            <summary>Sets the shim of DirectorySearcher.set_ServerTimeLimit(TimeSpan value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.SizeLimitGet">
            <summary>Sets the shim of DirectorySearcher.get_SizeLimit()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.SizeLimitSetInt32">
            <summary>Sets the shim of DirectorySearcher.set_SizeLimit(Int32 value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.SortGet">
            <summary>Sets the shim of DirectorySearcher.get_Sort()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.SortSetSortOption">
            <summary>Sets the shim of DirectorySearcher.set_Sort(SortOption value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.StaticConstructor">
            <summary>Sets the shim of DirectorySearcher.DirectorySearcher()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.TombstoneGet">
            <summary>Sets the shim of DirectorySearcher.get_Tombstone()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.TombstoneSetBoolean">
            <summary>Sets the shim of DirectorySearcher.set_Tombstone(Boolean value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.VirtualListViewGet">
            <summary>Sets the shim of DirectorySearcher.get_VirtualListView()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.VirtualListViewSetDirectoryVirtualListView">
            <summary>Sets the shim of DirectorySearcher.set_VirtualListView(DirectoryVirtualListView value)</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.ShimDirectorySearcher.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.AllInstances.AsynchronousGet">
            <summary>Sets the shim of DirectorySearcher.get_Asynchronous()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.AllInstances.AsynchronousSetBoolean">
            <summary>Sets the shim of DirectorySearcher.set_Asynchronous(Boolean value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.AllInstances.AttributeScopeQueryGet">
            <summary>Sets the shim of DirectorySearcher.get_AttributeScopeQuery()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.AllInstances.AttributeScopeQuerySetString">
            <summary>Sets the shim of DirectorySearcher.set_AttributeScopeQuery(String value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.AllInstances.CacheResultsGet">
            <summary>Sets the shim of DirectorySearcher.get_CacheResults()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.AllInstances.CacheResultsSetBoolean">
            <summary>Sets the shim of DirectorySearcher.set_CacheResults(Boolean value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.AllInstances.ClientTimeoutGet">
            <summary>Sets the shim of DirectorySearcher.get_ClientTimeout()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.AllInstances.ClientTimeoutSetTimeSpan">
            <summary>Sets the shim of DirectorySearcher.set_ClientTimeout(TimeSpan value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.AllInstances.DerefAliasGet">
            <summary>Sets the shim of DirectorySearcher.get_DerefAlias()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.AllInstances.DerefAliasSetDereferenceAlias">
            <summary>Sets the shim of DirectorySearcher.set_DerefAlias(DereferenceAlias value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.AllInstances.DirectorySynchronizationGet">
            <summary>Sets the shim of DirectorySearcher.get_DirectorySynchronization()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.AllInstances.DirectorySynchronizationSetDirectorySynchronization">
            <summary>Sets the shim of DirectorySearcher.set_DirectorySynchronization(DirectorySynchronization value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.AllInstances.DisposeBoolean">
            <summary>Sets the shim of DirectorySearcher.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.AllInstances.ExtendedDNGet">
            <summary>Sets the shim of DirectorySearcher.get_ExtendedDN()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.AllInstances.ExtendedDNSetExtendedDN">
            <summary>Sets the shim of DirectorySearcher.set_ExtendedDN(ExtendedDN value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.AllInstances.FilterGet">
            <summary>Sets the shim of DirectorySearcher.get_Filter()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.AllInstances.FilterSetString">
            <summary>Sets the shim of DirectorySearcher.set_Filter(String value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.AllInstances.FindAll">
            <summary>Sets the shim of DirectorySearcher.FindAll()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.AllInstances.FindOne">
            <summary>Sets the shim of DirectorySearcher.FindOne()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.AllInstances.PageSizeGet">
            <summary>Sets the shim of DirectorySearcher.get_PageSize()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.AllInstances.PageSizeSetInt32">
            <summary>Sets the shim of DirectorySearcher.set_PageSize(Int32 value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.AllInstances.PropertiesToLoadGet">
            <summary>Sets the shim of DirectorySearcher.get_PropertiesToLoad()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.AllInstances.PropertyNamesOnlyGet">
            <summary>Sets the shim of DirectorySearcher.get_PropertyNamesOnly()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.AllInstances.PropertyNamesOnlySetBoolean">
            <summary>Sets the shim of DirectorySearcher.set_PropertyNamesOnly(Boolean value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.AllInstances.ReferralChasingGet">
            <summary>Sets the shim of DirectorySearcher.get_ReferralChasing()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.AllInstances.ReferralChasingSetReferralChasingOption">
            <summary>Sets the shim of DirectorySearcher.set_ReferralChasing(ReferralChasingOption value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.AllInstances.SearchRootGet">
            <summary>Sets the shim of DirectorySearcher.get_SearchRoot()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.AllInstances.SearchRootSetDirectoryEntry">
            <summary>Sets the shim of DirectorySearcher.set_SearchRoot(DirectoryEntry value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.AllInstances.SearchScopeGet">
            <summary>Sets the shim of DirectorySearcher.get_SearchScope()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.AllInstances.SearchScopeSetSearchScope">
            <summary>Sets the shim of DirectorySearcher.set_SearchScope(SearchScope value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.AllInstances.SecurityMasksGet">
            <summary>Sets the shim of DirectorySearcher.get_SecurityMasks()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.AllInstances.SecurityMasksSetSecurityMasks">
            <summary>Sets the shim of DirectorySearcher.set_SecurityMasks(SecurityMasks value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.AllInstances.ServerPageTimeLimitGet">
            <summary>Sets the shim of DirectorySearcher.get_ServerPageTimeLimit()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.AllInstances.ServerPageTimeLimitSetTimeSpan">
            <summary>Sets the shim of DirectorySearcher.set_ServerPageTimeLimit(TimeSpan value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.AllInstances.ServerTimeLimitGet">
            <summary>Sets the shim of DirectorySearcher.get_ServerTimeLimit()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.AllInstances.ServerTimeLimitSetTimeSpan">
            <summary>Sets the shim of DirectorySearcher.set_ServerTimeLimit(TimeSpan value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.AllInstances.SizeLimitGet">
            <summary>Sets the shim of DirectorySearcher.get_SizeLimit()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.AllInstances.SizeLimitSetInt32">
            <summary>Sets the shim of DirectorySearcher.set_SizeLimit(Int32 value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.AllInstances.SortGet">
            <summary>Sets the shim of DirectorySearcher.get_Sort()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.AllInstances.SortSetSortOption">
            <summary>Sets the shim of DirectorySearcher.set_Sort(SortOption value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.AllInstances.TombstoneGet">
            <summary>Sets the shim of DirectorySearcher.get_Tombstone()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.AllInstances.TombstoneSetBoolean">
            <summary>Sets the shim of DirectorySearcher.set_Tombstone(Boolean value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.AllInstances.VirtualListViewGet">
            <summary>Sets the shim of DirectorySearcher.get_VirtualListView()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySearcher.AllInstances.VirtualListViewSetDirectoryVirtualListView">
            <summary>Sets the shim of DirectorySearcher.set_VirtualListView(DirectoryVirtualListView value)</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.ShimDirectoryServicesCOMException">
            <summary>Shim type of System.DirectoryServices.DirectoryServicesCOMException</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDirectoryServicesCOMException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDirectoryServicesCOMException.#ctor(System.DirectoryServices.DirectoryServicesCOMException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDirectoryServicesCOMException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDirectoryServicesCOMException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDirectoryServicesCOMException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesCOMException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesCOMException.Constructor">
            <summary>Sets the shim of DirectoryServicesCOMException.DirectoryServicesCOMException()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesCOMException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of DirectoryServicesCOMException.DirectoryServicesCOMException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesCOMException.ConstructorString">
            <summary>Sets the shim of DirectoryServicesCOMException.DirectoryServicesCOMException(String message)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesCOMException.ConstructorStringException">
            <summary>Sets the shim of DirectoryServicesCOMException.DirectoryServicesCOMException(String message, Exception inner)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesCOMException.ExtendedErrorGet">
            <summary>Sets the shim of DirectoryServicesCOMException.get_ExtendedError()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesCOMException.ExtendedErrorMessageGet">
            <summary>Sets the shim of DirectoryServicesCOMException.get_ExtendedErrorMessage()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesCOMException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of DirectoryServicesCOMException.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.ShimDirectoryServicesCOMException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesCOMException.AllInstances.ExtendedErrorGet">
            <summary>Sets the shim of DirectoryServicesCOMException.get_ExtendedError()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesCOMException.AllInstances.ExtendedErrorMessageGet">
            <summary>Sets the shim of DirectoryServicesCOMException.get_ExtendedErrorMessage()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesCOMException.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of DirectoryServicesCOMException.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.ShimDirectoryServicesPermission">
            <summary>Shim type of System.DirectoryServices.DirectoryServicesPermission</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDirectoryServicesPermission.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDirectoryServicesPermission.#ctor(System.DirectoryServices.DirectoryServicesPermission)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDirectoryServicesPermission.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDirectoryServicesPermission.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDirectoryServicesPermission.Bind(System.Security.IPermission)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDirectoryServicesPermission.Bind(System.Security.ISecurityEncodable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDirectoryServicesPermission.Bind(System.Security.IStackWalk)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDirectoryServicesPermission.Bind(System.Security.Permissions.IUnrestrictedPermission)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesPermission.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesPermission.Clear">
            <summary>Sets the shim of DirectoryServicesPermission.Clear()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesPermission.Constructor">
            <summary>Sets the shim of DirectoryServicesPermission.DirectoryServicesPermission()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesPermission.ConstructorDirectoryServicesPermissionAccessString">
            <summary>Sets the shim of DirectoryServicesPermission.DirectoryServicesPermission(DirectoryServicesPermissionAccess permissionAccess, String path)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesPermission.ConstructorDirectoryServicesPermissionEntryArray">
            <summary>Sets the shim of DirectoryServicesPermission.DirectoryServicesPermission(DirectoryServicesPermissionEntry[] permissionAccessEntries)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesPermission.ConstructorPermissionState">
            <summary>Sets the shim of DirectoryServicesPermission.DirectoryServicesPermission(PermissionState state)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesPermission.PermissionEntriesGet">
            <summary>Sets the shim of DirectoryServicesPermission.get_PermissionEntries()</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.ShimDirectoryServicesPermission.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesPermission.AllInstances.Clear">
            <summary>Sets the shim of DirectoryServicesPermission.Clear()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesPermission.AllInstances.PermissionEntriesGet">
            <summary>Sets the shim of DirectoryServicesPermission.get_PermissionEntries()</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionAttribute">
            <summary>Shim type of System.DirectoryServices.DirectoryServicesPermissionAttribute</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionAttribute.#ctor(System.DirectoryServices.DirectoryServicesPermissionAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionAttribute.ConstructorSecurityAction">
            <summary>Sets the shim of DirectoryServicesPermissionAttribute.DirectoryServicesPermissionAttribute(SecurityAction action)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionAttribute.CreatePermission">
            <summary>Sets the shim of DirectoryServicesPermissionAttribute.CreatePermission()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionAttribute.PathGet">
            <summary>Sets the shim of DirectoryServicesPermissionAttribute.get_Path()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionAttribute.PathSetString">
            <summary>Sets the shim of DirectoryServicesPermissionAttribute.set_Path(String value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionAttribute.PermissionAccessGet">
            <summary>Sets the shim of DirectoryServicesPermissionAttribute.get_PermissionAccess()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionAttribute.PermissionAccessSetDirectoryServicesPermissionAccess">
            <summary>Sets the shim of DirectoryServicesPermissionAttribute.set_PermissionAccess(DirectoryServicesPermissionAccess value)</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionAttribute.AllInstances.CreatePermission">
            <summary>Sets the shim of DirectoryServicesPermissionAttribute.CreatePermission()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionAttribute.AllInstances.PathGet">
            <summary>Sets the shim of DirectoryServicesPermissionAttribute.get_Path()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionAttribute.AllInstances.PathSetString">
            <summary>Sets the shim of DirectoryServicesPermissionAttribute.set_Path(String value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionAttribute.AllInstances.PermissionAccessGet">
            <summary>Sets the shim of DirectoryServicesPermissionAttribute.get_PermissionAccess()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionAttribute.AllInstances.PermissionAccessSetDirectoryServicesPermissionAccess">
            <summary>Sets the shim of DirectoryServicesPermissionAttribute.set_PermissionAccess(DirectoryServicesPermissionAccess value)</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionEntry">
            <summary>Shim type of System.DirectoryServices.DirectoryServicesPermissionEntry</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionEntry.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionEntry.#ctor(System.DirectoryServices.DirectoryServicesPermissionEntry)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionEntry.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionEntry.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionEntry.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionEntry.ConstructorDirectoryServicesPermissionAccessString">
            <summary>Sets the shim of DirectoryServicesPermissionEntry.DirectoryServicesPermissionEntry(DirectoryServicesPermissionAccess permissionAccess, String path)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionEntry.PathGet">
            <summary>Sets the shim of DirectoryServicesPermissionEntry.get_Path()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionEntry.PermissionAccessGet">
            <summary>Sets the shim of DirectoryServicesPermissionEntry.get_PermissionAccess()</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionEntry.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionEntry.AllInstances.PathGet">
            <summary>Sets the shim of DirectoryServicesPermissionEntry.get_Path()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionEntry.AllInstances.PermissionAccessGet">
            <summary>Sets the shim of DirectoryServicesPermissionEntry.get_PermissionAccess()</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionEntryCollection">
            <summary>Shim type of System.DirectoryServices.DirectoryServicesPermissionEntryCollection</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionEntryCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionEntryCollection.#ctor(System.DirectoryServices.DirectoryServicesPermissionEntryCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionEntryCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionEntryCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionEntryCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionEntryCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionEntryCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionEntryCollection.AddDirectoryServicesPermissionEntry">
            <summary>Sets the shim of DirectoryServicesPermissionEntryCollection.Add(DirectoryServicesPermissionEntry value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionEntryCollection.AddRangeDirectoryServicesPermissionEntryArray">
            <summary>Sets the shim of DirectoryServicesPermissionEntryCollection.AddRange(DirectoryServicesPermissionEntry[] value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionEntryCollection.AddRangeDirectoryServicesPermissionEntryCollection">
            <summary>Sets the shim of DirectoryServicesPermissionEntryCollection.AddRange(DirectoryServicesPermissionEntryCollection value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionEntryCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionEntryCollection.Constructor">
            <summary>Sets the shim of DirectoryServicesPermissionEntryCollection.DirectoryServicesPermissionEntryCollection()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionEntryCollection.ContainsDirectoryServicesPermissionEntry">
            <summary>Sets the shim of DirectoryServicesPermissionEntryCollection.Contains(DirectoryServicesPermissionEntry value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionEntryCollection.CopyToDirectoryServicesPermissionEntryArrayInt32">
            <summary>Sets the shim of DirectoryServicesPermissionEntryCollection.CopyTo(DirectoryServicesPermissionEntry[] array, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionEntryCollection.IndexOfDirectoryServicesPermissionEntry">
            <summary>Sets the shim of DirectoryServicesPermissionEntryCollection.IndexOf(DirectoryServicesPermissionEntry value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionEntryCollection.InsertInt32DirectoryServicesPermissionEntry">
            <summary>Sets the shim of DirectoryServicesPermissionEntryCollection.Insert(Int32 index, DirectoryServicesPermissionEntry value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionEntryCollection.ItemGetInt32">
            <summary>Sets the shim of DirectoryServicesPermissionEntryCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionEntryCollection.ItemSetInt32DirectoryServicesPermissionEntry">
            <summary>Sets the shim of DirectoryServicesPermissionEntryCollection.set_Item(Int32 index, DirectoryServicesPermissionEntry value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionEntryCollection.OnClear">
            <summary>Sets the shim of DirectoryServicesPermissionEntryCollection.OnClear()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionEntryCollection.OnInsertInt32Object">
            <summary>Sets the shim of DirectoryServicesPermissionEntryCollection.OnInsert(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionEntryCollection.OnRemoveInt32Object">
            <summary>Sets the shim of DirectoryServicesPermissionEntryCollection.OnRemove(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionEntryCollection.OnSetInt32ObjectObject">
            <summary>Sets the shim of DirectoryServicesPermissionEntryCollection.OnSet(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionEntryCollection.RemoveDirectoryServicesPermissionEntry">
            <summary>Sets the shim of DirectoryServicesPermissionEntryCollection.Remove(DirectoryServicesPermissionEntry value)</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionEntryCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionEntryCollection.AllInstances.AddDirectoryServicesPermissionEntry">
            <summary>Sets the shim of DirectoryServicesPermissionEntryCollection.Add(DirectoryServicesPermissionEntry value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionEntryCollection.AllInstances.AddRangeDirectoryServicesPermissionEntryArray">
            <summary>Sets the shim of DirectoryServicesPermissionEntryCollection.AddRange(DirectoryServicesPermissionEntry[] value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionEntryCollection.AllInstances.AddRangeDirectoryServicesPermissionEntryCollection">
            <summary>Sets the shim of DirectoryServicesPermissionEntryCollection.AddRange(DirectoryServicesPermissionEntryCollection value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionEntryCollection.AllInstances.ContainsDirectoryServicesPermissionEntry">
            <summary>Sets the shim of DirectoryServicesPermissionEntryCollection.Contains(DirectoryServicesPermissionEntry value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionEntryCollection.AllInstances.CopyToDirectoryServicesPermissionEntryArrayInt32">
            <summary>Sets the shim of DirectoryServicesPermissionEntryCollection.CopyTo(DirectoryServicesPermissionEntry[] array, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionEntryCollection.AllInstances.IndexOfDirectoryServicesPermissionEntry">
            <summary>Sets the shim of DirectoryServicesPermissionEntryCollection.IndexOf(DirectoryServicesPermissionEntry value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionEntryCollection.AllInstances.InsertInt32DirectoryServicesPermissionEntry">
            <summary>Sets the shim of DirectoryServicesPermissionEntryCollection.Insert(Int32 index, DirectoryServicesPermissionEntry value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionEntryCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of DirectoryServicesPermissionEntryCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionEntryCollection.AllInstances.ItemSetInt32DirectoryServicesPermissionEntry">
            <summary>Sets the shim of DirectoryServicesPermissionEntryCollection.set_Item(Int32 index, DirectoryServicesPermissionEntry value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionEntryCollection.AllInstances.OnClear">
            <summary>Sets the shim of DirectoryServicesPermissionEntryCollection.OnClear()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionEntryCollection.AllInstances.OnInsertInt32Object">
            <summary>Sets the shim of DirectoryServicesPermissionEntryCollection.OnInsert(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionEntryCollection.AllInstances.OnRemoveInt32Object">
            <summary>Sets the shim of DirectoryServicesPermissionEntryCollection.OnRemove(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionEntryCollection.AllInstances.OnSetInt32ObjectObject">
            <summary>Sets the shim of DirectoryServicesPermissionEntryCollection.OnSet(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryServicesPermissionEntryCollection.AllInstances.RemoveDirectoryServicesPermissionEntry">
            <summary>Sets the shim of DirectoryServicesPermissionEntryCollection.Remove(DirectoryServicesPermissionEntry value)</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.ShimDirectorySynchronization">
            <summary>Shim type of System.DirectoryServices.DirectorySynchronization</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDirectorySynchronization.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDirectorySynchronization.#ctor(System.DirectoryServices.DirectorySynchronization)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDirectorySynchronization.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDirectorySynchronization.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySynchronization.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySynchronization.Constructor">
            <summary>Sets the shim of DirectorySynchronization.DirectorySynchronization()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySynchronization.ConstructorByteArray">
            <summary>Sets the shim of DirectorySynchronization.DirectorySynchronization(Byte[] cookie)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySynchronization.ConstructorDirectorySynchronization">
            <summary>Sets the shim of DirectorySynchronization.DirectorySynchronization(DirectorySynchronization sync)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySynchronization.ConstructorDirectorySynchronizationOptions">
            <summary>Sets the shim of DirectorySynchronization.DirectorySynchronization(DirectorySynchronizationOptions option)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySynchronization.ConstructorDirectorySynchronizationOptionsByteArray">
            <summary>Sets the shim of DirectorySynchronization.DirectorySynchronization(DirectorySynchronizationOptions option, Byte[] cookie)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySynchronization.Copy">
            <summary>Sets the shim of DirectorySynchronization.Copy()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySynchronization.GetDirectorySynchronizationCookie">
            <summary>Sets the shim of DirectorySynchronization.GetDirectorySynchronizationCookie()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySynchronization.OptionGet">
            <summary>Sets the shim of DirectorySynchronization.get_Option()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySynchronization.OptionSetDirectorySynchronizationOptions">
            <summary>Sets the shim of DirectorySynchronization.set_Option(DirectorySynchronizationOptions value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySynchronization.ResetDirectorySynchronizationCookie">
            <summary>Sets the shim of DirectorySynchronization.ResetDirectorySynchronizationCookie()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySynchronization.ResetDirectorySynchronizationCookieByteArray">
            <summary>Sets the shim of DirectorySynchronization.ResetDirectorySynchronizationCookie(Byte[] cookie)</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.ShimDirectorySynchronization.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySynchronization.AllInstances.Copy">
            <summary>Sets the shim of DirectorySynchronization.Copy()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySynchronization.AllInstances.GetDirectorySynchronizationCookie">
            <summary>Sets the shim of DirectorySynchronization.GetDirectorySynchronizationCookie()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySynchronization.AllInstances.OptionGet">
            <summary>Sets the shim of DirectorySynchronization.get_Option()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySynchronization.AllInstances.OptionSetDirectorySynchronizationOptions">
            <summary>Sets the shim of DirectorySynchronization.set_Option(DirectorySynchronizationOptions value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySynchronization.AllInstances.ResetDirectorySynchronizationCookie">
            <summary>Sets the shim of DirectorySynchronization.ResetDirectorySynchronizationCookie()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectorySynchronization.AllInstances.ResetDirectorySynchronizationCookieByteArray">
            <summary>Sets the shim of DirectorySynchronization.ResetDirectorySynchronizationCookie(Byte[] cookie)</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.ShimDirectoryVirtualListView">
            <summary>Shim type of System.DirectoryServices.DirectoryVirtualListView</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDirectoryVirtualListView.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDirectoryVirtualListView.#ctor(System.DirectoryServices.DirectoryVirtualListView)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDirectoryVirtualListView.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDirectoryVirtualListView.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryVirtualListView.AfterCountGet">
            <summary>Sets the shim of DirectoryVirtualListView.get_AfterCount()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryVirtualListView.AfterCountSetInt32">
            <summary>Sets the shim of DirectoryVirtualListView.set_AfterCount(Int32 value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryVirtualListView.ApproximateTotalGet">
            <summary>Sets the shim of DirectoryVirtualListView.get_ApproximateTotal()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryVirtualListView.ApproximateTotalSetInt32">
            <summary>Sets the shim of DirectoryVirtualListView.set_ApproximateTotal(Int32 value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryVirtualListView.BeforeCountGet">
            <summary>Sets the shim of DirectoryVirtualListView.get_BeforeCount()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryVirtualListView.BeforeCountSetInt32">
            <summary>Sets the shim of DirectoryVirtualListView.set_BeforeCount(Int32 value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryVirtualListView.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryVirtualListView.Constructor">
            <summary>Sets the shim of DirectoryVirtualListView.DirectoryVirtualListView()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryVirtualListView.ConstructorInt32">
            <summary>Sets the shim of DirectoryVirtualListView.DirectoryVirtualListView(Int32 afterCount)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryVirtualListView.ConstructorInt32Int32Int32">
            <summary>Sets the shim of DirectoryVirtualListView.DirectoryVirtualListView(Int32 beforeCount, Int32 afterCount, Int32 offset)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryVirtualListView.ConstructorInt32Int32Int32DirectoryVirtualListViewContext">
            <summary>Sets the shim of DirectoryVirtualListView.DirectoryVirtualListView(Int32 beforeCount, Int32 afterCount, Int32 offset, DirectoryVirtualListViewContext context)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryVirtualListView.ConstructorInt32Int32String">
            <summary>Sets the shim of DirectoryVirtualListView.DirectoryVirtualListView(Int32 beforeCount, Int32 afterCount, String target)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryVirtualListView.ConstructorInt32Int32StringDirectoryVirtualListViewContext">
            <summary>Sets the shim of DirectoryVirtualListView.DirectoryVirtualListView(Int32 beforeCount, Int32 afterCount, String target, DirectoryVirtualListViewContext context)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryVirtualListView.DirectoryVirtualListViewContextGet">
            <summary>Sets the shim of DirectoryVirtualListView.get_DirectoryVirtualListViewContext()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryVirtualListView.DirectoryVirtualListViewContextSetDirectoryVirtualListViewContext">
            <summary>Sets the shim of DirectoryVirtualListView.set_DirectoryVirtualListViewContext(DirectoryVirtualListViewContext value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryVirtualListView.OffsetGet">
            <summary>Sets the shim of DirectoryVirtualListView.get_Offset()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryVirtualListView.OffsetSetInt32">
            <summary>Sets the shim of DirectoryVirtualListView.set_Offset(Int32 value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryVirtualListView.TargetGet">
            <summary>Sets the shim of DirectoryVirtualListView.get_Target()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryVirtualListView.TargetPercentageGet">
            <summary>Sets the shim of DirectoryVirtualListView.get_TargetPercentage()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryVirtualListView.TargetPercentageSetInt32">
            <summary>Sets the shim of DirectoryVirtualListView.set_TargetPercentage(Int32 value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryVirtualListView.TargetSetString">
            <summary>Sets the shim of DirectoryVirtualListView.set_Target(String value)</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.ShimDirectoryVirtualListView.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryVirtualListView.AllInstances.AfterCountGet">
            <summary>Sets the shim of DirectoryVirtualListView.get_AfterCount()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryVirtualListView.AllInstances.AfterCountSetInt32">
            <summary>Sets the shim of DirectoryVirtualListView.set_AfterCount(Int32 value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryVirtualListView.AllInstances.ApproximateTotalGet">
            <summary>Sets the shim of DirectoryVirtualListView.get_ApproximateTotal()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryVirtualListView.AllInstances.ApproximateTotalSetInt32">
            <summary>Sets the shim of DirectoryVirtualListView.set_ApproximateTotal(Int32 value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryVirtualListView.AllInstances.BeforeCountGet">
            <summary>Sets the shim of DirectoryVirtualListView.get_BeforeCount()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryVirtualListView.AllInstances.BeforeCountSetInt32">
            <summary>Sets the shim of DirectoryVirtualListView.set_BeforeCount(Int32 value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryVirtualListView.AllInstances.DirectoryVirtualListViewContextGet">
            <summary>Sets the shim of DirectoryVirtualListView.get_DirectoryVirtualListViewContext()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryVirtualListView.AllInstances.DirectoryVirtualListViewContextSetDirectoryVirtualListViewContext">
            <summary>Sets the shim of DirectoryVirtualListView.set_DirectoryVirtualListViewContext(DirectoryVirtualListViewContext value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryVirtualListView.AllInstances.OffsetGet">
            <summary>Sets the shim of DirectoryVirtualListView.get_Offset()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryVirtualListView.AllInstances.OffsetSetInt32">
            <summary>Sets the shim of DirectoryVirtualListView.set_Offset(Int32 value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryVirtualListView.AllInstances.TargetGet">
            <summary>Sets the shim of DirectoryVirtualListView.get_Target()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryVirtualListView.AllInstances.TargetPercentageGet">
            <summary>Sets the shim of DirectoryVirtualListView.get_TargetPercentage()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryVirtualListView.AllInstances.TargetPercentageSetInt32">
            <summary>Sets the shim of DirectoryVirtualListView.set_TargetPercentage(Int32 value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryVirtualListView.AllInstances.TargetSetString">
            <summary>Sets the shim of DirectoryVirtualListView.set_Target(String value)</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.ShimDirectoryVirtualListViewContext">
            <summary>Shim type of System.DirectoryServices.DirectoryVirtualListViewContext</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDirectoryVirtualListViewContext.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDirectoryVirtualListViewContext.#ctor(System.DirectoryServices.DirectoryVirtualListViewContext)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDirectoryVirtualListViewContext.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimDirectoryVirtualListViewContext.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryVirtualListViewContext.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryVirtualListViewContext.Constructor">
            <summary>Sets the shim of DirectoryVirtualListViewContext.DirectoryVirtualListViewContext()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryVirtualListViewContext.Copy">
            <summary>Sets the shim of DirectoryVirtualListViewContext.Copy()</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.ShimDirectoryVirtualListViewContext.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimDirectoryVirtualListViewContext.AllInstances.Copy">
            <summary>Sets the shim of DirectoryVirtualListViewContext.Copy()</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.ShimExtendedRightAccessRule">
            <summary>Shim type of System.DirectoryServices.ExtendedRightAccessRule</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimExtendedRightAccessRule.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimExtendedRightAccessRule.#ctor(System.DirectoryServices.ExtendedRightAccessRule)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimExtendedRightAccessRule.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimExtendedRightAccessRule.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimExtendedRightAccessRule.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimExtendedRightAccessRule.ConstructorIdentityReferenceAccessControlType">
            <summary>Sets the shim of ExtendedRightAccessRule.ExtendedRightAccessRule(IdentityReference identity, AccessControlType type)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimExtendedRightAccessRule.ConstructorIdentityReferenceAccessControlTypeActiveDirectorySecurityInheritance">
            <summary>Sets the shim of ExtendedRightAccessRule.ExtendedRightAccessRule(IdentityReference identity, AccessControlType type, ActiveDirectorySecurityInheritance inheritanceType)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimExtendedRightAccessRule.ConstructorIdentityReferenceAccessControlTypeActiveDirectorySecurityInheritanceGuid">
            <summary>Sets the shim of ExtendedRightAccessRule.ExtendedRightAccessRule(IdentityReference identity, AccessControlType type, ActiveDirectorySecurityInheritance inheritanceType, Guid inheritedObjectType)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimExtendedRightAccessRule.ConstructorIdentityReferenceAccessControlTypeGuid">
            <summary>Sets the shim of ExtendedRightAccessRule.ExtendedRightAccessRule(IdentityReference identity, AccessControlType type, Guid extendedRightType)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimExtendedRightAccessRule.ConstructorIdentityReferenceAccessControlTypeGuidActiveDirectorySecurityInheritance">
            <summary>Sets the shim of ExtendedRightAccessRule.ExtendedRightAccessRule(IdentityReference identity, AccessControlType type, Guid extendedRightType, ActiveDirectorySecurityInheritance inheritanceType)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimExtendedRightAccessRule.ConstructorIdentityReferenceAccessControlTypeGuidActiveDirectorySecurityInheritanceGuid">
            <summary>Sets the shim of ExtendedRightAccessRule.ExtendedRightAccessRule(IdentityReference identity, AccessControlType type, Guid extendedRightType, ActiveDirectorySecurityInheritance inheritanceType, Guid inheritedObjectType)</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.ShimExtendedRightAccessRule.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.ShimListChildrenAccessRule">
            <summary>Shim type of System.DirectoryServices.ListChildrenAccessRule</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimListChildrenAccessRule.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimListChildrenAccessRule.#ctor(System.DirectoryServices.ListChildrenAccessRule)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimListChildrenAccessRule.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimListChildrenAccessRule.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimListChildrenAccessRule.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimListChildrenAccessRule.ConstructorIdentityReferenceAccessControlType">
            <summary>Sets the shim of ListChildrenAccessRule.ListChildrenAccessRule(IdentityReference identity, AccessControlType type)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimListChildrenAccessRule.ConstructorIdentityReferenceAccessControlTypeActiveDirectorySecurityInheritance">
            <summary>Sets the shim of ListChildrenAccessRule.ListChildrenAccessRule(IdentityReference identity, AccessControlType type, ActiveDirectorySecurityInheritance inheritanceType)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimListChildrenAccessRule.ConstructorIdentityReferenceAccessControlTypeActiveDirectorySecurityInheritanceGuid">
            <summary>Sets the shim of ListChildrenAccessRule.ListChildrenAccessRule(IdentityReference identity, AccessControlType type, ActiveDirectorySecurityInheritance inheritanceType, Guid inheritedObjectType)</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.ShimListChildrenAccessRule.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.ShimPropertyAccessRule">
            <summary>Shim type of System.DirectoryServices.PropertyAccessRule</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimPropertyAccessRule.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimPropertyAccessRule.#ctor(System.DirectoryServices.PropertyAccessRule)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimPropertyAccessRule.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimPropertyAccessRule.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyAccessRule.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyAccessRule.ConstructorIdentityReferenceAccessControlTypePropertyAccess">
            <summary>Sets the shim of PropertyAccessRule.PropertyAccessRule(IdentityReference identity, AccessControlType type, PropertyAccess access)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyAccessRule.ConstructorIdentityReferenceAccessControlTypePropertyAccessActiveDirectorySecurityInheritance">
            <summary>Sets the shim of PropertyAccessRule.PropertyAccessRule(IdentityReference identity, AccessControlType type, PropertyAccess access, ActiveDirectorySecurityInheritance inheritanceType)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyAccessRule.ConstructorIdentityReferenceAccessControlTypePropertyAccessActiveDirectorySecurityInheritanceGuid">
            <summary>Sets the shim of PropertyAccessRule.PropertyAccessRule(IdentityReference identity, AccessControlType type, PropertyAccess access, ActiveDirectorySecurityInheritance inheritanceType, Guid inheritedObjectType)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyAccessRule.ConstructorIdentityReferenceAccessControlTypePropertyAccessGuid">
            <summary>Sets the shim of PropertyAccessRule.PropertyAccessRule(IdentityReference identity, AccessControlType type, PropertyAccess access, Guid propertyType)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyAccessRule.ConstructorIdentityReferenceAccessControlTypePropertyAccessGuidActiveDirectorySecurityInheritance">
            <summary>Sets the shim of PropertyAccessRule.PropertyAccessRule(IdentityReference identity, AccessControlType type, PropertyAccess access, Guid propertyType, ActiveDirectorySecurityInheritance inheritanceType)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyAccessRule.ConstructorIdentityReferenceAccessControlTypePropertyAccessGuidActiveDirectorySecurityInheritanceGuid">
            <summary>Sets the shim of PropertyAccessRule.PropertyAccessRule(IdentityReference identity, AccessControlType type, PropertyAccess access, Guid propertyType, ActiveDirectorySecurityInheritance inheritanceType, Guid inheritedObjectType)</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.ShimPropertyAccessRule.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.ShimPropertyCollection">
            <summary>Shim type of System.DirectoryServices.PropertyCollection</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimPropertyCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimPropertyCollection.#ctor(System.DirectoryServices.PropertyCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimPropertyCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimPropertyCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimPropertyCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimPropertyCollection.Bind(System.Collections.IDictionary)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimPropertyCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyCollection.Constructor">
            <summary>Sets the shim of PropertyCollection.PropertyCollection()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyCollection.ContainsString">
            <summary>Sets the shim of PropertyCollection.Contains(String propertyName)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyCollection.CopyToPropertyValueCollectionArrayInt32">
            <summary>Sets the shim of PropertyCollection.CopyTo(PropertyValueCollection[] array, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyCollection.CountGet">
            <summary>Sets the shim of PropertyCollection.get_Count()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyCollection.GetEnumerator">
            <summary>Sets the shim of PropertyCollection.GetEnumerator()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyCollection.IsFixedSizeSystemCollectionsIDictionaryget">
            <summary>Sets the shim of PropertyCollection.System.Collections.IDictionary.get_IsFixedSize()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyCollection.IsReadOnlySystemCollectionsIDictionaryget">
            <summary>Sets the shim of PropertyCollection.System.Collections.IDictionary.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyCollection.IsSynchronizedSystemCollectionsICollectionget">
            <summary>Sets the shim of PropertyCollection.System.Collections.ICollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyCollection.ItemGetString">
            <summary>Sets the shim of PropertyCollection.get_Item(String propertyName)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyCollection.ItemSystemCollectionsIDictionarygetObject">
            <summary>Sets the shim of PropertyCollection.System.Collections.IDictionary.get_Item(Object key)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyCollection.ItemSystemCollectionsIDictionarysetObjectObject">
            <summary>Sets the shim of PropertyCollection.System.Collections.IDictionary.set_Item(Object key, Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyCollection.KeysSystemCollectionsIDictionaryget">
            <summary>Sets the shim of PropertyCollection.System.Collections.IDictionary.get_Keys()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyCollection.PropertyNamesGet">
            <summary>Sets the shim of PropertyCollection.get_PropertyNames()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyCollection.SyncRootSystemCollectionsICollectionget">
            <summary>Sets the shim of PropertyCollection.System.Collections.ICollection.get_SyncRoot()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyCollection.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>Sets the shim of PropertyCollection.System.Collections.ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyCollection.SystemCollectionsIDictionaryAddObjectObject">
            <summary>Sets the shim of PropertyCollection.System.Collections.IDictionary.Add(Object key, Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyCollection.SystemCollectionsIDictionaryClear">
            <summary>Sets the shim of PropertyCollection.System.Collections.IDictionary.Clear()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyCollection.SystemCollectionsIDictionaryContainsObject">
            <summary>Sets the shim of PropertyCollection.System.Collections.IDictionary.Contains(Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyCollection.SystemCollectionsIDictionaryRemoveObject">
            <summary>Sets the shim of PropertyCollection.System.Collections.IDictionary.Remove(Object key)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyCollection.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of PropertyCollection.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyCollection.ValuesGet">
            <summary>Sets the shim of PropertyCollection.get_Values()</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.ShimPropertyCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyCollection.AllInstances.Constructor">
            <summary>Sets the shim of PropertyCollection.PropertyCollection()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyCollection.AllInstances.ContainsString">
            <summary>Sets the shim of PropertyCollection.Contains(String propertyName)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyCollection.AllInstances.CopyToPropertyValueCollectionArrayInt32">
            <summary>Sets the shim of PropertyCollection.CopyTo(PropertyValueCollection[] array, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyCollection.AllInstances.CountGet">
            <summary>Sets the shim of PropertyCollection.get_Count()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyCollection.AllInstances.GetEnumerator">
            <summary>Sets the shim of PropertyCollection.GetEnumerator()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyCollection.AllInstances.IsFixedSizeSystemCollectionsIDictionaryget">
            <summary>Sets the shim of PropertyCollection.System.Collections.IDictionary.get_IsFixedSize()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyCollection.AllInstances.IsReadOnlySystemCollectionsIDictionaryget">
            <summary>Sets the shim of PropertyCollection.System.Collections.IDictionary.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyCollection.AllInstances.IsSynchronizedSystemCollectionsICollectionget">
            <summary>Sets the shim of PropertyCollection.System.Collections.ICollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyCollection.AllInstances.ItemGetString">
            <summary>Sets the shim of PropertyCollection.get_Item(String propertyName)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyCollection.AllInstances.ItemSystemCollectionsIDictionarygetObject">
            <summary>Sets the shim of PropertyCollection.System.Collections.IDictionary.get_Item(Object key)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyCollection.AllInstances.ItemSystemCollectionsIDictionarysetObjectObject">
            <summary>Sets the shim of PropertyCollection.System.Collections.IDictionary.set_Item(Object key, Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyCollection.AllInstances.KeysSystemCollectionsIDictionaryget">
            <summary>Sets the shim of PropertyCollection.System.Collections.IDictionary.get_Keys()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyCollection.AllInstances.PropertyNamesGet">
            <summary>Sets the shim of PropertyCollection.get_PropertyNames()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyCollection.AllInstances.SyncRootSystemCollectionsICollectionget">
            <summary>Sets the shim of PropertyCollection.System.Collections.ICollection.get_SyncRoot()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyCollection.AllInstances.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>Sets the shim of PropertyCollection.System.Collections.ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyCollection.AllInstances.SystemCollectionsIDictionaryAddObjectObject">
            <summary>Sets the shim of PropertyCollection.System.Collections.IDictionary.Add(Object key, Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyCollection.AllInstances.SystemCollectionsIDictionaryClear">
            <summary>Sets the shim of PropertyCollection.System.Collections.IDictionary.Clear()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyCollection.AllInstances.SystemCollectionsIDictionaryContainsObject">
            <summary>Sets the shim of PropertyCollection.System.Collections.IDictionary.Contains(Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyCollection.AllInstances.SystemCollectionsIDictionaryRemoveObject">
            <summary>Sets the shim of PropertyCollection.System.Collections.IDictionary.Remove(Object key)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyCollection.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of PropertyCollection.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyCollection.AllInstances.ValuesGet">
            <summary>Sets the shim of PropertyCollection.get_Values()</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.ShimPropertySetAccessRule">
            <summary>Shim type of System.DirectoryServices.PropertySetAccessRule</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimPropertySetAccessRule.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimPropertySetAccessRule.#ctor(System.DirectoryServices.PropertySetAccessRule)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimPropertySetAccessRule.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimPropertySetAccessRule.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertySetAccessRule.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertySetAccessRule.ConstructorIdentityReferenceAccessControlTypePropertyAccessGuid">
            <summary>Sets the shim of PropertySetAccessRule.PropertySetAccessRule(IdentityReference identity, AccessControlType type, PropertyAccess access, Guid propertySetType)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertySetAccessRule.ConstructorIdentityReferenceAccessControlTypePropertyAccessGuidActiveDirectorySecurityInheritance">
            <summary>Sets the shim of PropertySetAccessRule.PropertySetAccessRule(IdentityReference identity, AccessControlType type, PropertyAccess access, Guid propertySetType, ActiveDirectorySecurityInheritance inheritanceType)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertySetAccessRule.ConstructorIdentityReferenceAccessControlTypePropertyAccessGuidActiveDirectorySecurityInheritanceGuid">
            <summary>Sets the shim of PropertySetAccessRule.PropertySetAccessRule(IdentityReference identity, AccessControlType type, PropertyAccess access, Guid propertySetType, ActiveDirectorySecurityInheritance inheritanceType, Guid inheritedObjectType)</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.ShimPropertySetAccessRule.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.ShimPropertyValueCollection">
            <summary>Shim type of System.DirectoryServices.PropertyValueCollection</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimPropertyValueCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimPropertyValueCollection.#ctor(System.DirectoryServices.PropertyValueCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimPropertyValueCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimPropertyValueCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimPropertyValueCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimPropertyValueCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimPropertyValueCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyValueCollection.AddObject">
            <summary>Sets the shim of PropertyValueCollection.Add(Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyValueCollection.AddRangeObjectArray">
            <summary>Sets the shim of PropertyValueCollection.AddRange(Object[] value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyValueCollection.AddRangePropertyValueCollection">
            <summary>Sets the shim of PropertyValueCollection.AddRange(PropertyValueCollection value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyValueCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyValueCollection.Constructor">
            <summary>Sets the shim of PropertyValueCollection.PropertyValueCollection()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyValueCollection.ContainsObject">
            <summary>Sets the shim of PropertyValueCollection.Contains(Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyValueCollection.CopyToObjectArrayInt32">
            <summary>Sets the shim of PropertyValueCollection.CopyTo(Object[] array, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyValueCollection.IndexOfObject">
            <summary>Sets the shim of PropertyValueCollection.IndexOf(Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyValueCollection.InsertInt32Object">
            <summary>Sets the shim of PropertyValueCollection.Insert(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyValueCollection.ItemGetInt32">
            <summary>Sets the shim of PropertyValueCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyValueCollection.ItemSetInt32Object">
            <summary>Sets the shim of PropertyValueCollection.set_Item(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyValueCollection.OnClearComplete">
            <summary>Sets the shim of PropertyValueCollection.OnClearComplete()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyValueCollection.OnInsertCompleteInt32Object">
            <summary>Sets the shim of PropertyValueCollection.OnInsertComplete(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyValueCollection.OnRemoveCompleteInt32Object">
            <summary>Sets the shim of PropertyValueCollection.OnRemoveComplete(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyValueCollection.OnSetCompleteInt32ObjectObject">
            <summary>Sets the shim of PropertyValueCollection.OnSetComplete(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyValueCollection.PropertyNameGet">
            <summary>Sets the shim of PropertyValueCollection.get_PropertyName()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyValueCollection.RemoveObject">
            <summary>Sets the shim of PropertyValueCollection.Remove(Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyValueCollection.ValueGet">
            <summary>Sets the shim of PropertyValueCollection.get_Value()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyValueCollection.ValueSetObject">
            <summary>Sets the shim of PropertyValueCollection.set_Value(Object value)</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.ShimPropertyValueCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyValueCollection.AllInstances.AddObject">
            <summary>Sets the shim of PropertyValueCollection.Add(Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyValueCollection.AllInstances.AddRangeObjectArray">
            <summary>Sets the shim of PropertyValueCollection.AddRange(Object[] value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyValueCollection.AllInstances.AddRangePropertyValueCollection">
            <summary>Sets the shim of PropertyValueCollection.AddRange(PropertyValueCollection value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyValueCollection.AllInstances.Constructor">
            <summary>Sets the shim of PropertyValueCollection.PropertyValueCollection()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyValueCollection.AllInstances.ContainsObject">
            <summary>Sets the shim of PropertyValueCollection.Contains(Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyValueCollection.AllInstances.CopyToObjectArrayInt32">
            <summary>Sets the shim of PropertyValueCollection.CopyTo(Object[] array, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyValueCollection.AllInstances.IndexOfObject">
            <summary>Sets the shim of PropertyValueCollection.IndexOf(Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyValueCollection.AllInstances.InsertInt32Object">
            <summary>Sets the shim of PropertyValueCollection.Insert(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyValueCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of PropertyValueCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyValueCollection.AllInstances.ItemSetInt32Object">
            <summary>Sets the shim of PropertyValueCollection.set_Item(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyValueCollection.AllInstances.OnClearComplete">
            <summary>Sets the shim of PropertyValueCollection.OnClearComplete()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyValueCollection.AllInstances.OnInsertCompleteInt32Object">
            <summary>Sets the shim of PropertyValueCollection.OnInsertComplete(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyValueCollection.AllInstances.OnRemoveCompleteInt32Object">
            <summary>Sets the shim of PropertyValueCollection.OnRemoveComplete(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyValueCollection.AllInstances.OnSetCompleteInt32ObjectObject">
            <summary>Sets the shim of PropertyValueCollection.OnSetComplete(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyValueCollection.AllInstances.PropertyNameGet">
            <summary>Sets the shim of PropertyValueCollection.get_PropertyName()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyValueCollection.AllInstances.RemoveObject">
            <summary>Sets the shim of PropertyValueCollection.Remove(Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyValueCollection.AllInstances.ValueGet">
            <summary>Sets the shim of PropertyValueCollection.get_Value()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimPropertyValueCollection.AllInstances.ValueSetObject">
            <summary>Sets the shim of PropertyValueCollection.set_Value(Object value)</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.ShimResultPropertyCollection">
            <summary>Shim type of System.DirectoryServices.ResultPropertyCollection</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimResultPropertyCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimResultPropertyCollection.#ctor(System.DirectoryServices.ResultPropertyCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimResultPropertyCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimResultPropertyCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimResultPropertyCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimResultPropertyCollection.Bind(System.Collections.IDictionary)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimResultPropertyCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimResultPropertyCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimResultPropertyCollection.Constructor">
            <summary>Sets the shim of ResultPropertyCollection.ResultPropertyCollection()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimResultPropertyCollection.ContainsString">
            <summary>Sets the shim of ResultPropertyCollection.Contains(String propertyName)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimResultPropertyCollection.CopyToResultPropertyValueCollectionArrayInt32">
            <summary>Sets the shim of ResultPropertyCollection.CopyTo(ResultPropertyValueCollection[] array, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimResultPropertyCollection.ItemGetString">
            <summary>Sets the shim of ResultPropertyCollection.get_Item(String name)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimResultPropertyCollection.PropertyNamesGet">
            <summary>Sets the shim of ResultPropertyCollection.get_PropertyNames()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimResultPropertyCollection.ValuesGet">
            <summary>Sets the shim of ResultPropertyCollection.get_Values()</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.ShimResultPropertyCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimResultPropertyCollection.AllInstances.ContainsString">
            <summary>Sets the shim of ResultPropertyCollection.Contains(String propertyName)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimResultPropertyCollection.AllInstances.CopyToResultPropertyValueCollectionArrayInt32">
            <summary>Sets the shim of ResultPropertyCollection.CopyTo(ResultPropertyValueCollection[] array, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimResultPropertyCollection.AllInstances.ItemGetString">
            <summary>Sets the shim of ResultPropertyCollection.get_Item(String name)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimResultPropertyCollection.AllInstances.PropertyNamesGet">
            <summary>Sets the shim of ResultPropertyCollection.get_PropertyNames()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimResultPropertyCollection.AllInstances.ValuesGet">
            <summary>Sets the shim of ResultPropertyCollection.get_Values()</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.ShimResultPropertyValueCollection">
            <summary>Shim type of System.DirectoryServices.ResultPropertyValueCollection</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimResultPropertyValueCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimResultPropertyValueCollection.#ctor(System.DirectoryServices.ResultPropertyValueCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimResultPropertyValueCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimResultPropertyValueCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimResultPropertyValueCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimResultPropertyValueCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimResultPropertyValueCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimResultPropertyValueCollection.Constructor">
            <summary>Sets the shim of ResultPropertyValueCollection.ResultPropertyValueCollection()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimResultPropertyValueCollection.ContainsObject">
            <summary>Sets the shim of ResultPropertyValueCollection.Contains(Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimResultPropertyValueCollection.CopyToObjectArrayInt32">
            <summary>Sets the shim of ResultPropertyValueCollection.CopyTo(Object[] values, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimResultPropertyValueCollection.IndexOfObject">
            <summary>Sets the shim of ResultPropertyValueCollection.IndexOf(Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimResultPropertyValueCollection.ItemGetInt32">
            <summary>Sets the shim of ResultPropertyValueCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.ShimResultPropertyValueCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimResultPropertyValueCollection.AllInstances.Constructor">
            <summary>Sets the shim of ResultPropertyValueCollection.ResultPropertyValueCollection()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimResultPropertyValueCollection.AllInstances.ContainsObject">
            <summary>Sets the shim of ResultPropertyValueCollection.Contains(Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimResultPropertyValueCollection.AllInstances.CopyToObjectArrayInt32">
            <summary>Sets the shim of ResultPropertyValueCollection.CopyTo(Object[] values, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimResultPropertyValueCollection.AllInstances.IndexOfObject">
            <summary>Sets the shim of ResultPropertyValueCollection.IndexOf(Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimResultPropertyValueCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of ResultPropertyValueCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.ShimSchemaNameCollection">
            <summary>Shim type of System.DirectoryServices.SchemaNameCollection</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimSchemaNameCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimSchemaNameCollection.#ctor(System.DirectoryServices.SchemaNameCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimSchemaNameCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimSchemaNameCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimSchemaNameCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimSchemaNameCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimSchemaNameCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSchemaNameCollection.AddRangeSchemaNameCollection">
            <summary>Sets the shim of SchemaNameCollection.AddRange(SchemaNameCollection value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSchemaNameCollection.AddRangeStringArray">
            <summary>Sets the shim of SchemaNameCollection.AddRange(String[] value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSchemaNameCollection.AddString">
            <summary>Sets the shim of SchemaNameCollection.Add(String value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSchemaNameCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSchemaNameCollection.Clear">
            <summary>Sets the shim of SchemaNameCollection.Clear()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSchemaNameCollection.Constructor">
            <summary>Sets the shim of SchemaNameCollection.SchemaNameCollection()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSchemaNameCollection.ContainsString">
            <summary>Sets the shim of SchemaNameCollection.Contains(String value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSchemaNameCollection.CopyToStringArrayInt32">
            <summary>Sets the shim of SchemaNameCollection.CopyTo(String[] stringArray, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSchemaNameCollection.CountGet">
            <summary>Sets the shim of SchemaNameCollection.get_Count()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSchemaNameCollection.GetEnumerator">
            <summary>Sets the shim of SchemaNameCollection.GetEnumerator()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSchemaNameCollection.IndexOfString">
            <summary>Sets the shim of SchemaNameCollection.IndexOf(String value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSchemaNameCollection.InsertInt32String">
            <summary>Sets the shim of SchemaNameCollection.Insert(Int32 index, String value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSchemaNameCollection.IsFixedSizeSystemCollectionsIListget">
            <summary>Sets the shim of SchemaNameCollection.System.Collections.IList.get_IsFixedSize()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSchemaNameCollection.IsReadOnlySystemCollectionsIListget">
            <summary>Sets the shim of SchemaNameCollection.System.Collections.IList.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSchemaNameCollection.IsSynchronizedSystemCollectionsICollectionget">
            <summary>Sets the shim of SchemaNameCollection.System.Collections.ICollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSchemaNameCollection.ItemGetInt32">
            <summary>Sets the shim of SchemaNameCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSchemaNameCollection.ItemSetInt32String">
            <summary>Sets the shim of SchemaNameCollection.set_Item(Int32 index, String value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSchemaNameCollection.ItemSystemCollectionsIListgetInt32">
            <summary>Sets the shim of SchemaNameCollection.System.Collections.IList.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSchemaNameCollection.ItemSystemCollectionsIListsetInt32Object">
            <summary>Sets the shim of SchemaNameCollection.System.Collections.IList.set_Item(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSchemaNameCollection.RemoveAtInt32">
            <summary>Sets the shim of SchemaNameCollection.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSchemaNameCollection.RemoveString">
            <summary>Sets the shim of SchemaNameCollection.Remove(String value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSchemaNameCollection.SyncRootSystemCollectionsICollectionget">
            <summary>Sets the shim of SchemaNameCollection.System.Collections.ICollection.get_SyncRoot()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSchemaNameCollection.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>Sets the shim of SchemaNameCollection.System.Collections.ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSchemaNameCollection.SystemCollectionsIListAddObject">
            <summary>Sets the shim of SchemaNameCollection.System.Collections.IList.Add(Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSchemaNameCollection.SystemCollectionsIListContainsObject">
            <summary>Sets the shim of SchemaNameCollection.System.Collections.IList.Contains(Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSchemaNameCollection.SystemCollectionsIListIndexOfObject">
            <summary>Sets the shim of SchemaNameCollection.System.Collections.IList.IndexOf(Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSchemaNameCollection.SystemCollectionsIListInsertInt32Object">
            <summary>Sets the shim of SchemaNameCollection.System.Collections.IList.Insert(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSchemaNameCollection.SystemCollectionsIListRemoveObject">
            <summary>Sets the shim of SchemaNameCollection.System.Collections.IList.Remove(Object value)</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.ShimSchemaNameCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSchemaNameCollection.AllInstances.AddRangeSchemaNameCollection">
            <summary>Sets the shim of SchemaNameCollection.AddRange(SchemaNameCollection value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSchemaNameCollection.AllInstances.AddRangeStringArray">
            <summary>Sets the shim of SchemaNameCollection.AddRange(String[] value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSchemaNameCollection.AllInstances.AddString">
            <summary>Sets the shim of SchemaNameCollection.Add(String value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSchemaNameCollection.AllInstances.Clear">
            <summary>Sets the shim of SchemaNameCollection.Clear()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSchemaNameCollection.AllInstances.Constructor">
            <summary>Sets the shim of SchemaNameCollection.SchemaNameCollection()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSchemaNameCollection.AllInstances.ContainsString">
            <summary>Sets the shim of SchemaNameCollection.Contains(String value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSchemaNameCollection.AllInstances.CopyToStringArrayInt32">
            <summary>Sets the shim of SchemaNameCollection.CopyTo(String[] stringArray, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSchemaNameCollection.AllInstances.CountGet">
            <summary>Sets the shim of SchemaNameCollection.get_Count()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSchemaNameCollection.AllInstances.GetEnumerator">
            <summary>Sets the shim of SchemaNameCollection.GetEnumerator()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSchemaNameCollection.AllInstances.IndexOfString">
            <summary>Sets the shim of SchemaNameCollection.IndexOf(String value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSchemaNameCollection.AllInstances.InsertInt32String">
            <summary>Sets the shim of SchemaNameCollection.Insert(Int32 index, String value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSchemaNameCollection.AllInstances.IsFixedSizeSystemCollectionsIListget">
            <summary>Sets the shim of SchemaNameCollection.System.Collections.IList.get_IsFixedSize()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSchemaNameCollection.AllInstances.IsReadOnlySystemCollectionsIListget">
            <summary>Sets the shim of SchemaNameCollection.System.Collections.IList.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSchemaNameCollection.AllInstances.IsSynchronizedSystemCollectionsICollectionget">
            <summary>Sets the shim of SchemaNameCollection.System.Collections.ICollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSchemaNameCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of SchemaNameCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSchemaNameCollection.AllInstances.ItemSetInt32String">
            <summary>Sets the shim of SchemaNameCollection.set_Item(Int32 index, String value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSchemaNameCollection.AllInstances.ItemSystemCollectionsIListgetInt32">
            <summary>Sets the shim of SchemaNameCollection.System.Collections.IList.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSchemaNameCollection.AllInstances.ItemSystemCollectionsIListsetInt32Object">
            <summary>Sets the shim of SchemaNameCollection.System.Collections.IList.set_Item(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSchemaNameCollection.AllInstances.RemoveAtInt32">
            <summary>Sets the shim of SchemaNameCollection.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSchemaNameCollection.AllInstances.RemoveString">
            <summary>Sets the shim of SchemaNameCollection.Remove(String value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSchemaNameCollection.AllInstances.SyncRootSystemCollectionsICollectionget">
            <summary>Sets the shim of SchemaNameCollection.System.Collections.ICollection.get_SyncRoot()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSchemaNameCollection.AllInstances.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>Sets the shim of SchemaNameCollection.System.Collections.ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSchemaNameCollection.AllInstances.SystemCollectionsIListAddObject">
            <summary>Sets the shim of SchemaNameCollection.System.Collections.IList.Add(Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSchemaNameCollection.AllInstances.SystemCollectionsIListContainsObject">
            <summary>Sets the shim of SchemaNameCollection.System.Collections.IList.Contains(Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSchemaNameCollection.AllInstances.SystemCollectionsIListIndexOfObject">
            <summary>Sets the shim of SchemaNameCollection.System.Collections.IList.IndexOf(Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSchemaNameCollection.AllInstances.SystemCollectionsIListInsertInt32Object">
            <summary>Sets the shim of SchemaNameCollection.System.Collections.IList.Insert(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSchemaNameCollection.AllInstances.SystemCollectionsIListRemoveObject">
            <summary>Sets the shim of SchemaNameCollection.System.Collections.IList.Remove(Object value)</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.ShimSearchResult">
            <summary>Shim type of System.DirectoryServices.SearchResult</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimSearchResult.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimSearchResult.#ctor(System.DirectoryServices.SearchResult)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimSearchResult.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimSearchResult.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSearchResult.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSearchResult.Constructor">
            <summary>Sets the shim of SearchResult.SearchResult()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSearchResult.GetDirectoryEntry">
            <summary>Sets the shim of SearchResult.GetDirectoryEntry()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSearchResult.PathGet">
            <summary>Sets the shim of SearchResult.get_Path()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSearchResult.PropertiesGet">
            <summary>Sets the shim of SearchResult.get_Properties()</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.ShimSearchResult.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSearchResult.AllInstances.Constructor">
            <summary>Sets the shim of SearchResult.SearchResult()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSearchResult.AllInstances.GetDirectoryEntry">
            <summary>Sets the shim of SearchResult.GetDirectoryEntry()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSearchResult.AllInstances.PathGet">
            <summary>Sets the shim of SearchResult.get_Path()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSearchResult.AllInstances.PropertiesGet">
            <summary>Sets the shim of SearchResult.get_Properties()</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.ShimSearchResultCollection">
            <summary>Shim type of System.DirectoryServices.SearchResultCollection</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimSearchResultCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimSearchResultCollection.#ctor(System.DirectoryServices.SearchResultCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimSearchResultCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimSearchResultCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimSearchResultCollection.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimSearchResultCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimSearchResultCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSearchResultCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSearchResultCollection.Constructor">
            <summary>Sets the shim of SearchResultCollection.SearchResultCollection()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSearchResultCollection.ContainsSearchResult">
            <summary>Sets the shim of SearchResultCollection.Contains(SearchResult result)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSearchResultCollection.CopyToSearchResultArrayInt32">
            <summary>Sets the shim of SearchResultCollection.CopyTo(SearchResult[] results, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSearchResultCollection.CountGet">
            <summary>Sets the shim of SearchResultCollection.get_Count()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSearchResultCollection.Dispose">
            <summary>Sets the shim of SearchResultCollection.Dispose()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSearchResultCollection.DisposeBoolean">
            <summary>Sets the shim of SearchResultCollection.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSearchResultCollection.GetEnumerator">
            <summary>Sets the shim of SearchResultCollection.GetEnumerator()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSearchResultCollection.HandleGet">
            <summary>Sets the shim of SearchResultCollection.get_Handle()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSearchResultCollection.IndexOfSearchResult">
            <summary>Sets the shim of SearchResultCollection.IndexOf(SearchResult result)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSearchResultCollection.IsSynchronizedSystemCollectionsICollectionget">
            <summary>Sets the shim of SearchResultCollection.System.Collections.ICollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSearchResultCollection.ItemGetInt32">
            <summary>Sets the shim of SearchResultCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSearchResultCollection.PropertiesLoadedGet">
            <summary>Sets the shim of SearchResultCollection.get_PropertiesLoaded()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSearchResultCollection.SyncRootSystemCollectionsICollectionget">
            <summary>Sets the shim of SearchResultCollection.System.Collections.ICollection.get_SyncRoot()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSearchResultCollection.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>Sets the shim of SearchResultCollection.System.Collections.ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.ShimSearchResultCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSearchResultCollection.AllInstances.Constructor">
            <summary>Sets the shim of SearchResultCollection.SearchResultCollection()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSearchResultCollection.AllInstances.ContainsSearchResult">
            <summary>Sets the shim of SearchResultCollection.Contains(SearchResult result)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSearchResultCollection.AllInstances.CopyToSearchResultArrayInt32">
            <summary>Sets the shim of SearchResultCollection.CopyTo(SearchResult[] results, Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSearchResultCollection.AllInstances.CountGet">
            <summary>Sets the shim of SearchResultCollection.get_Count()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSearchResultCollection.AllInstances.Dispose">
            <summary>Sets the shim of SearchResultCollection.Dispose()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSearchResultCollection.AllInstances.DisposeBoolean">
            <summary>Sets the shim of SearchResultCollection.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSearchResultCollection.AllInstances.GetEnumerator">
            <summary>Sets the shim of SearchResultCollection.GetEnumerator()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSearchResultCollection.AllInstances.HandleGet">
            <summary>Sets the shim of SearchResultCollection.get_Handle()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSearchResultCollection.AllInstances.IndexOfSearchResult">
            <summary>Sets the shim of SearchResultCollection.IndexOf(SearchResult result)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSearchResultCollection.AllInstances.IsSynchronizedSystemCollectionsICollectionget">
            <summary>Sets the shim of SearchResultCollection.System.Collections.ICollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSearchResultCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of SearchResultCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSearchResultCollection.AllInstances.PropertiesLoadedGet">
            <summary>Sets the shim of SearchResultCollection.get_PropertiesLoaded()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSearchResultCollection.AllInstances.SyncRootSystemCollectionsICollectionget">
            <summary>Sets the shim of SearchResultCollection.System.Collections.ICollection.get_SyncRoot()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSearchResultCollection.AllInstances.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>Sets the shim of SearchResultCollection.System.Collections.ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.ShimSortOption">
            <summary>Shim type of System.DirectoryServices.SortOption</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimSortOption.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimSortOption.#ctor(System.DirectoryServices.SortOption)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimSortOption.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.ShimSortOption.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSortOption.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSortOption.Constructor">
            <summary>Sets the shim of SortOption.SortOption()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSortOption.ConstructorStringSortDirection">
            <summary>Sets the shim of SortOption.SortOption(String propertyName, SortDirection direction)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSortOption.DirectionGet">
            <summary>Sets the shim of SortOption.get_Direction()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSortOption.DirectionSetSortDirection">
            <summary>Sets the shim of SortOption.set_Direction(SortDirection value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSortOption.PropertyNameGet">
            <summary>Sets the shim of SortOption.get_PropertyName()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSortOption.PropertyNameSetString">
            <summary>Sets the shim of SortOption.set_PropertyName(String value)</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.ShimSortOption.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSortOption.AllInstances.DirectionGet">
            <summary>Sets the shim of SortOption.get_Direction()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSortOption.AllInstances.DirectionSetSortDirection">
            <summary>Sets the shim of SortOption.set_Direction(SortDirection value)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSortOption.AllInstances.PropertyNameGet">
            <summary>Sets the shim of SortOption.get_PropertyName()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.ShimSortOption.AllInstances.PropertyNameSetString">
            <summary>Sets the shim of SortOption.set_PropertyName(String value)</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.StubActiveDirectoryAccessRule">
            <summary>Stub type of System.DirectoryServices.ActiveDirectoryAccessRule</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.Guid)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubActiveDirectoryAccessRule.InitializeStub">
            <summary>Initializes a new instance of type StubActiveDirectoryAccessRule</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.StubActiveDirectoryAccessRule.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.StubActiveDirectoryAccessRule.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.StubActiveDirectoryAccessRule.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.StubActiveDirectoryAuditRule">
            <summary>Stub type of System.DirectoryServices.ActiveDirectoryAuditRule</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.Guid)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubActiveDirectoryAuditRule.InitializeStub">
            <summary>Initializes a new instance of type StubActiveDirectoryAuditRule</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.StubActiveDirectoryAuditRule.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.StubActiveDirectoryAuditRule.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.StubActiveDirectoryAuditRule.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.StubActiveDirectorySecurity">
            <summary>Stub type of System.DirectoryServices.ActiveDirectorySecurity</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubActiveDirectorySecurity.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:System.DirectoryServices.Fakes.StubActiveDirectorySecurity.AccessRightTypeGet">
            <summary>Sets the stub of ActiveDirectorySecurity.get_AccessRightType()</summary>
        </member>
        <member name="F:System.DirectoryServices.Fakes.StubActiveDirectorySecurity.AccessRuleTypeGet">
            <summary>Sets the stub of ActiveDirectorySecurity.get_AccessRuleType()</summary>
        </member>
        <member name="F:System.DirectoryServices.Fakes.StubActiveDirectorySecurity.AuditRuleTypeGet">
            <summary>Sets the stub of ActiveDirectorySecurity.get_AuditRuleType()</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubActiveDirectorySecurity.InitializeStub">
            <summary>Initializes a new instance of type StubActiveDirectorySecurity</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubActiveDirectorySecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)">
            <summary>Sets the stub of DirectoryObjectSecurity.ModifyAccess(AccessControlModification modification, AccessRule rule, Boolean&amp; modified)</summary>
        </member>
        <member name="F:System.DirectoryServices.Fakes.StubActiveDirectorySecurity.ModifyAccessAccessControlModificationAccessRuleBooleanOut">
            <summary>Sets the stub of DirectoryObjectSecurity.ModifyAccess(AccessControlModification modification, AccessRule rule, Boolean&amp; modified)</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubActiveDirectorySecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)">
            <summary>Sets the stub of ActiveDirectorySecurity.ModifyAccessRule(AccessControlModification modification, AccessRule rule, Boolean&amp; modified)</summary>
        </member>
        <member name="F:System.DirectoryServices.Fakes.StubActiveDirectorySecurity.ModifyAccessRuleAccessControlModificationAccessRuleBooleanOut">
            <summary>Sets the stub of ActiveDirectorySecurity.ModifyAccessRule(AccessControlModification modification, AccessRule rule, Boolean&amp; modified)</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubActiveDirectorySecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)">
            <summary>Sets the stub of DirectoryObjectSecurity.ModifyAudit(AccessControlModification modification, AuditRule rule, Boolean&amp; modified)</summary>
        </member>
        <member name="F:System.DirectoryServices.Fakes.StubActiveDirectorySecurity.ModifyAuditAccessControlModificationAuditRuleBooleanOut">
            <summary>Sets the stub of DirectoryObjectSecurity.ModifyAudit(AccessControlModification modification, AuditRule rule, Boolean&amp; modified)</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubActiveDirectorySecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)">
            <summary>Sets the stub of ActiveDirectorySecurity.ModifyAuditRule(AccessControlModification modification, AuditRule rule, Boolean&amp; modified)</summary>
        </member>
        <member name="F:System.DirectoryServices.Fakes.StubActiveDirectorySecurity.ModifyAuditRuleAccessControlModificationAuditRuleBooleanOut">
            <summary>Sets the stub of ActiveDirectorySecurity.ModifyAuditRule(AccessControlModification modification, AuditRule rule, Boolean&amp; modified)</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubActiveDirectorySecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)">
            <summary>Sets the stub of ObjectSecurity.Persist(String name, AccessControlSections includeSections)</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubActiveDirectorySecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)">
            <summary>Sets the stub of ObjectSecurity.Persist(SafeHandle handle, AccessControlSections includeSections)</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubActiveDirectorySecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)">
            <summary>Sets the stub of ObjectSecurity.Persist(Boolean enableOwnershipPrivilege, String name, AccessControlSections includeSections)</summary>
        </member>
        <member name="F:System.DirectoryServices.Fakes.StubActiveDirectorySecurity.PersistBooleanStringAccessControlSections">
            <summary>Sets the stub of ObjectSecurity.Persist(Boolean enableOwnershipPrivilege, String name, AccessControlSections includeSections)</summary>
        </member>
        <member name="F:System.DirectoryServices.Fakes.StubActiveDirectorySecurity.PersistSafeHandleAccessControlSections">
            <summary>Sets the stub of ObjectSecurity.Persist(SafeHandle handle, AccessControlSections includeSections)</summary>
        </member>
        <member name="F:System.DirectoryServices.Fakes.StubActiveDirectorySecurity.PersistStringAccessControlSections">
            <summary>Sets the stub of ObjectSecurity.Persist(String name, AccessControlSections includeSections)</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubActiveDirectorySecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)">
            <summary>Sets the stub of ActiveDirectorySecurity.PurgeAccessRules(IdentityReference identity)</summary>
        </member>
        <member name="F:System.DirectoryServices.Fakes.StubActiveDirectorySecurity.PurgeAccessRulesIdentityReference">
            <summary>Sets the stub of ActiveDirectorySecurity.PurgeAccessRules(IdentityReference identity)</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubActiveDirectorySecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)">
            <summary>Sets the stub of ActiveDirectorySecurity.PurgeAuditRules(IdentityReference identity)</summary>
        </member>
        <member name="F:System.DirectoryServices.Fakes.StubActiveDirectorySecurity.PurgeAuditRulesIdentityReference">
            <summary>Sets the stub of ActiveDirectorySecurity.PurgeAuditRules(IdentityReference identity)</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.StubActiveDirectorySecurity.AccessRightType">
            <summary>Sets the stub of ActiveDirectorySecurity.get_AccessRightType()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.StubActiveDirectorySecurity.AccessRuleType">
            <summary>Sets the stub of ActiveDirectorySecurity.get_AccessRuleType()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.StubActiveDirectorySecurity.AuditRuleType">
            <summary>Sets the stub of ActiveDirectorySecurity.get_AuditRuleType()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.StubActiveDirectorySecurity.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.StubActiveDirectorySecurity.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.StubActiveDirectorySecurity.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.StubDSDescriptionAttribute">
            <summary>Stub type of System.DirectoryServices.DSDescriptionAttribute</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubDSDescriptionAttribute.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:System.DirectoryServices.Fakes.StubDSDescriptionAttribute.DescriptionGet">
            <summary>Sets the stub of DSDescriptionAttribute.get_Description()</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubDSDescriptionAttribute.Equals(System.Object)">
            <summary>Sets the stub of DescriptionAttribute.Equals(Object obj)</summary>
        </member>
        <member name="F:System.DirectoryServices.Fakes.StubDSDescriptionAttribute.EqualsObject">
            <summary>Sets the stub of DescriptionAttribute.Equals(Object obj)</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubDSDescriptionAttribute.GetHashCode">
            <summary>Sets the stub of DescriptionAttribute.GetHashCode()</summary>
        </member>
        <member name="F:System.DirectoryServices.Fakes.StubDSDescriptionAttribute.GetHashCode01">
            <summary>Sets the stub of DescriptionAttribute.GetHashCode()</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubDSDescriptionAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubDSDescriptionAttribute</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubDSDescriptionAttribute.IsDefaultAttribute">
            <summary>Sets the stub of DescriptionAttribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:System.DirectoryServices.Fakes.StubDSDescriptionAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of DescriptionAttribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubDSDescriptionAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.DirectoryServices.Fakes.StubDSDescriptionAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.DirectoryServices.Fakes.StubDSDescriptionAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.StubDSDescriptionAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.StubDSDescriptionAttribute.Description">
            <summary>Sets the stub of DSDescriptionAttribute.get_Description()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.StubDSDescriptionAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.StubDSDescriptionAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.StubDSDescriptionAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.StubDirectoryEntry">
            <summary>Stub type of System.DirectoryServices.DirectoryEntry</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubDirectoryEntry.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubDirectoryEntry.#ctor(System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubDirectoryEntry.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubDirectoryEntry.#ctor(System.String,System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubDirectoryEntry.#ctor(System.String,System.String,System.String,System.DirectoryServices.AuthenticationTypes)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubDirectoryEntry.AttachBackingFieldToSite">
            <summary>Attaches delegates to emulate StubDirectoryEntry.Site as a property with a backing field.</summary>
        </member>
        <member name="F:System.DirectoryServices.Fakes.StubDirectoryEntry.CanRaiseEventsGet">
            <summary>Sets the stub of Component.get_CanRaiseEvents()</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubDirectoryEntry.Dispose(System.Boolean)">
            <summary>Sets the stub of DirectoryEntry.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.DirectoryServices.Fakes.StubDirectoryEntry.DisposeBoolean">
            <summary>Sets the stub of DirectoryEntry.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubDirectoryEntry.GetService(System.Type)">
            <summary>Sets the stub of Component.GetService(Type service)</summary>
        </member>
        <member name="F:System.DirectoryServices.Fakes.StubDirectoryEntry.GetServiceType">
            <summary>Sets the stub of Component.GetService(Type service)</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubDirectoryEntry.InitializeStub">
            <summary>Initializes a new instance of type StubDirectoryEntry</summary>
        </member>
        <member name="F:System.DirectoryServices.Fakes.StubDirectoryEntry.SiteGet">
            <summary>Sets the stub of Component.get_Site()</summary>
        </member>
        <member name="F:System.DirectoryServices.Fakes.StubDirectoryEntry.SiteSetISite">
            <summary>Sets the stub of Component.set_Site(ISite value)</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubDirectoryEntry.ToString">
            <summary>Sets the stub of Component.ToString()</summary>
        </member>
        <member name="F:System.DirectoryServices.Fakes.StubDirectoryEntry.ToString01">
            <summary>Sets the stub of Component.ToString()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.StubDirectoryEntry.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.StubDirectoryEntry.CanRaiseEvents">
            <summary>Sets the stub of Component.get_CanRaiseEvents()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.StubDirectoryEntry.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.StubDirectoryEntry.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.StubDirectoryEntry.Site">
            <summary>Sets the stub of Component.get_Site()</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.StubDirectorySearcher">
            <summary>Stub type of System.DirectoryServices.DirectorySearcher</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubDirectorySearcher.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubDirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubDirectorySearcher.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubDirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubDirectorySearcher.#ctor(System.String,System.String[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubDirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubDirectorySearcher.#ctor(System.String,System.String[],System.DirectoryServices.SearchScope)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubDirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[],System.DirectoryServices.SearchScope)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubDirectorySearcher.AttachBackingFieldToSite">
            <summary>Attaches delegates to emulate StubDirectorySearcher.Site as a property with a backing field.</summary>
        </member>
        <member name="F:System.DirectoryServices.Fakes.StubDirectorySearcher.CanRaiseEventsGet">
            <summary>Sets the stub of Component.get_CanRaiseEvents()</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubDirectorySearcher.Dispose(System.Boolean)">
            <summary>Sets the stub of DirectorySearcher.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.DirectoryServices.Fakes.StubDirectorySearcher.DisposeBoolean">
            <summary>Sets the stub of DirectorySearcher.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubDirectorySearcher.GetService(System.Type)">
            <summary>Sets the stub of Component.GetService(Type service)</summary>
        </member>
        <member name="F:System.DirectoryServices.Fakes.StubDirectorySearcher.GetServiceType">
            <summary>Sets the stub of Component.GetService(Type service)</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubDirectorySearcher.InitializeStub">
            <summary>Initializes a new instance of type StubDirectorySearcher</summary>
        </member>
        <member name="F:System.DirectoryServices.Fakes.StubDirectorySearcher.SiteGet">
            <summary>Sets the stub of Component.get_Site()</summary>
        </member>
        <member name="F:System.DirectoryServices.Fakes.StubDirectorySearcher.SiteSetISite">
            <summary>Sets the stub of Component.set_Site(ISite value)</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubDirectorySearcher.ToString">
            <summary>Sets the stub of Component.ToString()</summary>
        </member>
        <member name="F:System.DirectoryServices.Fakes.StubDirectorySearcher.ToString01">
            <summary>Sets the stub of Component.ToString()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.StubDirectorySearcher.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.StubDirectorySearcher.CanRaiseEvents">
            <summary>Sets the stub of Component.get_CanRaiseEvents()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.StubDirectorySearcher.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.StubDirectorySearcher.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.StubDirectorySearcher.Site">
            <summary>Sets the stub of Component.get_Site()</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.StubDirectoryServicesCOMException">
            <summary>Stub type of System.DirectoryServices.DirectoryServicesCOMException</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubDirectoryServicesCOMException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubDirectoryServicesCOMException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubDirectoryServicesCOMException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubDirectoryServicesCOMException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubDirectoryServicesCOMException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubDirectoryServicesCOMException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubDirectoryServicesCOMException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubDirectoryServicesCOMException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:System.DirectoryServices.Fakes.StubDirectoryServicesCOMException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="F:System.DirectoryServices.Fakes.StubDirectoryServicesCOMException.ErrorCodeGet">
            <summary>Sets the stub of ExternalException.get_ErrorCode()</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubDirectoryServicesCOMException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.DirectoryServices.Fakes.StubDirectoryServicesCOMException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubDirectoryServicesCOMException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of DirectoryServicesCOMException.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="F:System.DirectoryServices.Fakes.StubDirectoryServicesCOMException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of DirectoryServicesCOMException.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="F:System.DirectoryServices.Fakes.StubDirectoryServicesCOMException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.DirectoryServices.Fakes.StubDirectoryServicesCOMException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubDirectoryServicesCOMException.InitializeStub">
            <summary>Initializes a new instance of type StubDirectoryServicesCOMException</summary>
        </member>
        <member name="F:System.DirectoryServices.Fakes.StubDirectoryServicesCOMException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:System.DirectoryServices.Fakes.StubDirectoryServicesCOMException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:System.DirectoryServices.Fakes.StubDirectoryServicesCOMException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.DirectoryServices.Fakes.StubDirectoryServicesCOMException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubDirectoryServicesCOMException.ToString">
            <summary>Sets the stub of COMException.ToString()</summary>
        </member>
        <member name="F:System.DirectoryServices.Fakes.StubDirectoryServicesCOMException.ToString01">
            <summary>Sets the stub of COMException.ToString()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.StubDirectoryServicesCOMException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.StubDirectoryServicesCOMException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.StubDirectoryServicesCOMException.ErrorCode">
            <summary>Sets the stub of ExternalException.get_ErrorCode()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.StubDirectoryServicesCOMException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.StubDirectoryServicesCOMException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.StubDirectoryServicesCOMException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.StubDirectoryServicesCOMException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.StubDirectoryServicesCOMException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.StubDirectoryServicesCOMException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.StubDirectoryServicesPermissionAttribute">
            <summary>Stub type of System.DirectoryServices.DirectoryServicesPermissionAttribute</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubDirectoryServicesPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubDirectoryServicesPermissionAttribute.CreatePermission">
            <summary>Sets the stub of DirectoryServicesPermissionAttribute.CreatePermission()</summary>
        </member>
        <member name="F:System.DirectoryServices.Fakes.StubDirectoryServicesPermissionAttribute.CreatePermission01">
            <summary>Sets the stub of DirectoryServicesPermissionAttribute.CreatePermission()</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubDirectoryServicesPermissionAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:System.DirectoryServices.Fakes.StubDirectoryServicesPermissionAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubDirectoryServicesPermissionAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:System.DirectoryServices.Fakes.StubDirectoryServicesPermissionAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubDirectoryServicesPermissionAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubDirectoryServicesPermissionAttribute</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubDirectoryServicesPermissionAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:System.DirectoryServices.Fakes.StubDirectoryServicesPermissionAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubDirectoryServicesPermissionAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.DirectoryServices.Fakes.StubDirectoryServicesPermissionAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.DirectoryServices.Fakes.StubDirectoryServicesPermissionAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.StubDirectoryServicesPermissionAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.StubDirectoryServicesPermissionAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.StubDirectoryServicesPermissionAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.StubDirectoryServicesPermissionAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.StubDirectoryServicesPermissionEntry">
            <summary>Stub type of System.DirectoryServices.DirectoryServicesPermissionEntry</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubDirectoryServicesPermissionEntry.#ctor(System.DirectoryServices.DirectoryServicesPermissionAccess,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubDirectoryServicesPermissionEntry.InitializeStub">
            <summary>Initializes a new instance of type StubDirectoryServicesPermissionEntry</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.StubDirectoryServicesPermissionEntry.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.StubDirectoryServicesPermissionEntry.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.StubDirectoryServicesPermissionEntry.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.StubDirectorySynchronization">
            <summary>Stub type of System.DirectoryServices.DirectorySynchronization</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubDirectorySynchronization.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubDirectorySynchronization.#ctor(System.DirectoryServices.DirectorySynchronizationOptions)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubDirectorySynchronization.#ctor(System.DirectoryServices.DirectorySynchronization)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubDirectorySynchronization.#ctor(System.Byte[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubDirectorySynchronization.#ctor(System.DirectoryServices.DirectorySynchronizationOptions,System.Byte[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubDirectorySynchronization.InitializeStub">
            <summary>Initializes a new instance of type StubDirectorySynchronization</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.StubDirectorySynchronization.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.StubDirectorySynchronization.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.StubDirectorySynchronization.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.StubDirectoryVirtualListView">
            <summary>Stub type of System.DirectoryServices.DirectoryVirtualListView</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubDirectoryVirtualListView.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubDirectoryVirtualListView.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubDirectoryVirtualListView.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubDirectoryVirtualListView.#ctor(System.Int32,System.Int32,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubDirectoryVirtualListView.#ctor(System.Int32,System.Int32,System.Int32,System.DirectoryServices.DirectoryVirtualListViewContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubDirectoryVirtualListView.#ctor(System.Int32,System.Int32,System.String,System.DirectoryServices.DirectoryVirtualListViewContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubDirectoryVirtualListView.InitializeStub">
            <summary>Initializes a new instance of type StubDirectoryVirtualListView</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.StubDirectoryVirtualListView.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.StubDirectoryVirtualListView.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.StubDirectoryVirtualListView.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.StubDirectoryVirtualListViewContext">
            <summary>Stub type of System.DirectoryServices.DirectoryVirtualListViewContext</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubDirectoryVirtualListViewContext.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubDirectoryVirtualListViewContext.InitializeStub">
            <summary>Initializes a new instance of type StubDirectoryVirtualListViewContext</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.StubDirectoryVirtualListViewContext.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.StubDirectoryVirtualListViewContext.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.StubDirectoryVirtualListViewContext.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.DirectoryServices.Fakes.StubSortOption">
            <summary>Stub type of System.DirectoryServices.SortOption</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubSortOption.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubSortOption.#ctor(System.String,System.DirectoryServices.SortDirection)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.DirectoryServices.Fakes.StubSortOption.InitializeStub">
            <summary>Initializes a new instance of type StubSortOption</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.StubSortOption.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.StubSortOption.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.DirectoryServices.Fakes.StubSortOption.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
    </members>
</doc>
